O:41:"Symfony\Component\HttpFoundation\Response":6:{s:7:"headers";O:50:"Symfony\Component\HttpFoundation\ResponseHeaderBag":5:{s:23:" * computedCacheControl";a:2:{s:8:"no-cache";b:1;s:7:"private";b:1;}s:10:" * cookies";a:0:{}s:14:" * headerNames";a:2:{s:13:"cache-control";s:13:"Cache-Control";s:4:"date";s:4:"Date";}s:10:" * headers";a:2:{s:13:"cache-control";a:1:{i:0;s:17:"no-cache, private";}s:4:"date";a:1:{i:0;s:29:"Thu, 23 Mar 2023 05:29:24 GMT";}}s:15:" * cacheControl";a:0:{}}s:10:" * content";s:37748:"<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8" />
    <title>    Mapa kategorii - Porownywarka.co
</title>
    <meta name="description" content="" />
            <meta name="viewport" content="width=device-width, initial-scale=1">


    <link rel="canonical" href="http://localhost:8000/mapa-kategorii"/>
        <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="/css/bootstrap.css" media="screen">
    <link rel="stylesheet" href="/css/owl.carousel.css">
    <link rel="stylesheet" href="/css/jquery.bxslider.css">
    <link rel="stylesheet" href="/css/theme-bootstrap.css">
    <link rel="stylesheet" href="/css/ecommerce-theme-bootstrap.css">
    <link href="/css/jquery.growl.css" rel="stylesheet" type="text/css"/>
    <link href="//maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css" rel="stylesheet">
        <script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js"></script>

    <!-- HTML5 shim and Respond.js IE8 support of HTML5 elements and media queries -->
    <!--[if lt IE 9]>
    <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
    <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->

    <script type="text/javascript">
        function search() {
            var url = 'http://localhost:8000/produkty-produkt:_PHRASE_VALUE_.html';
            var phrase = $('#phraseInput').val().trim().toLowerCase();
            if (!phrase) {
                alert('Pole do wyszukiwania nie może być puste');
                return false;
            }
            phrase = phrase.replace(/\s+/g, '-');
            location.href = url.replace('_PHRASE_VALUE_', encodeURIComponent(phrase));
            return false;
        }

        $(function () {
            $('#searchFrom').on('submit', function () {
                return search()
            });
            $('#buttonSearch').on('click', function () {
                return search()
            });
        });
    </script>
    </head>
<body>
    <div class="navbar navbar-default navbar-fixed-top yamm">
        <div class="container">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse"
                        data-target=".navbar-responsive-collapse">
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                <a class="navbar-brand" href="/">Porownywarka.co</a>
            </div>
            <div class="navbar-collapse collapse navbar-responsive-collapse">

                <ul class="nav navbar-nav">
            <li class="dropdown yamm-fw ">
            <a href="#" data-toggle="dropdown" class="dropdown-toggle">Kategorie I <b class="caret"></b></a>
            <ul class="dropdown-menu">
                <li>
                    <div class="row">

                        <div class="col-sm-3">

                            <ul class="dropdown-menu dropdown-menu-inner">
                                <li class="dropdown-header">Kategorie</li>
                                                                    <li><a href="http://localhost:8000/kategoria-muzyka" title="Muzyka">Muzyka</a></li>
                                                                    <li><a href="http://localhost:8000/kategoria-filmy" title="Filmy">Filmy</a></li>
                                                                    <li><a href="http://localhost:8000/kategoria-fotografia-i-optyka" title="Fotografia i optyka">Fotografia i optyka</a></li>
                                                                    <li><a href="http://localhost:8000/kategoria-komputery" title="Komputery">Komputery</a></li>
                                                                    <li><a href="http://localhost:8000/kategoria-albumy" title="Albumy">Albumy</a></li>
                                                                    <li><a href="http://localhost:8000/kategoria-sprzet-rtv" title="Sprzęt RTV">Sprzęt RTV</a></li>
                                                                    <li><a href="http://localhost:8000/kategoria-sprzet-agd" title="Sprzęt AGD">Sprzęt AGD</a></li>
                                                                    <li><a href="http://localhost:8000/kategoria-gry-i-konsole" title="Gry i konsole">Gry i konsole</a></li>
                                                            </ul>

                        </div>
                                                    <div class="col-sm-9">

                                <div class="row">
                                    <div class="col-sm-12 col-xs-12">
                                        <span class="dropdown-header dropdown-header-no-list">Popularne produkty</span>
                                    </div>
                                </div>

                                <div class="row">
                                                                            <div class="col-md-2 col-xs-4">
                                            <a href="http://localhost:8000/produkt-sluchawki/sony-mdr-rf895.html">
                                                <div class="product tiny">
                                                    <div class="image">
                                                        <img class='img-responsive' src="http://offers.gallery/p-fe-57-fe5750ad73040ae221f65cfbcaae163a90x90/sony-mdr-rf895.jpg" />
                                                    </div>
                                                    <span class="price">od 379,04 PLN</span>
                                                    <h5 class="title">Sony MDR-RF895</h5>
                                                </div>
                                            </a>
                                        </div>
                                                                            <div class="col-md-2 col-xs-4">
                                            <a href="http://localhost:8000/produkt-sluchawki/jbl-t225.html">
                                                <div class="product tiny">
                                                    <div class="image">
                                                        <img class='img-responsive' src="http://offers.gallery/p-3f-41-3f41a1801783ad7c74f0f9443a3c28f390x90/jbl-t225.jpg" />
                                                    </div>
                                                    <span class="price">od 399,00 PLN</span>
                                                    <h5 class="title">JBL T225</h5>
                                                </div>
                                            </a>
                                        </div>
                                                                            <div class="col-md-2 col-xs-4">
                                            <a href="http://localhost:8000/produkt-roboty-kuchenne/robot-planetarny-bosch-mum9bx5s65-optimum-zamow-z-dostawa-jutro-darmowy-transport.html">
                                                <div class="product tiny">
                                                    <div class="image">
                                                        <img class='img-responsive' src="http://offers.gallery/p-1d-ea-1dea070b6aba94bbdfc11d80263673f190x90/robot-planetarny-bosch-mum9bx5s65-optimum-43-zamw-z-dostaw-jutro-43-darmowy-transport-kolor-srebrny.jpg" />
                                                    </div>
                                                    <span class="price">od 3649,00 PLN</span>
                                                    <h5 class="title">Robot planetarny BOSCH MUM9BX5S65 Optimum &#43; Zamów z DOSTAWĄ JUTRO! &#43; DARMOWY TRANSPORT!, kolor srebrny</h5>
                                                </div>
                                            </a>
                                        </div>
                                                                            <div class="col-md-2 col-xs-4">
                                            <a href="http://localhost:8000/produkt-sluchawki/beats-by-dr-dre-studio-3.html">
                                                <div class="product tiny">
                                                    <div class="image">
                                                        <img class='img-responsive' src="http://offers.gallery/p-0a-e8-0ae87a96abbc3ccf37d1f3a05f17d3a490x90/beats-by-dr-dre-studio-3.jpg" />
                                                    </div>
                                                    <span class="price">od 1299,00 PLN</span>
                                                    <h5 class="title">Beats by Dr. Dre Studio 3</h5>
                                                </div>
                                            </a>
                                        </div>
                                                                            <div class="col-md-2 col-xs-4">
                                            <a href="http://localhost:8000/produkt-sluchawki/sony-wf-1000.html">
                                                <div class="product tiny">
                                                    <div class="image">
                                                        <img class='img-responsive' src="http://offers.gallery/p-6d-d6-6dd67f7b817841b6e3cb91c81ec30c7390x90/sony-wf-1000.jpg" />
                                                    </div>
                                                    <span class="price">od 499,99 PLN</span>
                                                    <h5 class="title">Sony WF-1000</h5>
                                                </div>
                                            </a>
                                        </div>
                                                                            <div class="col-md-2 col-xs-4">
                                            <a href="http://localhost:8000/produkt-sluchawki/xiaomi-redmi-buds-3.html">
                                                <div class="product tiny">
                                                    <div class="image">
                                                        <img class='img-responsive' src="http://offers.gallery/p-cd-ad-cdad5f581d0024667108791ce91b13f490x90/xiaomi-redmi-buds-3.jpg" />
                                                    </div>
                                                    <span class="price">od 79,95 PLN</span>
                                                    <h5 class="title">Xiaomi Redmi Buds 3</h5>
                                                </div>
                                            </a>
                                        </div>
                                                                    </div>

                            </div>
                                            </div>
                </li>
            </ul>
        </li>
                <li class="dropdown yamm-fw ">
            <a href="#" data-toggle="dropdown" class="dropdown-toggle">Kategorie II <b class="caret"></b></a>
            <ul class="dropdown-menu">
                <li>
                    <div class="row">

                        <div class="col-sm-3">

                            <ul class="dropdown-menu dropdown-menu-inner">
                                <li class="dropdown-header">Kategorie</li>
                                                                    <li><a href="http://localhost:8000/kategoria-inne" title="Inne">Inne</a></li>
                                                                    <li><a href="http://localhost:8000/kategoria-telefony-i-akcesoria" title="Telefony i akcesoria">Telefony i akcesoria</a></li>
                                                                    <li><a href="http://localhost:8000/kategoria-motoryzacja" title="Motoryzacja">Motoryzacja</a></li>
                                                                    <li><a href="http://localhost:8000/kategoria-zdrowie" title="Zdrowie">Zdrowie</a></li>
                                                                    <li><a href="http://localhost:8000/kategoria-moda-i-styl" title="Moda i styl">Moda i styl</a></li>
                                                                    <li><a href="http://localhost:8000/kategoria-sport-i-hobby" title="Sport i hobby">Sport i hobby</a></li>
                                                                    <li><a href="http://localhost:8000/kategoria-delikatesy" title="Delikatesy">Delikatesy</a></li>
                                                            </ul>

                        </div>
                                                    <div class="col-sm-9">

                                <div class="row">
                                    <div class="col-sm-12 col-xs-12">
                                        <span class="dropdown-header dropdown-header-no-list">Popularne produkty</span>
                                    </div>
                                </div>

                                <div class="row">
                                                                            <div class="col-md-2 col-xs-4">
                                            <a href="http://localhost:8000/produkt-bieznie/bieznia-elektryczna-kinetic-2900.html">
                                                <div class="product tiny">
                                                    <div class="image">
                                                        <img class='img-responsive' src="http://offers.gallery/p-9d-14-9d145773c53a6844b286bfb45d1cf8ed90x90/bienia-elektryczna-kinetic-2900-4260495759791.jpg" />
                                                    </div>
                                                    <span class="price">999,00 PLN</span>
                                                    <h5 class="title">Bieżnia elektryczna Kinetic 2900 (4260495759791)</h5>
                                                </div>
                                            </a>
                                        </div>
                                                                            <div class="col-md-2 col-xs-4">
                                            <a href="http://localhost:8000/produkt-telefony-komorkowe/samsung-galaxy-s20-fe-5g-sm-g781.html">
                                                <div class="product tiny">
                                                    <div class="image">
                                                        <img class='img-responsive' src="http://offers.gallery/p-39-68-396882215d00a7811b9ab789dab51aa190x90/samsung-galaxy-s20-fe-5g-sm-g781.jpg" />
                                                    </div>
                                                    <span class="price">od 1977,00 PLN</span>
                                                    <h5 class="title">Samsung Galaxy S20 FE 5G SM-G781</h5>
                                                </div>
                                            </a>
                                        </div>
                                                                            <div class="col-md-2 col-xs-4">
                                            <a href="http://localhost:8000/produkt-bieznie/bieznia-elektryczna-kinetic-do-10-km.html">
                                                <div class="product tiny">
                                                    <div class="image">
                                                        <img class='img-responsive' src="http://offers.gallery/p-dd-8d-dd8d07585cd08e9442f64a43eb83ac4d90x90/bienia-elektryczna-kinetic-do-10-km-4260495754925.jpg" />
                                                    </div>
                                                    <span class="price">od 799,00 PLN</span>
                                                    <h5 class="title">Bieżnia elektryczna Kinetic do 10 km (4260495754925)</h5>
                                                </div>
                                            </a>
                                        </div>
                                                                            <div class="col-md-2 col-xs-4">
                                            <a href="http://localhost:8000/produkt-telefony-komorkowe/apple-iphone-11-64gb.html">
                                                <div class="product tiny">
                                                    <div class="image">
                                                        <img class='img-responsive' src="http://offers.gallery/p-7b-a4-7ba42684bfa28bd9deb05cadfed989db90x90/apple-iphone-11-64gb.jpg" />
                                                    </div>
                                                    <span class="price">od 2199,00 PLN</span>
                                                    <h5 class="title">Apple iPhone 11 64GB</h5>
                                                </div>
                                            </a>
                                        </div>
                                                                            <div class="col-md-2 col-xs-4">
                                            <a href="http://localhost:8000/produkt-telefony-komorkowe/samsung-galaxy-m23.html">
                                                <div class="product tiny">
                                                    <div class="image">
                                                        <img class='img-responsive' src="http://offers.gallery/p-4b-93-4b93cf43b244aa554ffb7042ba34860890x90/samsung-galaxy-m23.jpg" />
                                                    </div>
                                                    <span class="price">od 949,00 PLN</span>
                                                    <h5 class="title">Samsung Galaxy M23</h5>
                                                </div>
                                            </a>
                                        </div>
                                                                            <div class="col-md-2 col-xs-4">
                                            <a href="http://localhost:8000/produkt-zarowki-ksenonowe-samochodowe/zarowki-2szt-samochodowe-h7-12v-xenon-h-i-d-blue-vision-moc-55w-lub-100w-homologowane-d7d3050e0abf6d33e2e4331a92a702b0.html">
                                                <div class="product tiny">
                                                    <div class="image">
                                                        <img class='img-responsive' src="http://offers.gallery/p-f3-69-f3690effca20b69d9024be22204fd43290x90/arwki-2szt-samochodowe-h7-12v-xenon-hid-blue-vision-moc-55w-lub-100w-homologowane-marki-lumiko-usajk.jpg" />
                                                    </div>
                                                    <span class="price">73,00 PLN</span>
                                                    <h5 class="title">Żarówki (2szt.) samochodowe h7 (12v) xenon h.i.d. blue vision (moc 55w lub 100w) - homologowane. marki Lumiko usa/jk</h5>
                                                </div>
                                            </a>
                                        </div>
                                                                    </div>

                            </div>
                                            </div>
                </li>
            </ul>
        </li>
                <li class="dropdown yamm-fw ">
            <a href="#" data-toggle="dropdown" class="dropdown-toggle">Kategorie III <b class="caret"></b></a>
            <ul class="dropdown-menu">
                <li>
                    <div class="row">

                        <div class="col-sm-3">

                            <ul class="dropdown-menu dropdown-menu-inner">
                                <li class="dropdown-header">Kategorie</li>
                                                                    <li><a href="http://localhost:8000/kategoria-dla-dzieci" title="Dla dzieci">Dla dzieci</a></li>
                                                                    <li><a href="http://localhost:8000/kategoria-prezenty" title="Prezenty">Prezenty</a></li>
                                                                    <li><a href="http://localhost:8000/kategoria-kosmetyki" title="Kosmetyki">Kosmetyki</a></li>
                                                                    <li><a href="http://localhost:8000/kategoria-erotyka" title="Erotyka">Erotyka</a></li>
                                                                    <li><a href="http://localhost:8000/kategoria-biznes" title="Biznes">Biznes</a></li>
                                                                    <li><a href="http://localhost:8000/kategoria-dom-i-ogrod" title="Dom i ogród">Dom i ogród</a></li>
                                                                    <li><a href="http://localhost:8000/kategoria-narzedzia" title="Narzędzia">Narzędzia</a></li>
                                                            </ul>

                        </div>
                                                    <div class="col-sm-9">

                                <div class="row">
                                    <div class="col-sm-12 col-xs-12">
                                        <span class="dropdown-header dropdown-header-no-list">Popularne produkty</span>
                                    </div>
                                </div>

                                <div class="row">
                                                                            <div class="col-md-2 col-xs-4">
                                            <a href="http://localhost:8000/produkt-lustra-lazienkowe/lustro-lazienkowe-podswietlane-led-80x60cm-73f54d3292c0136242647de5a50201a4.html">
                                                <div class="product tiny">
                                                    <div class="image">
                                                        <img class='img-responsive' src="http://offers.gallery/p-d4-db-d4db2393d96f8f5ac49ebca45f3564d890x90/lustro-azienkowe-podwietlane-led-80x60cm-led4-80x60cm.jpg" />
                                                    </div>
                                                    <span class="price">399,00 PLN</span>
                                                    <h5 class="title">Lustro łazienkowe podświetlane led 80x60cm, LED4 80x60cm</h5>
                                                </div>
                                            </a>
                                        </div>
                                                                            <div class="col-md-2 col-xs-4">
                                            <a href="http://localhost:8000/produkt-drzwi-prysznicowe/drzwi-prysznicowe-przesuwne-liniger-d20-premium.html">
                                                <div class="product tiny">
                                                    <div class="image">
                                                        <img class='img-responsive' src="http://offers.gallery/p-52-ae-52ae3bbfeafacdf5b16db012181b4c2d90x90/drzwi-prysznicowe-przesuwne-liniger-d20-premium.jpg" />
                                                    </div>
                                                    <span class="price">1309,00 PLN</span>
                                                    <h5 class="title">Drzwi Prysznicowe Przesuwne Liniger D20 PREMIUM</h5>
                                                </div>
                                            </a>
                                        </div>
                                                                            <div class="col-md-2 col-xs-4">
                                            <a href="http://localhost:8000/produkt-pily-lancuchowe/imoum-live-lancuchowa-mini-pila-elektryczna.html">
                                                <div class="product tiny">
                                                    <div class="image">
                                                        <img class='img-responsive' src="http://offers.gallery/p-9d-80-9d80cf4079f092f17984b56fb2e1c75e90x90/imoum-live-acuchowa-mini-pia-elektryczna.jpg" />
                                                    </div>
                                                    <span class="price">549,00 PLN</span>
                                                    <h5 class="title">Imoum Live Łańcuchowa mini piła elektryczna</h5>
                                                </div>
                                            </a>
                                        </div>
                                                                            <div class="col-md-2 col-xs-4">
                                            <a href="http://localhost:8000/produkt-pozostale-poza-domem/daszek-zadaszenie-systemowe-drzwi-modern-300x060-a072f751415d59bd5570d3bc2654357b.html">
                                                <div class="product tiny">
                                                    <div class="image">
                                                        <img class='img-responsive' src="http://offers.gallery/p-91-6b-916b644d5ac7d82fdb5fa8e158e61ed590x90/metal-gum-daszek-zadaszenie-systemowe-drzwi-modern-300x060.jpg" />
                                                    </div>
                                                    <span class="price">289,00 PLN</span>
                                                    <h5 class="title">Metal-gum Daszek zadaszenie systemowe drzwi modern 300x060</h5>
                                                </div>
                                            </a>
                                        </div>
                                                                            <div class="col-md-2 col-xs-4">
                                            <a href="http://localhost:8000/produkt-wertykulatory/wertykulator-i-aerator-einhell-gc-sa-1231-2w1.html">
                                                <div class="product tiny">
                                                    <div class="image">
                                                        <img class='img-responsive' src="http://offers.gallery/p-88-26-8826f253afe94dbc610f62214590675090x90/einhell-wertykulator-i-aerator-gc-sa-1231-2w1.jpg" />
                                                    </div>
                                                    <span class="price">551,99 PLN</span>
                                                    <h5 class="title">Einhell Wertykulator i aerator gc-sa 1231 2w1</h5>
                                                </div>
                                            </a>
                                        </div>
                                                                            <div class="col-md-2 col-xs-4">
                                            <a href="http://localhost:8000/produkt-pozostale-poza-domem/daszek-zadaszenie-proste-drzwi-270-x-100-1199bd3bf9f942069a64a446df5b4633.html">
                                                <div class="product tiny">
                                                    <div class="image">
                                                        <img class='img-responsive' src="http://offers.gallery/p-92-c2-92c2c25470a62d2aa6052fd29103b11890x90/daszek-zadaszenie-proste-drzwi-270-x-100.jpg" />
                                                    </div>
                                                    <span class="price">949,00 PLN</span>
                                                    <h5 class="title">Daszek Zadaszenie Proste Drzwi 270 x 100</h5>
                                                </div>
                                            </a>
                                        </div>
                                                                    </div>

                            </div>
                                            </div>
                </li>
            </ul>
        </li>
    </ul>
                <form id="searchFrom" class="navbar-form navbar-right">
                    <div class="input-group input-group-with-btn">
                        <input id="phraseInput" type="text" class="form-control input-lg"
                               value="" placeholder="Szukam...">
                        <span class="input-group-btn">
                  <button id="buttonSearch" class="btn btn-link" type="button"><i class="fa fa-search"></i></button>
                </span>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <div class="container top">

                                    <div class="row">
                    <div class="col-lg-12 col-md-12 col-sm-12">
                        <ul class="breadcrumb">
                            <li><a href="/">Porownywarka.co</a></li>
                                                                                                <li class="active">Mapa kategorii</li>
                                                                                    </ul>
                    </div>
                </div>
                    
            <div class="row category">
        <div class="col-md-12 col-sm-12">

            <div class="row category-details">
                <div class="col-xs-11">
                    <h1>Mapa kategorii</h1>
                </div>
                <div class="col-xs-1 text-right">

                </div>
            </div>

            <div class="row category-products">

                <div class="col-xs-12">

                                            <div>
                                                            <h3>Kategorie I</h3>
                                <ul>
                                                                            <li><a href="http://localhost:8000/kategoria-muzyka"
                                               title="Muzyka">Muzyka</a></li>
                                                                            <li><a href="http://localhost:8000/kategoria-filmy"
                                               title="Filmy">Filmy</a></li>
                                                                            <li><a href="http://localhost:8000/kategoria-fotografia-i-optyka"
                                               title="Fotografia i optyka">Fotografia i optyka</a></li>
                                                                            <li><a href="http://localhost:8000/kategoria-komputery"
                                               title="Komputery">Komputery</a></li>
                                                                            <li><a href="http://localhost:8000/kategoria-albumy"
                                               title="Albumy">Albumy</a></li>
                                                                            <li><a href="http://localhost:8000/kategoria-sprzet-rtv"
                                               title="Sprzęt RTV">Sprzęt RTV</a></li>
                                                                            <li><a href="http://localhost:8000/kategoria-sprzet-agd"
                                               title="Sprzęt AGD">Sprzęt AGD</a></li>
                                                                            <li><a href="http://localhost:8000/kategoria-gry-i-konsole"
                                               title="Gry i konsole">Gry i konsole</a></li>
                                                                    </ul>
                                                    </div>
                                            <div>
                                                            <h3>Kategorie II</h3>
                                <ul>
                                                                            <li><a href="http://localhost:8000/kategoria-inne"
                                               title="Inne">Inne</a></li>
                                                                            <li><a href="http://localhost:8000/kategoria-telefony-i-akcesoria"
                                               title="Telefony i akcesoria">Telefony i akcesoria</a></li>
                                                                            <li><a href="http://localhost:8000/kategoria-motoryzacja"
                                               title="Motoryzacja">Motoryzacja</a></li>
                                                                            <li><a href="http://localhost:8000/kategoria-zdrowie"
                                               title="Zdrowie">Zdrowie</a></li>
                                                                            <li><a href="http://localhost:8000/kategoria-moda-i-styl"
                                               title="Moda i styl">Moda i styl</a></li>
                                                                            <li><a href="http://localhost:8000/kategoria-sport-i-hobby"
                                               title="Sport i hobby">Sport i hobby</a></li>
                                                                            <li><a href="http://localhost:8000/kategoria-delikatesy"
                                               title="Delikatesy">Delikatesy</a></li>
                                                                    </ul>
                                                    </div>
                                            <div>
                                                            <h3>Kategorie III</h3>
                                <ul>
                                                                            <li><a href="http://localhost:8000/kategoria-dla-dzieci"
                                               title="Dla dzieci">Dla dzieci</a></li>
                                                                            <li><a href="http://localhost:8000/kategoria-prezenty"
                                               title="Prezenty">Prezenty</a></li>
                                                                            <li><a href="http://localhost:8000/kategoria-kosmetyki"
                                               title="Kosmetyki">Kosmetyki</a></li>
                                                                            <li><a href="http://localhost:8000/kategoria-erotyka"
                                               title="Erotyka">Erotyka</a></li>
                                                                            <li><a href="http://localhost:8000/kategoria-biznes"
                                               title="Biznes">Biznes</a></li>
                                                                            <li><a href="http://localhost:8000/kategoria-dom-i-ogrod"
                                               title="Dom i ogród">Dom i ogród</a></li>
                                                                            <li><a href="http://localhost:8000/kategoria-narzedzia"
                                               title="Narzędzia">Narzędzia</a></li>
                                                                    </ul>
                                                    </div>
                    
                </div>

            </div>

        </div>
    </div>
    </div>

    <footer>
        <div class="container">
            <div class="row">
                <div class="col-md-5">
                    <h5>O nas</h5>
                    <p>Porownywarka.co to serwis pozwalający na porównanie cen w najlepszych sklepach internetowych w
                        Polsce. Został stworzony, by ułatwić użytkownikom Internetu znalezienie najniższych cen i
                        wygodne e-zakupy. Porównaj oferty kilku tysięcy sklepów internetowych.</p>
                </div>
                <div class="col-md-7">
                    <h5>Dla sklepów</h5>
                    <p>Chcesz, aby znalazła się tutaj również oferta Twojego sklepu? Operatorem danych dla
                        serwisu Porownywarka.co jest Nokaut.pl, porównywarka cen i sieć reklamowa odwiedzana przez kilka
                        milionów użytkowników każdego miesiąca. Skontaktuj się skorzystaj z kontakt@nokaut.pl.</p>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    Copyright © 2023. Wszystkie prawa zastrzeżone.
                    <a href="http://localhost:8000/mapa-kategorii">Mapa kategorii</a>
                </div>
            </div>
        </div>
    </footer>

    <div id="modal-preloader" class="modal-backdrop fade in text-center" style="display:none;padding-top:100px;"><img
                src="/images/progress-circle-info.svg"></div>
    <script src="/js/bootstrap.min.js"></script>
    <script src="/js/owl.carousel.min.js"></script>
    <script src="/js/jquery.bxslider.min.js"></script>
    <script src="/js/jquery.growl.js" type="text/javascript"></script>
    <script src="/js/common.js"></script>
</body>
</html>
";s:10:" * version";s:3:"1.0";s:13:" * statusCode";i:200;s:13:" * statusText";s:2:"OK";s:10:" * charset";N;}