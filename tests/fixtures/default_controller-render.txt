O:41:"Symfony\Component\HttpFoundation\Response":6:{s:7:"headers";O:50:"Symfony\Component\HttpFoundation\ResponseHeaderBag":5:{s:23:" * computedCacheControl";a:2:{s:8:"no-cache";b:1;s:7:"private";b:1;}s:10:" * cookies";a:0:{}s:14:" * headerNames";a:2:{s:13:"cache-control";s:13:"Cache-Control";s:4:"date";s:4:"Date";}s:10:" * headers";a:2:{s:13:"cache-control";a:1:{i:0;s:17:"no-cache, private";}s:4:"date";a:1:{i:0;s:29:"Wed, 22 Mar 2023 23:07:10 GMT";}}s:15:" * cacheControl";a:0:{}}s:10:" * content";s:89008:"<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8" />
    <title>Porownywarka.co</title>
    <meta name="description" content="" />
            <meta name="viewport" content="width=device-width, initial-scale=1">


    <link rel="canonical" href="http://localhost" />
        <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="/css/bootstrap.css" media="screen">
    <link rel="stylesheet" href="/css/owl.carousel.css">
    <link rel="stylesheet" href="/css/jquery.bxslider.css">
    <link rel="stylesheet" href="/css/theme-bootstrap.css">
    <link rel="stylesheet" href="/css/ecommerce-theme-bootstrap.css">
    <link href="/css/jquery.growl.css" rel="stylesheet" type="text/css"/>
    <link href="//maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css" rel="stylesheet">
        <script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js"></script>

    <!-- HTML5 shim and Respond.js IE8 support of HTML5 elements and media queries -->
    <!--[if lt IE 9]>
    <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
    <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->

    <script type="text/javascript">
        function search() {
            var url = 'http://localhost:8000/produkty-produkt:_PHRASE_VALUE_.html';
            var phrase = $('#phraseInput').val().trim().toLowerCase();
            if (!phrase) {
                alert('Pole do wyszukiwania nie może być puste');
                return false;
            }
            phrase = phrase.replace(/\s+/g, '-');
            location.href = url.replace('_PHRASE_VALUE_', encodeURIComponent(phrase));
            return false;
        }

        $(function () {
            $('#searchFrom').on('submit', function () {
                return search()
            });
            $('#buttonSearch').on('click', function () {
                return search()
            });
        });
    </script>
    </head>
<body>
    <div class="navbar navbar-default navbar-fixed-top yamm">
        <div class="container">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse"
                        data-target=".navbar-responsive-collapse">
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                <a class="navbar-brand" href="/">Porownywarka.co</a>
            </div>
            <div class="navbar-collapse collapse navbar-responsive-collapse">

                <ul class="nav navbar-nav">
            <li class="dropdown yamm-fw ">
            <a href="#" data-toggle="dropdown" class="dropdown-toggle">Kategorie I <b class="caret"></b></a>
            <ul class="dropdown-menu">
                <li>
                    <div class="row">

                        <div class="col-sm-3">

                            <ul class="dropdown-menu dropdown-menu-inner">
                                <li class="dropdown-header">Kategorie</li>
                                                                    <li><a href="http://localhost:8000/kategoria-muzyka" title="Muzyka">Muzyka</a></li>
                                                                    <li><a href="http://localhost:8000/kategoria-filmy" title="Filmy">Filmy</a></li>
                                                                    <li><a href="http://localhost:8000/kategoria-fotografia-i-optyka" title="Fotografia i optyka">Fotografia i optyka</a></li>
                                                                    <li><a href="http://localhost:8000/kategoria-komputery" title="Komputery">Komputery</a></li>
                                                                    <li><a href="http://localhost:8000/kategoria-albumy" title="Albumy">Albumy</a></li>
                                                                    <li><a href="http://localhost:8000/kategoria-sprzet-rtv" title="Sprzęt RTV">Sprzęt RTV</a></li>
                                                                    <li><a href="http://localhost:8000/kategoria-sprzet-agd" title="Sprzęt AGD">Sprzęt AGD</a></li>
                                                                    <li><a href="http://localhost:8000/kategoria-gry-i-konsole" title="Gry i konsole">Gry i konsole</a></li>
                                                            </ul>

                        </div>
                                                    <div class="col-sm-9">

                                <div class="row">
                                    <div class="col-sm-12 col-xs-12">
                                        <span class="dropdown-header dropdown-header-no-list">Popularne produkty</span>
                                    </div>
                                </div>

                                <div class="row">
                                                                            <div class="col-md-2 col-xs-4">
                                            <a href="http://localhost:8000/produkt-sluchawki/sony-mdr-rf895.html">
                                                <div class="product tiny">
                                                    <div class="image">
                                                        <img class='img-responsive' src="http://offers.gallery/p-fe-57-fe5750ad73040ae221f65cfbcaae163a90x90/sony-mdr-rf895.jpg" />
                                                    </div>
                                                    <span class="price">od 379,04 PLN</span>
                                                    <h5 class="title">Sony MDR-RF895</h5>
                                                </div>
                                            </a>
                                        </div>
                                                                            <div class="col-md-2 col-xs-4">
                                            <a href="http://localhost:8000/produkt-sluchawki/jbl-t225.html">
                                                <div class="product tiny">
                                                    <div class="image">
                                                        <img class='img-responsive' src="http://offers.gallery/p-3f-41-3f41a1801783ad7c74f0f9443a3c28f390x90/jbl-t225.jpg" />
                                                    </div>
                                                    <span class="price">od 399,00 PLN</span>
                                                    <h5 class="title">JBL T225</h5>
                                                </div>
                                            </a>
                                        </div>
                                                                            <div class="col-md-2 col-xs-4">
                                            <a href="http://localhost:8000/produkt-roboty-kuchenne/robot-planetarny-bosch-mum9bx5s65-optimum-zamow-z-dostawa-jutro-darmowy-transport.html">
                                                <div class="product tiny">
                                                    <div class="image">
                                                        <img class='img-responsive' src="http://offers.gallery/p-1d-ea-1dea070b6aba94bbdfc11d80263673f190x90/robot-planetarny-bosch-mum9bx5s65-optimum-43-zamw-z-dostaw-jutro-43-darmowy-transport-kolor-srebrny.jpg" />
                                                    </div>
                                                    <span class="price">od 3649,00 PLN</span>
                                                    <h5 class="title">Robot planetarny BOSCH MUM9BX5S65 Optimum &#43; Zamów z DOSTAWĄ JUTRO! &#43; DARMOWY TRANSPORT!, kolor srebrny</h5>
                                                </div>
                                            </a>
                                        </div>
                                                                            <div class="col-md-2 col-xs-4">
                                            <a href="http://localhost:8000/produkt-sluchawki/beats-by-dr-dre-studio-3.html">
                                                <div class="product tiny">
                                                    <div class="image">
                                                        <img class='img-responsive' src="http://offers.gallery/p-0a-e8-0ae87a96abbc3ccf37d1f3a05f17d3a490x90/beats-by-dr-dre-studio-3.jpg" />
                                                    </div>
                                                    <span class="price">od 1299,00 PLN</span>
                                                    <h5 class="title">Beats by Dr. Dre Studio 3</h5>
                                                </div>
                                            </a>
                                        </div>
                                                                            <div class="col-md-2 col-xs-4">
                                            <a href="http://localhost:8000/produkt-sluchawki/sony-wf-1000.html">
                                                <div class="product tiny">
                                                    <div class="image">
                                                        <img class='img-responsive' src="http://offers.gallery/p-6d-d6-6dd67f7b817841b6e3cb91c81ec30c7390x90/sony-wf-1000.jpg" />
                                                    </div>
                                                    <span class="price">od 839,00 PLN</span>
                                                    <h5 class="title">Sony WF-1000</h5>
                                                </div>
                                            </a>
                                        </div>
                                                                            <div class="col-md-2 col-xs-4">
                                            <a href="http://localhost:8000/produkt-sluchawki/xiaomi-redmi-buds-3.html">
                                                <div class="product tiny">
                                                    <div class="image">
                                                        <img class='img-responsive' src="http://offers.gallery/p-cd-ad-cdad5f581d0024667108791ce91b13f490x90/xiaomi-redmi-buds-3.jpg" />
                                                    </div>
                                                    <span class="price">od 79,95 PLN</span>
                                                    <h5 class="title">Xiaomi Redmi Buds 3</h5>
                                                </div>
                                            </a>
                                        </div>
                                                                    </div>

                            </div>
                                            </div>
                </li>
            </ul>
        </li>
                <li class="dropdown yamm-fw ">
            <a href="#" data-toggle="dropdown" class="dropdown-toggle">Kategorie II <b class="caret"></b></a>
            <ul class="dropdown-menu">
                <li>
                    <div class="row">

                        <div class="col-sm-3">

                            <ul class="dropdown-menu dropdown-menu-inner">
                                <li class="dropdown-header">Kategorie</li>
                                                                    <li><a href="http://localhost:8000/kategoria-inne" title="Inne">Inne</a></li>
                                                                    <li><a href="http://localhost:8000/kategoria-telefony-i-akcesoria" title="Telefony i akcesoria">Telefony i akcesoria</a></li>
                                                                    <li><a href="http://localhost:8000/kategoria-motoryzacja" title="Motoryzacja">Motoryzacja</a></li>
                                                                    <li><a href="http://localhost:8000/kategoria-zdrowie" title="Zdrowie">Zdrowie</a></li>
                                                                    <li><a href="http://localhost:8000/kategoria-moda-i-styl" title="Moda i styl">Moda i styl</a></li>
                                                                    <li><a href="http://localhost:8000/kategoria-sport-i-hobby" title="Sport i hobby">Sport i hobby</a></li>
                                                                    <li><a href="http://localhost:8000/kategoria-delikatesy" title="Delikatesy">Delikatesy</a></li>
                                                            </ul>

                        </div>
                                                    <div class="col-sm-9">

                                <div class="row">
                                    <div class="col-sm-12 col-xs-12">
                                        <span class="dropdown-header dropdown-header-no-list">Popularne produkty</span>
                                    </div>
                                </div>

                                <div class="row">
                                                                            <div class="col-md-2 col-xs-4">
                                            <a href="http://localhost:8000/produkt-bieznie/bieznia-elektryczna-kinetic-2900.html">
                                                <div class="product tiny">
                                                    <div class="image">
                                                        <img class='img-responsive' src="http://offers.gallery/p-9d-14-9d145773c53a6844b286bfb45d1cf8ed90x90/bienia-elektryczna-kinetic-2900-4260495759791.jpg" />
                                                    </div>
                                                    <span class="price">999,00 PLN</span>
                                                    <h5 class="title">Bieżnia elektryczna Kinetic 2900 (4260495759791)</h5>
                                                </div>
                                            </a>
                                        </div>
                                                                            <div class="col-md-2 col-xs-4">
                                            <a href="http://localhost:8000/produkt-bieznie/bieznia-elektryczna-kinetic-do-10-km.html">
                                                <div class="product tiny">
                                                    <div class="image">
                                                        <img class='img-responsive' src="http://offers.gallery/p-dd-8d-dd8d07585cd08e9442f64a43eb83ac4d90x90/bienia-elektryczna-kinetic-do-10-km-4260495754925.jpg" />
                                                    </div>
                                                    <span class="price">od 799,00 PLN</span>
                                                    <h5 class="title">Bieżnia elektryczna Kinetic do 10 km (4260495754925)</h5>
                                                </div>
                                            </a>
                                        </div>
                                                                            <div class="col-md-2 col-xs-4">
                                            <a href="http://localhost:8000/produkt-telefony-komorkowe/samsung-galaxy-s20-fe-5g-sm-g781.html">
                                                <div class="product tiny">
                                                    <div class="image">
                                                        <img class='img-responsive' src="http://offers.gallery/p-39-68-396882215d00a7811b9ab789dab51aa190x90/samsung-galaxy-s20-fe-5g-sm-g781.jpg" />
                                                    </div>
                                                    <span class="price">od 1977,00 PLN</span>
                                                    <h5 class="title">Samsung Galaxy S20 FE 5G SM-G781</h5>
                                                </div>
                                            </a>
                                        </div>
                                                                            <div class="col-md-2 col-xs-4">
                                            <a href="http://localhost:8000/produkt-telefony-komorkowe/apple-iphone-11-64gb.html">
                                                <div class="product tiny">
                                                    <div class="image">
                                                        <img class='img-responsive' src="http://offers.gallery/p-7b-a4-7ba42684bfa28bd9deb05cadfed989db90x90/apple-iphone-11-64gb.jpg" />
                                                    </div>
                                                    <span class="price">od 2199,00 PLN</span>
                                                    <h5 class="title">Apple iPhone 11 64GB</h5>
                                                </div>
                                            </a>
                                        </div>
                                                                            <div class="col-md-2 col-xs-4">
                                            <a href="http://localhost:8000/produkt-telefony-komorkowe/samsung-galaxy-m23.html">
                                                <div class="product tiny">
                                                    <div class="image">
                                                        <img class='img-responsive' src="http://offers.gallery/p-4b-93-4b93cf43b244aa554ffb7042ba34860890x90/samsung-galaxy-m23.jpg" />
                                                    </div>
                                                    <span class="price">od 949,00 PLN</span>
                                                    <h5 class="title">Samsung Galaxy M23</h5>
                                                </div>
                                            </a>
                                        </div>
                                                                            <div class="col-md-2 col-xs-4">
                                            <a href="http://localhost:8000/produkt-zarowki-ksenonowe-samochodowe/zarowki-2szt-samochodowe-h7-12v-xenon-h-i-d-blue-vision-moc-55w-lub-100w-homologowane-d7d3050e0abf6d33e2e4331a92a702b0.html">
                                                <div class="product tiny">
                                                    <div class="image">
                                                        <img class='img-responsive' src="http://offers.gallery/p-f3-69-f3690effca20b69d9024be22204fd43290x90/arwki-2szt-samochodowe-h7-12v-xenon-hid-blue-vision-moc-55w-lub-100w-homologowane-marki-lumiko-usajk.jpg" />
                                                    </div>
                                                    <span class="price">73,00 PLN</span>
                                                    <h5 class="title">Żarówki (2szt.) samochodowe h7 (12v) xenon h.i.d. blue vision (moc 55w lub 100w) - homologowane. marki Lumiko usa/jk</h5>
                                                </div>
                                            </a>
                                        </div>
                                                                    </div>

                            </div>
                                            </div>
                </li>
            </ul>
        </li>
                <li class="dropdown yamm-fw ">
            <a href="#" data-toggle="dropdown" class="dropdown-toggle">Kategorie III <b class="caret"></b></a>
            <ul class="dropdown-menu">
                <li>
                    <div class="row">

                        <div class="col-sm-3">

                            <ul class="dropdown-menu dropdown-menu-inner">
                                <li class="dropdown-header">Kategorie</li>
                                                                    <li><a href="http://localhost:8000/kategoria-dla-dzieci" title="Dla dzieci">Dla dzieci</a></li>
                                                                    <li><a href="http://localhost:8000/kategoria-prezenty" title="Prezenty">Prezenty</a></li>
                                                                    <li><a href="http://localhost:8000/kategoria-kosmetyki" title="Kosmetyki">Kosmetyki</a></li>
                                                                    <li><a href="http://localhost:8000/kategoria-erotyka" title="Erotyka">Erotyka</a></li>
                                                                    <li><a href="http://localhost:8000/kategoria-biznes" title="Biznes">Biznes</a></li>
                                                                    <li><a href="http://localhost:8000/kategoria-dom-i-ogrod" title="Dom i ogród">Dom i ogród</a></li>
                                                                    <li><a href="http://localhost:8000/kategoria-narzedzia" title="Narzędzia">Narzędzia</a></li>
                                                            </ul>

                        </div>
                                                    <div class="col-sm-9">

                                <div class="row">
                                    <div class="col-sm-12 col-xs-12">
                                        <span class="dropdown-header dropdown-header-no-list">Popularne produkty</span>
                                    </div>
                                </div>

                                <div class="row">
                                                                            <div class="col-md-2 col-xs-4">
                                            <a href="http://localhost:8000/produkt-lustra-lazienkowe/lustro-lazienkowe-podswietlane-led-80x60cm-73f54d3292c0136242647de5a50201a4.html">
                                                <div class="product tiny">
                                                    <div class="image">
                                                        <img class='img-responsive' src="http://offers.gallery/p-d4-db-d4db2393d96f8f5ac49ebca45f3564d890x90/lustro-azienkowe-podwietlane-led-80x60cm-led4-80x60cm.jpg" />
                                                    </div>
                                                    <span class="price">399,00 PLN</span>
                                                    <h5 class="title">Lustro łazienkowe podświetlane led 80x60cm, LED4 80x60cm</h5>
                                                </div>
                                            </a>
                                        </div>
                                                                            <div class="col-md-2 col-xs-4">
                                            <a href="http://localhost:8000/produkt-drzwi-prysznicowe/drzwi-prysznicowe-przesuwne-liniger-d20-premium.html">
                                                <div class="product tiny">
                                                    <div class="image">
                                                        <img class='img-responsive' src="http://offers.gallery/p-52-ae-52ae3bbfeafacdf5b16db012181b4c2d90x90/drzwi-prysznicowe-przesuwne-liniger-d20-premium.jpg" />
                                                    </div>
                                                    <span class="price">1309,00 PLN</span>
                                                    <h5 class="title">Drzwi Prysznicowe Przesuwne Liniger D20 PREMIUM</h5>
                                                </div>
                                            </a>
                                        </div>
                                                                            <div class="col-md-2 col-xs-4">
                                            <a href="http://localhost:8000/produkt-pily-lancuchowe/imoum-live-lancuchowa-mini-pila-elektryczna.html">
                                                <div class="product tiny">
                                                    <div class="image">
                                                        <img class='img-responsive' src="http://offers.gallery/p-9d-80-9d80cf4079f092f17984b56fb2e1c75e90x90/imoum-live-acuchowa-mini-pia-elektryczna.jpg" />
                                                    </div>
                                                    <span class="price">549,00 PLN</span>
                                                    <h5 class="title">Imoum Live Łańcuchowa mini piła elektryczna</h5>
                                                </div>
                                            </a>
                                        </div>
                                                                            <div class="col-md-2 col-xs-4">
                                            <a href="http://localhost:8000/produkt-pozostale-poza-domem/daszek-zadaszenie-systemowe-drzwi-modern-300x060-a072f751415d59bd5570d3bc2654357b.html">
                                                <div class="product tiny">
                                                    <div class="image">
                                                        <img class='img-responsive' src="http://offers.gallery/p-91-6b-916b644d5ac7d82fdb5fa8e158e61ed590x90/metal-gum-daszek-zadaszenie-systemowe-drzwi-modern-300x060.jpg" />
                                                    </div>
                                                    <span class="price">289,00 PLN</span>
                                                    <h5 class="title">Metal-gum Daszek zadaszenie systemowe drzwi modern 300x060</h5>
                                                </div>
                                            </a>
                                        </div>
                                                                            <div class="col-md-2 col-xs-4">
                                            <a href="http://localhost:8000/produkt-pozostale-poza-domem/daszek-zadaszenie-proste-drzwi-270-x-100-1199bd3bf9f942069a64a446df5b4633.html">
                                                <div class="product tiny">
                                                    <div class="image">
                                                        <img class='img-responsive' src="http://offers.gallery/p-92-c2-92c2c25470a62d2aa6052fd29103b11890x90/daszek-zadaszenie-proste-drzwi-270-x-100.jpg" />
                                                    </div>
                                                    <span class="price">949,00 PLN</span>
                                                    <h5 class="title">Daszek Zadaszenie Proste Drzwi 270 x 100</h5>
                                                </div>
                                            </a>
                                        </div>
                                                                            <div class="col-md-2 col-xs-4">
                                            <a href="http://localhost:8000/produkt-wertykulatory/wertykulator-i-aerator-einhell-gc-sa-1231-2w1.html">
                                                <div class="product tiny">
                                                    <div class="image">
                                                        <img class='img-responsive' src="http://offers.gallery/p-88-26-8826f253afe94dbc610f62214590675090x90/einhell-wertykulator-i-aerator-gc-sa-1231-2w1.jpg" />
                                                    </div>
                                                    <span class="price">551,99 PLN</span>
                                                    <h5 class="title">Einhell Wertykulator i aerator gc-sa 1231 2w1</h5>
                                                </div>
                                            </a>
                                        </div>
                                                                    </div>

                            </div>
                                            </div>
                </li>
            </ul>
        </li>
    </ul>
                <form id="searchFrom" class="navbar-form navbar-right">
                    <div class="input-group input-group-with-btn">
                        <input id="phraseInput" type="text" class="form-control input-lg"
                               value="" placeholder="Szukam...">
                        <span class="input-group-btn">
                  <button id="buttonSearch" class="btn btn-link" type="button"><i class="fa fa-search"></i></button>
                </span>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <div class="container top">

                    <div class="row">
            <div class="col-xs-12 text-right">
                <a id="categories-groups-prev" class="btn btn-sm btn-primary btn-primary-outlined"><i class="fa fa-angle-left"></i></a>
                <a id="categories-groups-next" class="btn btn-sm btn-primary btn-primary-outlined"><i class="fa fa-angle-right"></i></a>
            </div>
        </div>
    
        

    <div class="row">
        <div id="categories-groups" class="owl-carousel">
                            <div>
                <div class="col-xs-12">

                <!-- products in the group starts here -->
                <div class="row lower">
                <div class="col-xs-6">
                    <div class="row">
                        <div class="product-grid col-md-8 col-sm-12 normal inner">
                                <div class="image">
        <a href="/produkt-sluchawki/sony-mdr-rf895.html"><img class="img-responsive" src="http://offers.gallery/p-fe-57-fe5750ad73040ae221f65cfbcaae163a500x500/sony-mdr-rf895.jpg"/></a>
        <a href="/produkt-sluchawki/sony-mdr-rf895.html">
            <span class="content">
                <h5>Sony MDR-RF895</h5>
                <span class="price">379,04 PLN</span>
                <button class="btn btn-success btn-success-outlined btn-icon-right">Zobacz <i class="fa fa-angle-right"></i></button>
            </span>
        </a>
    </div>

                        </div>
                        <div class="product-grid col-md-4 hidden-sm hidden-xs normal inner">
                                <div class="image">
        <a href="/produkt-sluchawki/jbl-t225.html"><img class="img-responsive" src="http://offers.gallery/p-3f-41-3f41a1801783ad7c74f0f9443a3c28f3500x500/jbl-t225.jpg"/></a>
        <a href="/produkt-sluchawki/jbl-t225.html">
            <span class="content">
                <h5>JBL T225</h5>
                <span class="price">399,00 PLN</span>
                <button class="btn btn-success btn-success-outlined btn-icon-right">Zobacz <i class="fa fa-angle-right"></i></button>
            </span>
        </a>
    </div>

                        </div>
                        <div class="product-grid col-md-4 hidden-sm hidden-xs normal inner">
                                <div class="image">
        <a href="/produkt-roboty-kuchenne/robot-planetarny-bosch-mum9bx5s65-optimum-zamow-z-dostawa-jutro-darmowy-transport.html"><img class="img-responsive" src="http://offers.gallery/p-1d-ea-1dea070b6aba94bbdfc11d80263673f1500x500/robot-planetarny-bosch-mum9bx5s65-optimum-43-zamw-z-dostaw-jutro-43-darmowy-transport-kolor-srebrny.jpg"/></a>
        <a href="/produkt-roboty-kuchenne/robot-planetarny-bosch-mum9bx5s65-optimum-zamow-z-dostawa-jutro-darmowy-transport.html">
            <span class="content">
                <h5>Robot planetarny BOSCH MUM9BX5S65 Optimum &#43; Zamów z DOSTAWĄ JUTRO! &#43; DARMOWY TRANSPORT!, kolor srebrny</h5>
                <span class="price">3 649,00 PLN</span>
                <button class="btn btn-success btn-success-outlined btn-icon-right">Zobacz <i class="fa fa-angle-right"></i></button>
            </span>
        </a>
    </div>

                        </div>
                    </div>
                    <div class="row">
                        <div class="product-grid col-md-4 hidden-sm hidden-xs normal inner">
                                <div class="image">
        <a href="/produkt-sluchawki/beats-by-dr-dre-studio-3.html"><img class="img-responsive" src="http://offers.gallery/p-0a-e8-0ae87a96abbc3ccf37d1f3a05f17d3a4500x500/beats-by-dr-dre-studio-3.jpg"/></a>
        <a href="/produkt-sluchawki/beats-by-dr-dre-studio-3.html">
            <span class="content">
                <h5>Beats by Dr. Dre Studio 3</h5>
                <span class="price">1 299,00 PLN</span>
                <button class="btn btn-success btn-success-outlined btn-icon-right">Zobacz <i class="fa fa-angle-right"></i></button>
            </span>
        </a>
    </div>

                        </div>
                        <div class="product-grid col-md-4 hidden-sm hidden-xs normal inner">
                                <div class="image">
        <a href="/produkt-sluchawki/sony-wf-1000.html"><img class="img-responsive" src="http://offers.gallery/p-6d-d6-6dd67f7b817841b6e3cb91c81ec30c73500x500/sony-wf-1000.jpg"/></a>
        <a href="/produkt-sluchawki/sony-wf-1000.html">
            <span class="content">
                <h5>Sony WF-1000</h5>
                <span class="price">839,00 PLN</span>
                <button class="btn btn-success btn-success-outlined btn-icon-right">Zobacz <i class="fa fa-angle-right"></i></button>
            </span>
        </a>
    </div>

                        </div>
                        <div class="product-grid col-md-4 hidden-sm hidden-xs normal inner">
                                <div class="image">
        <a href="/produkt-sluchawki/xiaomi-redmi-buds-3.html"><img class="img-responsive" src="http://offers.gallery/p-cd-ad-cdad5f581d0024667108791ce91b13f4500x500/xiaomi-redmi-buds-3.jpg"/></a>
        <a href="/produkt-sluchawki/xiaomi-redmi-buds-3.html">
            <span class="content">
                <h5>Xiaomi Redmi Buds 3</h5>
                <span class="price">79,95 PLN</span>
                <button class="btn btn-success btn-success-outlined btn-icon-right">Zobacz <i class="fa fa-angle-right"></i></button>
            </span>
        </a>
    </div>

                        </div>
                    </div>
                    <div class="row">
                        <div class="product-grid col-md-4 hidden-sm hidden-xs normal inner">
                                <div class="image">
        <a href="/produkt-tablety/lenovo-m10-tb-x606f-64gb.html"><img class="img-responsive" src="http://offers.gallery/p-2b-9e-2b9e3725d15ab52a70bb359cfb2d7023500x500/lenovo-m10-tb-x606f-64gb.jpg"/></a>
        <a href="/produkt-tablety/lenovo-m10-tb-x606f-64gb.html">
            <span class="content">
                <h5>Lenovo M10 TB-X606F 64GB</h5>
                <span class="price">749,00 PLN</span>
                <button class="btn btn-success btn-success-outlined btn-icon-right">Zobacz <i class="fa fa-angle-right"></i></button>
            </span>
        </a>
    </div>

                        </div>
                        <div class="product-grid col-md-4 hidden-sm hidden-xs normal inner">
                                <div class="image">
        <a href="/produkt-sluchawki/sony-wh-1000xm4.html"><img class="img-responsive" src="http://offers.gallery/p-48-1e-481e9a0043860f9b346578b7ba7582e6500x500/sony-wh-1000xm4.jpg"/></a>
        <a href="/produkt-sluchawki/sony-wh-1000xm4.html">
            <span class="content">
                <h5>Sony WH-1000XM4</h5>
                <span class="price">1 299,00 PLN</span>
                <button class="btn btn-success btn-success-outlined btn-icon-right">Zobacz <i class="fa fa-angle-right"></i></button>
            </span>
        </a>
    </div>

                        </div>
                        <div class="product-grid col-md-4 hidden-sm hidden-xs normal inner">
                                <div class="image">
        <a href="/produkt-roboty-kuchenne/kitchenaid-robot-kuchenny-5ksm125ecu-szary.html"><img class="img-responsive" src="http://offers.gallery/p-d2-e7-d2e7361cfad15b725f9622d22bc36de3500x500/kitchenaid-robot-kuchenny-5ksm125ecu-szary-5413184200770.jpg"/></a>
        <a href="/produkt-roboty-kuchenne/kitchenaid-robot-kuchenny-5ksm125ecu-szary.html">
            <span class="content">
                <h5>KitchenAid robot kuchenny 5KSM125ECU, szary (5413184200770)</h5>
                <span class="price">2 499,00 PLN</span>
                <button class="btn btn-success btn-success-outlined btn-icon-right">Zobacz <i class="fa fa-angle-right"></i></button>
            </span>
        </a>
    </div>

                        </div>
                    </div>
                </div>
                <div class="col-xs-6">
                    <div class="row">
                        <div class="product-grid col-md-4 hidden-sm hidden-xs normal inner">
                                <div class="image">
        <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253D6dU%2524gk5TXEWqoNHx0uUQd5XjeZInyHFgCnziBsXiK%2524FK1pWRyEp%2524cCwli54aIaFrGweaOg3ov40DAZuztWH9FTTHbtx6%2524U%252A4sK1Bx9GKBx0ZyI0IRK8RkxUpkBsJ4%252Ac2_P.API_10_18_viewsdesc" rel="nofollow"><img class="img-responsive" src="http://offers.gallery/p-ea-8c-ea8c54196b0c23f83cfbf66ff9fceecc500x500/sony-mdr-rf811.jpg"/></a>
        <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253D6dU%2524gk5TXEWqoNHx0uUQd5XjeZInyHFgCnziBsXiK%2524FK1pWRyEp%2524cCwli54aIaFrGweaOg3ov40DAZuztWH9FTTHbtx6%2524U%252A4sK1Bx9GKBx0ZyI0IRK8RkxUpkBsJ4%252Ac2_P.API_10_18_viewsdesc" rel="nofollow">
            <span class="content">
                <h5>Sony MDR-RF811</h5>
                <span class="price">199,99 PLN</span>
                <button class="btn btn-success btn-success-outlined btn-icon-right">Zobacz <i class="fa fa-angle-right"></i></button>
            </span>
        </a>
    </div>

                        </div>
                        <div class="product-grid col-md-4 hidden-sm hidden-xs normal inner">
                                <div class="image">
        <a href="/produkt-sluchawki/jbl-t130.html"><img class="img-responsive" src="http://offers.gallery/p-54-4c-544c99029c14210db0a44c46689ed4c2500x500/jbl-t130.jpg"/></a>
        <a href="/produkt-sluchawki/jbl-t130.html">
            <span class="content">
                <h5>JBL T130</h5>
                <span class="price">338,00 PLN</span>
                <button class="btn btn-success btn-success-outlined btn-icon-right">Zobacz <i class="fa fa-angle-right"></i></button>
            </span>
        </a>
    </div>

                        </div>
                        <div class="product-grid col-md-4 hidden-sm hidden-xs normal inner">
                                <div class="image">
        <a href="/produkt-sluchawki/bang-olufsen-beoplay-h95.html"><img class="img-responsive" src="http://offers.gallery/p-7f-24-7f2472bdf5ad69a109ad03f9a7461f51500x500/bang-amp-olufsen-beoplay-h95.jpg"/></a>
        <a href="/produkt-sluchawki/bang-olufsen-beoplay-h95.html">
            <span class="content">
                <h5>Bang &amp; Olufsen Beoplay H95</h5>
                <span class="price">3 899,00 PLN</span>
                <button class="btn btn-success btn-success-outlined btn-icon-right">Zobacz <i class="fa fa-angle-right"></i></button>
            </span>
        </a>
    </div>

                        </div>
                    </div>
                    <div class="row">
                        <div class="product-grid col-md-8 col-sm-12 normal inner">
                                <div class="image">
        <a href="/produkt-soundbary/jbl-bar-5-1.html"><img class="img-responsive" src="http://offers.gallery/p-8f-10-8f1097a05459bed39d7514bb35e927fc500x500/jbl-bar-51-6925281927485.jpg"/></a>
        <a href="/produkt-soundbary/jbl-bar-5-1.html">
            <span class="content">
                <h5>Jbl bar 5.1 (6925281927485)</h5>
                <span class="price">3 499,00 PLN</span>
                <button class="btn btn-success btn-success-outlined btn-icon-right">Zobacz <i class="fa fa-angle-right"></i></button>
            </span>
        </a>
    </div>

                        </div>
                        <div class="product-grid col-md-4 hidden-sm hidden-xs normal inner">
                                <div class="image">
        <a href="/produkt-roboty-kuchenne/bosch-robot-kuchenny-mum9b34s27.html"><img class="img-responsive" src="http://offers.gallery/p-fa-78-fa78dd4f8739127edf3ed13855616708500x500/robot-kuchenny-mum9b34s27-marki-bosch.jpg"/></a>
        <a href="/produkt-roboty-kuchenne/bosch-robot-kuchenny-mum9b34s27.html">
            <span class="content">
                <h5>robot kuchenny mum9b34s27 marki Bosch</h5>
                <span class="price">2 239,00 PLN</span>
                <button class="btn btn-success btn-success-outlined btn-icon-right">Zobacz <i class="fa fa-angle-right"></i></button>
            </span>
        </a>
    </div>

                        </div>
                        <div class="product-grid col-md-4 hidden-sm hidden-xs normal inner">
                                <div class="image">
        <a href="/produkt-sluchawki/audio-technica-ath-msr7.html"><img class="img-responsive" src="http://offers.gallery/p-af-29-af29a670391284e4b5b9effc0e092cef500x500/audio-technica-ath-msr7.jpg"/></a>
        <a href="/produkt-sluchawki/audio-technica-ath-msr7.html">
            <span class="content">
                <h5>Audio-Technica ATH-MSR7</h5>
                <span class="price">819,00 PLN</span>
                <button class="btn btn-success btn-success-outlined btn-icon-right">Zobacz <i class="fa fa-angle-right"></i></button>
            </span>
        </a>
    </div>

                        </div>
                    </div>
                    <div class="row">
                        <div class="product-grid col-md-4 hidden-sm hidden-xs normal inner">
                                <div class="image">
        <a href="/produkt-sluchawki/apple-airpods.html"><img class="img-responsive" src="http://offers.gallery/p-d7-fa-d7fa2727d87fc12cc03f71a59475c7cb500x500/apple-airpods.jpg"/></a>
        <a href="/produkt-sluchawki/apple-airpods.html">
            <span class="content">
                <h5>Apple AirPods</h5>
                <span class="price">648,00 PLN</span>
                <button class="btn btn-success btn-success-outlined btn-icon-right">Zobacz <i class="fa fa-angle-right"></i></button>
            </span>
        </a>
    </div>

                        </div>
                        <div class="product-grid col-md-4 hidden-sm hidden-xs normal inner">
                                <div class="image">
        <a href="/produkt-roboty-kuchenne/robot-wielofunkcyjny-kenwood-kcl95-004si-cooking-chef-xl-wifi-1500-w-z-wbudowana-waga-i-funkcja-gotowania.html"><img class="img-responsive" src="http://offers.gallery/p-c9-e7-c9e72c9efdd90751bd4ec966ec78beaf500x500/robot-wielofunkcyjny-kenwood-kcl95004si-cooking-chef-xl-wifi-1500-w-z-wbudowan-wag-i-funkcj-gotowania-kcl95004si.jpg"/></a>
        <a href="/produkt-roboty-kuchenne/robot-wielofunkcyjny-kenwood-kcl95-004si-cooking-chef-xl-wifi-1500-w-z-wbudowana-waga-i-funkcja-gotowania.html">
            <span class="content">
                <h5>Robot wielofunkcyjny KENWOOD KCL95.004SI Cooking Chef XL (WiFi) 1500 W z wbudowaną wagą i funkcją gotowania, KCL95.004SI</h5>
                <span class="price">4 599,00 PLN</span>
                <button class="btn btn-success btn-success-outlined btn-icon-right">Zobacz <i class="fa fa-angle-right"></i></button>
            </span>
        </a>
    </div>

                        </div>
                        <div class="product-grid col-md-4 hidden-sm hidden-xs normal inner">
                                <div class="image">
        <a href="/produkt-tablety/samsung-galaxy-tab-a8-10-5-x205-128gb-lte.html"><img class="img-responsive" src="http://offers.gallery/p-07-fb-07fb7fdfb0dcc0502420314519051742500x500/samsung-galaxy-tab-a8-105-x205-128gb-lte.jpg"/></a>
        <a href="/produkt-tablety/samsung-galaxy-tab-a8-10-5-x205-128gb-lte.html">
            <span class="content">
                <h5>Samsung Galaxy Tab A8 10.5 X205 128GB LTE</h5>
                <span class="price">1 333,00 PLN</span>
                <button class="btn btn-success btn-success-outlined btn-icon-right">Zobacz <i class="fa fa-angle-right"></i></button>
            </span>
        </a>
    </div>

                        </div>
                    </div>
                </div>
                </div>
                <!-- products in the group ends here -->

                </div>
                </div>
                            <div>
                <div class="col-xs-12">

                <!-- products in the group starts here -->
                <div class="row lower">
                <div class="col-xs-6">
                    <div class="row">
                        <div class="product-grid col-md-8 col-sm-12 normal inner">
                                <div class="image">
        <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DfgDCY1V22p%252A92UqLzvfCIsAJlDUDxZcjWC6PAGikZK%252A6QQZdSMDLM1pIFK6AdW8JOKGIgJqWXIgXk9XJ4cWOZYXHemiMuO3awoAtONV116T6kjoi5a%2524pKOF8aloW9mSs_P.API_1_18_viewsdesc" rel="nofollow"><img class="img-responsive" src="http://offers.gallery/p-9d-14-9d145773c53a6844b286bfb45d1cf8ed500x500/bienia-elektryczna-kinetic-2900-4260495759791.jpg"/></a>
        <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DfgDCY1V22p%252A92UqLzvfCIsAJlDUDxZcjWC6PAGikZK%252A6QQZdSMDLM1pIFK6AdW8JOKGIgJqWXIgXk9XJ4cWOZYXHemiMuO3awoAtONV116T6kjoi5a%2524pKOF8aloW9mSs_P.API_1_18_viewsdesc" rel="nofollow">
            <span class="content">
                <h5>Bieżnia elektryczna Kinetic 2900 (4260495759791)</h5>
                <span class="price">999,00 PLN</span>
                <button class="btn btn-success btn-success-outlined btn-icon-right">Zobacz <i class="fa fa-angle-right"></i></button>
            </span>
        </a>
    </div>

                        </div>
                        <div class="product-grid col-md-4 hidden-sm hidden-xs normal inner">
                                <div class="image">
        <a href="/produkt-bieznie/bieznia-elektryczna-kinetic-do-10-km.html"><img class="img-responsive" src="http://offers.gallery/p-dd-8d-dd8d07585cd08e9442f64a43eb83ac4d500x500/bienia-elektryczna-kinetic-do-10-km-4260495754925.jpg"/></a>
        <a href="/produkt-bieznie/bieznia-elektryczna-kinetic-do-10-km.html">
            <span class="content">
                <h5>Bieżnia elektryczna Kinetic do 10 km (4260495754925)</h5>
                <span class="price">799,00 PLN</span>
                <button class="btn btn-success btn-success-outlined btn-icon-right">Zobacz <i class="fa fa-angle-right"></i></button>
            </span>
        </a>
    </div>

                        </div>
                        <div class="product-grid col-md-4 hidden-sm hidden-xs normal inner">
                                <div class="image">
        <a href="/produkt-telefony-komorkowe/samsung-galaxy-s20-fe-5g-sm-g781.html"><img class="img-responsive" src="http://offers.gallery/p-39-68-396882215d00a7811b9ab789dab51aa1500x500/samsung-galaxy-s20-fe-5g-sm-g781.jpg"/></a>
        <a href="/produkt-telefony-komorkowe/samsung-galaxy-s20-fe-5g-sm-g781.html">
            <span class="content">
                <h5>Samsung Galaxy S20 FE 5G SM-G781</h5>
                <span class="price">1 977,00 PLN</span>
                <button class="btn btn-success btn-success-outlined btn-icon-right">Zobacz <i class="fa fa-angle-right"></i></button>
            </span>
        </a>
    </div>

                        </div>
                    </div>
                    <div class="row">
                        <div class="product-grid col-md-4 hidden-sm hidden-xs normal inner">
                                <div class="image">
        <a href="/produkt-telefony-komorkowe/apple-iphone-11-64gb.html"><img class="img-responsive" src="http://offers.gallery/p-7b-a4-7ba42684bfa28bd9deb05cadfed989db500x500/apple-iphone-11-64gb.jpg"/></a>
        <a href="/produkt-telefony-komorkowe/apple-iphone-11-64gb.html">
            <span class="content">
                <h5>Apple iPhone 11 64GB</h5>
                <span class="price">2 199,00 PLN</span>
                <button class="btn btn-success btn-success-outlined btn-icon-right">Zobacz <i class="fa fa-angle-right"></i></button>
            </span>
        </a>
    </div>

                        </div>
                        <div class="product-grid col-md-4 hidden-sm hidden-xs normal inner">
                                <div class="image">
        <a href="/produkt-telefony-komorkowe/samsung-galaxy-m23.html"><img class="img-responsive" src="http://offers.gallery/p-4b-93-4b93cf43b244aa554ffb7042ba348608500x500/samsung-galaxy-m23.jpg"/></a>
        <a href="/produkt-telefony-komorkowe/samsung-galaxy-m23.html">
            <span class="content">
                <h5>Samsung Galaxy M23</h5>
                <span class="price">949,00 PLN</span>
                <button class="btn btn-success btn-success-outlined btn-icon-right">Zobacz <i class="fa fa-angle-right"></i></button>
            </span>
        </a>
    </div>

                        </div>
                        <div class="product-grid col-md-4 hidden-sm hidden-xs normal inner">
                                <div class="image">
        <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253D%252AJdHIWg9kOFLBLsvB1mtI5%2524JFmjY32hoCzMwg0uTgsnSNrjEV6lkjYWX9OLDBnVavz4pvovYDMAxcmoMPMcHfY26tQAjZ3QABTDQQgw8wVxSKJGRKQO36uIZ0xxa2NrT_P.API_6_18_viewsdesc" rel="nofollow"><img class="img-responsive" src="http://offers.gallery/p-f3-69-f3690effca20b69d9024be22204fd432500x500/arwki-2szt-samochodowe-h7-12v-xenon-hid-blue-vision-moc-55w-lub-100w-homologowane-marki-lumiko-usajk.jpg"/></a>
        <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253D%252AJdHIWg9kOFLBLsvB1mtI5%2524JFmjY32hoCzMwg0uTgsnSNrjEV6lkjYWX9OLDBnVavz4pvovYDMAxcmoMPMcHfY26tQAjZ3QABTDQQgw8wVxSKJGRKQO36uIZ0xxa2NrT_P.API_6_18_viewsdesc" rel="nofollow">
            <span class="content">
                <h5>Żarówki (2szt.) samochodowe h7 (12v) xenon h.i.d. blue vision (moc 55w lub 100w) - homologowane. marki Lumiko usa/jk</h5>
                <span class="price">73,00 PLN</span>
                <button class="btn btn-success btn-success-outlined btn-icon-right">Zobacz <i class="fa fa-angle-right"></i></button>
            </span>
        </a>
    </div>

                        </div>
                    </div>
                    <div class="row">
                        <div class="product-grid col-md-4 hidden-sm hidden-xs normal inner">
                                <div class="image">
        <a href="/produkt-telefony-komorkowe/samsung-galaxy-a33.html"><img class="img-responsive" src="http://offers.gallery/p-fa-fc-fafc362d3cbe897af4573106117165db500x500/samsung-galaxy-a33.jpg"/></a>
        <a href="/produkt-telefony-komorkowe/samsung-galaxy-a33.html">
            <span class="content">
                <h5>Samsung Galaxy A33</h5>
                <span class="price">1 549,00 PLN</span>
                <button class="btn btn-success btn-success-outlined btn-icon-right">Zobacz <i class="fa fa-angle-right"></i></button>
            </span>
        </a>
    </div>

                        </div>
                        <div class="product-grid col-md-4 hidden-sm hidden-xs normal inner">
                                <div class="image">
        <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253D0MNw4upv13sY0q1BxMPRP62QhrVdlZmf250VMBZHxc1EdS51ijTQu%2524xpkt95tKFmhmcAunvC1r3UV9IAbSdHpd7o8wBBcibbO5M1Wud5J6%252AT8IZPUcvAKq3G90y23Hu5_P.API_8_18_viewsdesc" rel="nofollow"><img class="img-responsive" src="http://offers.gallery/p-da-63-da63583f68a1eff474aa956cfe8e93e6500x500/10-g-sztabka-zota-niesortowana-wysyka-24-h-marki-losowa.jpg"/></a>
        <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253D0MNw4upv13sY0q1BxMPRP62QhrVdlZmf250VMBZHxc1EdS51ijTQu%2524xpkt95tKFmhmcAunvC1r3UV9IAbSdHpd7o8wBBcibbO5M1Wud5J6%252AT8IZPUcvAKq3G90y23Hu5_P.API_8_18_viewsdesc" rel="nofollow">
            <span class="content">
                <h5>10 g sztabka złota niesortowana - wysyłka 24 h marki Losowa</h5>
                <span class="price">2 857,00 PLN</span>
                <button class="btn btn-success btn-success-outlined btn-icon-right">Zobacz <i class="fa fa-angle-right"></i></button>
            </span>
        </a>
    </div>

                        </div>
                        <div class="product-grid col-md-4 hidden-sm hidden-xs normal inner">
                                <div class="image">
        <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DvjuY%252AGNF9PNdLwuXNYz%2524FQ9NtGuuqa1FXwiKsIYmW4lyeliMV2aITOmhjLeCyzk%2524yR%2524H7vL1EK2wV68eColbgzP%2524dwSIkikOPB19xclhO%252AmfHM7ihhWeqw%252AJ5%2524Qzb%2524cx_P.API_9_18_viewsdesc" rel="nofollow"><img class="img-responsive" src="http://offers.gallery/p-98-24-9824ea17d91f58877d20a573dc85d865500x500/bienia-elektryczna-do-chodzenia-slim-do-6-km.jpg"/></a>
        <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DvjuY%252AGNF9PNdLwuXNYz%2524FQ9NtGuuqa1FXwiKsIYmW4lyeliMV2aITOmhjLeCyzk%2524yR%2524H7vL1EK2wV68eColbgzP%2524dwSIkikOPB19xclhO%252AmfHM7ihhWeqw%252AJ5%2524Qzb%2524cx_P.API_9_18_viewsdesc" rel="nofollow">
            <span class="content">
                <h5>Bieżnia elektryczna do chodzenia SLIM do 6 km</h5>
                <span class="price">685,00 PLN</span>
                <button class="btn btn-success btn-success-outlined btn-icon-right">Zobacz <i class="fa fa-angle-right"></i></button>
            </span>
        </a>
    </div>

                        </div>
                    </div>
                </div>
                <div class="col-xs-6">
                    <div class="row">
                        <div class="product-grid col-md-4 hidden-sm hidden-xs normal inner">
                                <div class="image">
        <a href="/produkt-telefony-komorkowe/apple-iphone-xs-64gb.html"><img class="img-responsive" src="http://offers.gallery/p-49-94-4994694033caf44cdfc689d9d01749c0500x500/apple-iphone-xs-64gb.jpg"/></a>
        <a href="/produkt-telefony-komorkowe/apple-iphone-xs-64gb.html">
            <span class="content">
                <h5>Apple iPhone Xs 64GB</h5>
                <span class="price">1 649,00 PLN</span>
                <button class="btn btn-success btn-success-outlined btn-icon-right">Zobacz <i class="fa fa-angle-right"></i></button>
            </span>
        </a>
    </div>

                        </div>
                        <div class="product-grid col-md-4 hidden-sm hidden-xs normal inner">
                                <div class="image">
        <a href="/produkt-telefony-komorkowe/apple-iphone-11-128gb.html"><img class="img-responsive" src="http://offers.gallery/p-7e-15-7e15422999c8ab0b040fe152b707d91c500x500/apple-iphone-11-128gb.jpg"/></a>
        <a href="/produkt-telefony-komorkowe/apple-iphone-11-128gb.html">
            <span class="content">
                <h5>Apple iPhone 11 128GB</h5>
                <span class="price">2 799,00 PLN</span>
                <button class="btn btn-success btn-success-outlined btn-icon-right">Zobacz <i class="fa fa-angle-right"></i></button>
            </span>
        </a>
    </div>

                        </div>
                        <div class="product-grid col-md-4 hidden-sm hidden-xs normal inner">
                                <div class="image">
        <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DBDB5DUzFQ5Vr3m9o2xNqDnSmSkriCdqzOcGjCvVqPAF2E30M1C9XyhXOM05SpA3T6x855R%252AD46cOxMbhFeOXsKCYZF0QhK5CNr379zm2Q3BLmEC%252AieDOLX9uEBqcuDy7_P.API_12_18_viewsdesc" rel="nofollow"><img class="img-responsive" src="http://offers.gallery/p-e2-f2-e2f2291f2052e90b6ad2dd579e441c57500x500/vermeiren-ko-rehabilitacyjne-elektryczne-interval-3-xxl-udwig-do-270kg.jpg"/></a>
        <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DBDB5DUzFQ5Vr3m9o2xNqDnSmSkriCdqzOcGjCvVqPAF2E30M1C9XyhXOM05SpA3T6x855R%252AD46cOxMbhFeOXsKCYZF0QhK5CNr379zm2Q3BLmEC%252AieDOLX9uEBqcuDy7_P.API_12_18_viewsdesc" rel="nofollow">
            <span class="content">
                <h5>Vermeiren Łóżko rehabilitacyjne elektryczne interval 3 xxl (udźwig do 270kg)</h5>
                <span class="price">6 990,00 PLN</span>
                <button class="btn btn-success btn-success-outlined btn-icon-right">Zobacz <i class="fa fa-angle-right"></i></button>
            </span>
        </a>
    </div>

                        </div>
                    </div>
                    <div class="row">
                        <div class="product-grid col-md-8 col-sm-12 normal inner">
                                <div class="image">
        <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DqqcYS5BLF%252AgBJLeH%2524fgqJ74s%252AKL6e7DHJ9BIlHpkiCN0Id6Co3YIVjOen4qWOfwhzjkilg0dhO5bpWuVU0EuBM4tb4JS3yMhqqA9b1tkC6M163YkQiWzih9xkrXjmecc_P.API_13_18_viewsdesc" rel="nofollow"><img class="img-responsive" src="http://offers.gallery/p-c0-e0-c0e0939030d3f43e676501e5e60b81ee500x500/hantla-hex-pro-4-60-kg-marki-hms.jpg"/></a>
        <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DqqcYS5BLF%252AgBJLeH%2524fgqJ74s%252AKL6e7DHJ9BIlHpkiCN0Id6Co3YIVjOen4qWOfwhzjkilg0dhO5bpWuVU0EuBM4tb4JS3yMhqqA9b1tkC6M163YkQiWzih9xkrXjmecc_P.API_13_18_viewsdesc" rel="nofollow">
            <span class="content">
                <h5>Hantla hex pro 4 - 60 kg marki Hms</h5>
                <span class="price">69,00 PLN</span>
                <button class="btn btn-success btn-success-outlined btn-icon-right">Zobacz <i class="fa fa-angle-right"></i></button>
            </span>
        </a>
    </div>

                        </div>
                        <div class="product-grid col-md-4 hidden-sm hidden-xs normal inner">
                                <div class="image">
        <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DllWp%2524AH6%252A6cA7I14MNMolQe8mO%2524Hvmiy1cb0oFUdxRSjYJHsykLlUJJ4q3Mv%2524auf%252ABKFbuWatwaRcjl%252ARv%252ADt%2524e1Iggtr8IPxhRtMc08LGYRzZmnJ7%252Ag0xVs37ipUfw3_P.API_14_18_viewsdesc" rel="nofollow"><img class="img-responsive" src="http://offers.gallery/p-6b-c3-6bc339242834f04c843cc6ad95bd80d2500x500/osram-w215w-18-w-7515dwp-02b-2-szt.jpg"/></a>
        <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DllWp%2524AH6%252A6cA7I14MNMolQe8mO%2524Hvmiy1cb0oFUdxRSjYJHsykLlUJJ4q3Mv%2524auf%252ABKFbuWatwaRcjl%252ARv%252ADt%2524e1Iggtr8IPxhRtMc08LGYRzZmnJ7%252Ag0xVs37ipUfw3_P.API_14_18_viewsdesc" rel="nofollow">
            <span class="content">
                <h5>Osram W21/5W 1,8 W 7515DWP-02B 2 szt.</h5>
                <span class="price">81,23 PLN</span>
                <button class="btn btn-success btn-success-outlined btn-icon-right">Zobacz <i class="fa fa-angle-right"></i></button>
            </span>
        </a>
    </div>

                        </div>
                        <div class="product-grid col-md-4 hidden-sm hidden-xs normal inner">
                                <div class="image">
        <a href="/produkt-telefony-komorkowe/samsung-galaxy-a53.html"><img class="img-responsive" src="http://offers.gallery/p-32-c8-32c813f4fdfb53ea22776dbebe875a15500x500/samsung-galaxy-a53.jpg"/></a>
        <a href="/produkt-telefony-komorkowe/samsung-galaxy-a53.html">
            <span class="content">
                <h5>Samsung Galaxy A53</h5>
                <span class="price">1 849,00 PLN</span>
                <button class="btn btn-success btn-success-outlined btn-icon-right">Zobacz <i class="fa fa-angle-right"></i></button>
            </span>
        </a>
    </div>

                        </div>
                    </div>
                    <div class="row">
                        <div class="product-grid col-md-4 hidden-sm hidden-xs normal inner">
                                <div class="image">
        <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DeN3C%2524jGSHEhjBgcRR5TgFyhLHwq5tjFH199q7F%252AIoCjf0ioDLtXpHMwyBtFaX4NZHP4M7bntcQVW7k2qpWnI3yWAlkKMlaDg%252A0Uo6HIK%252ALD7b7nETSw4e4UFlldfx0%252AS_P.API_16_18_viewsdesc" rel="nofollow"><img class="img-responsive" src="http://offers.gallery/p-b6-e3-b6e357e2507fc677c103d28aa0af6d25500x500/samsung-galaxy-s21-sm-g991.jpg"/></a>
        <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DeN3C%2524jGSHEhjBgcRR5TgFyhLHwq5tjFH199q7F%252AIoCjf0ioDLtXpHMwyBtFaX4NZHP4M7bntcQVW7k2qpWnI3yWAlkKMlaDg%252A0Uo6HIK%252ALD7b7nETSw4e4UFlldfx0%252AS_P.API_16_18_viewsdesc" rel="nofollow">
            <span class="content">
                <h5>Samsung Galaxy S21 SM-G991</h5>
                <span class="price">4 129,00 PLN</span>
                <button class="btn btn-success btn-success-outlined btn-icon-right">Zobacz <i class="fa fa-angle-right"></i></button>
            </span>
        </a>
    </div>

                        </div>
                        <div class="product-grid col-md-4 hidden-sm hidden-xs normal inner">
                                <div class="image">
        <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DZnNzWFoAiDtO39W2lMFxwC99mzhZLb2rvoTFplq2DHmmwg6GobPyXAPYbRdZhF1gxGCR%252AVSOXyN%252AB9G8TnhaWRYCCcX%252ArKYIPLEpqZFHIiVVR%2524KErnafEGqWfdjjeOoS_P.API_17_18_viewsdesc" rel="nofollow"><img class="img-responsive" src="http://offers.gallery/p-69-1f-691fae1ad95a2c81dd8a0e3f3ae272bf500x500/kinetic-rower-skadany-skadak-licorne.jpg"/></a>
        <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DZnNzWFoAiDtO39W2lMFxwC99mzhZLb2rvoTFplq2DHmmwg6GobPyXAPYbRdZhF1gxGCR%252AVSOXyN%252AB9G8TnhaWRYCCcX%252ArKYIPLEpqZFHIiVVR%2524KErnafEGqWfdjjeOoS_P.API_17_18_viewsdesc" rel="nofollow">
            <span class="content">
                <h5>Kinetic Rower składany składak licorne</h5>
                <span class="price">1 050,00 PLN</span>
                <button class="btn btn-success btn-success-outlined btn-icon-right">Zobacz <i class="fa fa-angle-right"></i></button>
            </span>
        </a>
    </div>

                        </div>
                        <div class="product-grid col-md-4 hidden-sm hidden-xs normal inner">
                                <div class="image">
        <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253D%2524NNf%252AE0Zw3xFC%252AzNkbJzWHgu1ho3CJcQfp0dI7OfgXN1fxLH8fVGosf1Se%252ASCg7na8N1obwvaJM5rKfCB%252AFsL4h0OkDjT1suKnTuMMqcCXpLUg8vnSeQhAN3oAjWtWqx_P.API_18_18_viewsdesc" rel="nofollow"><img class="img-responsive" src="http://offers.gallery/p-50-6e-506ea8f372e93e4c1d234c8073b2a540500x500/elektryczny-wzek-inwalidzki-navix-fwd-vermeiren-terenowo-pokojowy.jpg"/></a>
        <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253D%2524NNf%252AE0Zw3xFC%252AzNkbJzWHgu1ho3CJcQfp0dI7OfgXN1fxLH8fVGosf1Se%252ASCg7na8N1obwvaJM5rKfCB%252AFsL4h0OkDjT1suKnTuMMqcCXpLUg8vnSeQhAN3oAjWtWqx_P.API_18_18_viewsdesc" rel="nofollow">
            <span class="content">
                <h5>Elektryczny wózek inwalidzki NAVIX FWD Vermeiren (terenowo-pokojowy)</h5>
                <span class="price">11 490,00 PLN</span>
                <button class="btn btn-success btn-success-outlined btn-icon-right">Zobacz <i class="fa fa-angle-right"></i></button>
            </span>
        </a>
    </div>

                        </div>
                    </div>
                </div>
                </div>
                <!-- products in the group ends here -->

                </div>
                </div>
                            <div>
                <div class="col-xs-12">

                <!-- products in the group starts here -->
                <div class="row lower">
                <div class="col-xs-6">
                    <div class="row">
                        <div class="product-grid col-md-8 col-sm-12 normal inner">
                                <div class="image">
        <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DQ%25245B4SfjKwTZaA1qTlDKt8AbY3YSETwMJgZkqeVSPXP2alyr703fYJ0piqzXPswx3puNB5GpMQ7cAbBAjudJbg1tLmbd%2524FkkvOA%252ALe%252A4IPhzx%252AmocyelwuaH6qRfyYrA_P.API_1_18_viewsdesc" rel="nofollow"><img class="img-responsive" src="http://offers.gallery/p-d4-db-d4db2393d96f8f5ac49ebca45f3564d8500x500/lustro-azienkowe-podwietlane-led-80x60cm-led4-80x60cm.jpg"/></a>
        <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DQ%25245B4SfjKwTZaA1qTlDKt8AbY3YSETwMJgZkqeVSPXP2alyr703fYJ0piqzXPswx3puNB5GpMQ7cAbBAjudJbg1tLmbd%2524FkkvOA%252ALe%252A4IPhzx%252AmocyelwuaH6qRfyYrA_P.API_1_18_viewsdesc" rel="nofollow">
            <span class="content">
                <h5>Lustro łazienkowe podświetlane led 80x60cm, LED4 80x60cm</h5>
                <span class="price">399,00 PLN</span>
                <button class="btn btn-success btn-success-outlined btn-icon-right">Zobacz <i class="fa fa-angle-right"></i></button>
            </span>
        </a>
    </div>

                        </div>
                        <div class="product-grid col-md-4 hidden-sm hidden-xs normal inner">
                                <div class="image">
        <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DXXrPZ9e68oIsh9mb%252Aft7ye9yFsehAFSV%2524Ikp%252AaIcHlAWOIHUPCUIVpXQxPwR72OVnG98kPZYQurnMXUhFpZ0VPOsNbpPD9u8PwjYyN6pwU9NLqfVZC2vk0eJnvAVutRs_P.API_2_18_viewsdesc" rel="nofollow"><img class="img-responsive" src="http://offers.gallery/p-52-ae-52ae3bbfeafacdf5b16db012181b4c2d500x500/drzwi-prysznicowe-przesuwne-liniger-d20-premium.jpg"/></a>
        <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DXXrPZ9e68oIsh9mb%252Aft7ye9yFsehAFSV%2524Ikp%252AaIcHlAWOIHUPCUIVpXQxPwR72OVnG98kPZYQurnMXUhFpZ0VPOsNbpPD9u8PwjYyN6pwU9NLqfVZC2vk0eJnvAVutRs_P.API_2_18_viewsdesc" rel="nofollow">
            <span class="content">
                <h5>Drzwi Prysznicowe Przesuwne Liniger D20 PREMIUM</h5>
                <span class="price">1 309,00 PLN</span>
                <button class="btn btn-success btn-success-outlined btn-icon-right">Zobacz <i class="fa fa-angle-right"></i></button>
            </span>
        </a>
    </div>

                        </div>
                        <div class="product-grid col-md-4 hidden-sm hidden-xs normal inner">
                                <div class="image">
        <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DcvwsNIEQjgJyKvBY1dNsMPktYunpBlDf0xlSK6L678OUcDaI%25242ksr%252AHyHZYZm5iFHOADb0KiKk27z7xuQdtA6NkGQOuTCpRVRGoqR%2524ETDWlIu1itUc0mT6M3Cclj9zIO_P.API_3_18_viewsdesc" rel="nofollow"><img class="img-responsive" src="http://offers.gallery/p-9d-80-9d80cf4079f092f17984b56fb2e1c75e500x500/imoum-live-acuchowa-mini-pia-elektryczna.jpg"/></a>
        <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DcvwsNIEQjgJyKvBY1dNsMPktYunpBlDf0xlSK6L678OUcDaI%25242ksr%252AHyHZYZm5iFHOADb0KiKk27z7xuQdtA6NkGQOuTCpRVRGoqR%2524ETDWlIu1itUc0mT6M3Cclj9zIO_P.API_3_18_viewsdesc" rel="nofollow">
            <span class="content">
                <h5>Imoum Live Łańcuchowa mini piła elektryczna</h5>
                <span class="price">549,00 PLN</span>
                <button class="btn btn-success btn-success-outlined btn-icon-right">Zobacz <i class="fa fa-angle-right"></i></button>
            </span>
        </a>
    </div>

                        </div>
                    </div>
                    <div class="row">
                        <div class="product-grid col-md-4 hidden-sm hidden-xs normal inner">
                                <div class="image">
        <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DXBUodGOQYmoDA4KNKywD8XwvXQ9TDzqKKjDMhfXlkIce%25248eqOoO4BHR1dzu1fnHtFkjBHdawvolSHG1THSU8lg3NyssXkgyEUJnVD08j6n39FvYAi0jEnDjwx%252AXXyIGn_P.API_4_18_viewsdesc" rel="nofollow"><img class="img-responsive" src="http://offers.gallery/p-91-6b-916b644d5ac7d82fdb5fa8e158e61ed5500x500/metal-gum-daszek-zadaszenie-systemowe-drzwi-modern-300x060.jpg"/></a>
        <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DXBUodGOQYmoDA4KNKywD8XwvXQ9TDzqKKjDMhfXlkIce%25248eqOoO4BHR1dzu1fnHtFkjBHdawvolSHG1THSU8lg3NyssXkgyEUJnVD08j6n39FvYAi0jEnDjwx%252AXXyIGn_P.API_4_18_viewsdesc" rel="nofollow">
            <span class="content">
                <h5>Metal-gum Daszek zadaszenie systemowe drzwi modern 300x060</h5>
                <span class="price">289,00 PLN</span>
                <button class="btn btn-success btn-success-outlined btn-icon-right">Zobacz <i class="fa fa-angle-right"></i></button>
            </span>
        </a>
    </div>

                        </div>
                        <div class="product-grid col-md-4 hidden-sm hidden-xs normal inner">
                                <div class="image">
        <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DV2oz7WoXiJd6V7O5O%252AGKdU04ZpwicwfMSKXy6JS4GoDlOJz5yJC6Uf1IrjOXzc8FlzkRGyENOg8TRLCdvWQF3dAljgcsg0diNIOeQNtriwgWnLi9Sn7bjamNW3GAQYsO_P.API_5_18_viewsdesc" rel="nofollow"><img class="img-responsive" src="http://offers.gallery/p-92-c2-92c2c25470a62d2aa6052fd29103b118500x500/daszek-zadaszenie-proste-drzwi-270-x-100.jpg"/></a>
        <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DV2oz7WoXiJd6V7O5O%252AGKdU04ZpwicwfMSKXy6JS4GoDlOJz5yJC6Uf1IrjOXzc8FlzkRGyENOg8TRLCdvWQF3dAljgcsg0diNIOeQNtriwgWnLi9Sn7bjamNW3GAQYsO_P.API_5_18_viewsdesc" rel="nofollow">
            <span class="content">
                <h5>Daszek Zadaszenie Proste Drzwi 270 x 100</h5>
                <span class="price">949,00 PLN</span>
                <button class="btn btn-success btn-success-outlined btn-icon-right">Zobacz <i class="fa fa-angle-right"></i></button>
            </span>
        </a>
    </div>

                        </div>
                        <div class="product-grid col-md-4 hidden-sm hidden-xs normal inner">
                                <div class="image">
        <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DbfygqLNL1eGUFAIDZ5E2TMJN6iGGPOoFqi8c%252Aeos2gqk3ntafLM66G3f9WsFjSprZftaBTwG%252AEZ7un1bdEvqCl5Yt4IJJZjVJSiVW1voAvHB6%252AdZyanHTvsIzPPbFSHS_P.API_6_18_viewsdesc" rel="nofollow"><img class="img-responsive" src="http://offers.gallery/p-88-26-8826f253afe94dbc610f622145906750500x500/einhell-wertykulator-i-aerator-gc-sa-1231-2w1.jpg"/></a>
        <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DbfygqLNL1eGUFAIDZ5E2TMJN6iGGPOoFqi8c%252Aeos2gqk3ntafLM66G3f9WsFjSprZftaBTwG%252AEZ7un1bdEvqCl5Yt4IJJZjVJSiVW1voAvHB6%252AdZyanHTvsIzPPbFSHS_P.API_6_18_viewsdesc" rel="nofollow">
            <span class="content">
                <h5>Einhell Wertykulator i aerator gc-sa 1231 2w1</h5>
                <span class="price">551,99 PLN</span>
                <button class="btn btn-success btn-success-outlined btn-icon-right">Zobacz <i class="fa fa-angle-right"></i></button>
            </span>
        </a>
    </div>

                        </div>
                    </div>
                    <div class="row">
                        <div class="product-grid col-md-4 hidden-sm hidden-xs normal inner">
                                <div class="image">
        <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253D9azcmEcLX0Rej1Qr0%252AnU98zMS0SgkcT8g4MU4xwpBueeBSdjpaCksZMaOg6JfAzK1Zuaw4NfJXLHIXGf3%2524aAgJOABMxcjXCbSvHP2pEMhp6XUVL%2524J8iB0WZMaTyH4UZv_P.API_7_18_viewsdesc" rel="nofollow"><img class="img-responsive" src="http://offers.gallery/p-2d-31-2d3141b88e0ac962c28f2271532c596c500x500/tablica-mapa-2x3-officeboard-mapa-administracyjna-polski-1025x120cm-pyta-magnetyczna-lakierowana-tmpa2m.jpg"/></a>
        <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253D9azcmEcLX0Rej1Qr0%252AnU98zMS0SgkcT8g4MU4xwpBueeBSdjpaCksZMaOg6JfAzK1Zuaw4NfJXLHIXGf3%2524aAgJOABMxcjXCbSvHP2pEMhp6XUVL%2524J8iB0WZMaTyH4UZv_P.API_7_18_viewsdesc" rel="nofollow">
            <span class="content">
                <h5>Tablica mapa 2x3 officeBoard – Mapa administracyjna Polski 102,5x120cm, płyta magnetyczna lakierowana, TMPA2M</h5>
                <span class="price">361,28 PLN</span>
                <button class="btn btn-success btn-success-outlined btn-icon-right">Zobacz <i class="fa fa-angle-right"></i></button>
            </span>
        </a>
    </div>

                        </div>
                        <div class="product-grid col-md-4 hidden-sm hidden-xs normal inner">
                                <div class="image">
        <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DSl3avdAqWkSd%252AL%252Ae2Emsu0uKjEvb%2524Uvip6LwkVRusovJucQww2AyFvttF4%252AVDpAC60CDgQlR66IkvsTcIC%2524Rx0c8IYlTV1oHlR5shQHAuesBRkChAQtZX2yyxe3ejpkg_P.API_8_18_viewsdesc" rel="nofollow"><img class="img-responsive" src="http://offers.gallery/p-82-13-8213938ba2034d16261da4accef85cc8500x500/daszek-zadaszenie-systemowe-drzwi-modern-200x100.jpg"/></a>
        <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DSl3avdAqWkSd%252AL%252Ae2Emsu0uKjEvb%2524Uvip6LwkVRusovJucQww2AyFvttF4%252AVDpAC60CDgQlR66IkvsTcIC%2524Rx0c8IYlTV1oHlR5shQHAuesBRkChAQtZX2yyxe3ejpkg_P.API_8_18_viewsdesc" rel="nofollow">
            <span class="content">
                <h5>Daszek Zadaszenie Systemowe Drzwi Modern 200x100</h5>
                <span class="price">299,00 PLN</span>
                <button class="btn btn-success btn-success-outlined btn-icon-right">Zobacz <i class="fa fa-angle-right"></i></button>
            </span>
        </a>
    </div>

                        </div>
                        <div class="product-grid col-md-4 hidden-sm hidden-xs normal inner">
                                <div class="image">
        <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253D0lnLXmwC8IVn%2524r8nFlASMxsiMm7CsC36Y6imaNbMQuY6KUuJDt5ZEiNG3nVyK5yKeyELML%2524OY%252AP3HwrvHpMpQKevz%252Aio9Y9kKQYDPClog7P0SbxFsG6G0NR6Igf75Be2_P.API_9_18_viewsdesc" rel="nofollow"><img class="img-responsive" src="http://offers.gallery/p-04-3e-043e56b8b46b6a4fc7f8a00004d6fd63500x500/chodzie-iwona-chodzie-iwona-serwis-kawowy-39-czci-na-12-osb-b013.jpg"/></a>
        <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253D0lnLXmwC8IVn%2524r8nFlASMxsiMm7CsC36Y6imaNbMQuY6KUuJDt5ZEiNG3nVyK5yKeyELML%2524OY%252AP3HwrvHpMpQKevz%252Aio9Y9kKQYDPClog7P0SbxFsG6G0NR6Igf75Be2_P.API_9_18_viewsdesc" rel="nofollow">
            <span class="content">
                <h5>Chodzież / iwona Chodzież iwona - serwis kawowy 39 części na 12 osób b013</h5>
                <span class="price">1 484,65 PLN</span>
                <button class="btn btn-success btn-success-outlined btn-icon-right">Zobacz <i class="fa fa-angle-right"></i></button>
            </span>
        </a>
    </div>

                        </div>
                    </div>
                </div>
                <div class="col-xs-6">
                    <div class="row">
                        <div class="product-grid col-md-4 hidden-sm hidden-xs normal inner">
                                <div class="image">
        <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DtryK992K0WxyQk%252AXJdiaXA0JZjvgEYIVxFrpgrv9LwqGx6%2524JrrufgtxYL1qlAbLxvkjjftiuifRRDwj1GZibaUcmCCJAuxTNEw3MQHPr8S9pTwNzAHwsSKlsFUeTO8KA_P.API_10_18_viewsdesc" rel="nofollow"><img class="img-responsive" src="http://offers.gallery/p-59-5d-595d45873a1410455aca20d314fa70cb500x500/daszek-zadaszenie-drzwi-modern-120-x-80.jpg"/></a>
        <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DtryK992K0WxyQk%252AXJdiaXA0JZjvgEYIVxFrpgrv9LwqGx6%2524JrrufgtxYL1qlAbLxvkjjftiuifRRDwj1GZibaUcmCCJAuxTNEw3MQHPr8S9pTwNzAHwsSKlsFUeTO8KA_P.API_10_18_viewsdesc" rel="nofollow">
            <span class="content">
                <h5>Daszek Zadaszenie Drzwi Modern 120 x 80</h5>
                <span class="price">149,00 PLN</span>
                <button class="btn btn-success btn-success-outlined btn-icon-right">Zobacz <i class="fa fa-angle-right"></i></button>
            </span>
        </a>
    </div>

                        </div>
                        <div class="product-grid col-md-4 hidden-sm hidden-xs normal inner">
                                <div class="image">
        <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DzZB75WtMmmaY6%252A%2524lvMEdy1DkIUBtMlZcC%252A%2524AE4HXH4%2524xUFmp9TDM%2524uJVIxDHOXK67%252AIBUxytqYT%2524CDsVTuKJw9xLyZsWU3uFQfgjMSQBkX5VDetRh2G9KcsVzLPCLJ98_P.API_11_18_viewsdesc" rel="nofollow"><img class="img-responsive" src="http://offers.gallery/p-6d-75-6d75369d101932c9aa195e81cf40b72c500x500/glebogryzarka-wm500-7km-zestaw-gigant-kultywator-marki-holida.jpg"/></a>
        <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DzZB75WtMmmaY6%252A%2524lvMEdy1DkIUBtMlZcC%252A%2524AE4HXH4%2524xUFmp9TDM%2524uJVIxDHOXK67%252AIBUxytqYT%2524CDsVTuKJw9xLyZsWU3uFQfgjMSQBkX5VDetRh2G9KcsVzLPCLJ98_P.API_11_18_viewsdesc" rel="nofollow">
            <span class="content">
                <h5>Glebogryzarka wm500 7km zestaw gigant kultywator marki Holida</h5>
                <span class="price">3 299,00 PLN</span>
                <button class="btn btn-success btn-success-outlined btn-icon-right">Zobacz <i class="fa fa-angle-right"></i></button>
            </span>
        </a>
    </div>

                        </div>
                        <div class="product-grid col-md-4 hidden-sm hidden-xs normal inner">
                                <div class="image">
        <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253D7d8eXYV5zJHFEYxDUQgSIe5ghajL8cC%252AACGFU54noXPQrXGqgBgY0RJP6%2524%252APWnkEPx2wmDsOSpERoJRLcaYcoqPXirPHqZdTSe39J87ISJXHc1UZsB4t28deNhroLrXq_P.API_12_18_viewsdesc" rel="nofollow"><img class="img-responsive" src="http://offers.gallery/p-8b-a2-8ba206418a1caf7d88b5567537898c4a500x500/daszek-zadaszenie-drzwi-klasyczne-120-x-80.jpg"/></a>
        <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253D7d8eXYV5zJHFEYxDUQgSIe5ghajL8cC%252AACGFU54noXPQrXGqgBgY0RJP6%2524%252APWnkEPx2wmDsOSpERoJRLcaYcoqPXirPHqZdTSe39J87ISJXHc1UZsB4t28deNhroLrXq_P.API_12_18_viewsdesc" rel="nofollow">
            <span class="content">
                <h5>Daszek Zadaszenie Drzwi Klasyczne 120 x 80</h5>
                <span class="price">149,00 PLN</span>
                <button class="btn btn-success btn-success-outlined btn-icon-right">Zobacz <i class="fa fa-angle-right"></i></button>
            </span>
        </a>
    </div>

                        </div>
                    </div>
                    <div class="row">
                        <div class="product-grid col-md-8 col-sm-12 normal inner">
                                <div class="image">
        <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DRCeBYT2eCb%2524AM%252AuM9DmdagDdSlTuDgejbL8gDZdKpzt9jwIJoQkkhmRF3A1NBJ%2524POtnGNYrLpvhKXEC3PRE7g7QUrwCAA1vN3KVhB%2524OLuXOKXyDyYPLykBnEv9leKPxr_P.API_13_18_viewsdesc" rel="nofollow"><img class="img-responsive" src="http://offers.gallery/p-05-62-05629428635a93b6d7f95d70ce1403d0500x500/irest-fotel-masujcy-brillactiq-a665-grafitowo-czarny-5903641991346.jpg"/></a>
        <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DRCeBYT2eCb%2524AM%252AuM9DmdagDdSlTuDgejbL8gDZdKpzt9jwIJoQkkhmRF3A1NBJ%2524POtnGNYrLpvhKXEC3PRE7g7QUrwCAA1vN3KVhB%2524OLuXOKXyDyYPLykBnEv9leKPxr_P.API_13_18_viewsdesc" rel="nofollow">
            <span class="content">
                <h5>Irest Fotel masujący brillactiq (a665) grafitowo-czarny (5903641991346)</h5>
                <span class="price">29 970,00 PLN</span>
                <button class="btn btn-success btn-success-outlined btn-icon-right">Zobacz <i class="fa fa-angle-right"></i></button>
            </span>
        </a>
    </div>

                        </div>
                        <div class="product-grid col-md-4 hidden-sm hidden-xs normal inner">
                                <div class="image">
        <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DpVDx35LYRYZf2kKzI7mwAR%2524DGZpQCnyXRmPLYyH8P7wjduAiKNvNXrnBlS10W%2524YymMOiQgpch67ekg8vYrJ0x9fQ3j63voSMzWiKD7jPRQfEwn7QYZMmyspAe%2524auh8fO_P.API_14_18_viewsdesc" rel="nofollow"><img class="img-responsive" src="http://offers.gallery/p-13-47-134789e51c55ed4d1cec39acc18f0dd9500x500/tablica-suchocieralna-2x3-w-ramie-aluminiowej-80x60cm.jpg"/></a>
        <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DpVDx35LYRYZf2kKzI7mwAR%2524DGZpQCnyXRmPLYyH8P7wjduAiKNvNXrnBlS10W%2524YymMOiQgpch67ekg8vYrJ0x9fQ3j63voSMzWiKD7jPRQfEwn7QYZMmyspAe%2524auh8fO_P.API_14_18_viewsdesc" rel="nofollow">
            <span class="content">
                <h5>Tablica suchościeralna 2x3 w ramie aluminiowej 80x60cm</h5>
                <span class="price">103,22 PLN</span>
                <button class="btn btn-success btn-success-outlined btn-icon-right">Zobacz <i class="fa fa-angle-right"></i></button>
            </span>
        </a>
    </div>

                        </div>
                        <div class="product-grid col-md-4 hidden-sm hidden-xs normal inner">
                                <div class="image">
        <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DfPTobnN4n1MqnzSpL4%25247jFGhZzRTVgm%252AiiHMXCbpTDXRKYVos79vjin46dYmFBxHyZ593D4EcBByCtxJTN8J8crzenG9venHIA1ZVs4ZU1s9yXRu521x%252ArmPRtkcdwnE_P.API_15_18_viewsdesc" rel="nofollow"><img class="img-responsive" src="http://offers.gallery/p-82-9d-829dbaa35fd4a35dd55c6f4b0556a884500x500/glistnik-jaskcze-ziele-ekstrakt-na-kurzajki-brodawki-15ml.jpg"/></a>
        <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DfPTobnN4n1MqnzSpL4%25247jFGhZzRTVgm%252AiiHMXCbpTDXRKYVos79vjin46dYmFBxHyZ593D4EcBByCtxJTN8J8crzenG9venHIA1ZVs4ZU1s9yXRu521x%252ArmPRtkcdwnE_P.API_15_18_viewsdesc" rel="nofollow">
            <span class="content">
                <h5>Glistnik Jaskółcze ziele ekstrakt na kurzajki, brodawki 15ml</h5>
                <span class="price">25,99 PLN</span>
                <button class="btn btn-success btn-success-outlined btn-icon-right">Zobacz <i class="fa fa-angle-right"></i></button>
            </span>
        </a>
    </div>

                        </div>
                    </div>
                    <div class="row">
                        <div class="product-grid col-md-4 hidden-sm hidden-xs normal inner">
                                <div class="image">
        <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DYNKTILHbxBmQTPUCvgYNlScu0puhWKz%252AOmnuX9MfJGYTWyveE7zuF1LhMnlU%2524H%252AxwFRLwUu396gBAVKrC%2524JtMSy%252A9YVJiLZkl0asTqj%2524Oo1Tk5IW78%252ATf%252AB58OgD2kaj_P.API_16_18_viewsdesc" rel="nofollow"><img class="img-responsive" src="http://offers.gallery/p-5c-62-5c626bf2c0418e03ec8769e02d9e4d45500x500/sotbe-atran-bateria-wannowa-cienna-43-zestaw.jpg"/></a>
        <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DYNKTILHbxBmQTPUCvgYNlScu0puhWKz%252AOmnuX9MfJGYTWyveE7zuF1LhMnlU%2524H%252AxwFRLwUu396gBAVKrC%2524JtMSy%252A9YVJiLZkl0asTqj%2524Oo1Tk5IW78%252ATf%252AB58OgD2kaj_P.API_16_18_viewsdesc" rel="nofollow">
            <span class="content">
                <h5>SOTBE ATRAN bateria wannowa ścienna &#43; ZESTAW</h5>
                <span class="price">199,00 PLN</span>
                <button class="btn btn-success btn-success-outlined btn-icon-right">Zobacz <i class="fa fa-angle-right"></i></button>
            </span>
        </a>
    </div>

                        </div>
                        <div class="product-grid col-md-4 hidden-sm hidden-xs normal inner">
                                <div class="image">
        <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253D25tp40%252AxJEiZrW6bmsYirQNabWebbUIrGpF5xY%252AAB01sQdWc5U4fsF%2524SdRlO21rT4ywTNFddA%2524sJs3SIvIukJ3MzJY%2524zs5mw3moiKh6PFWkStdCM2nJ5fxath9T1rP0j_P.API_17_18_viewsdesc" rel="nofollow"><img class="img-responsive" src="http://offers.gallery/p-34-39-34399fe5b7f5d742b6bd649b40f042b5500x500/materace-z-gr-wkad-materaceowy-do-pokrowca-h2h3-rednio-mikki-pianka.jpg"/></a>
        <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253D25tp40%252AxJEiZrW6bmsYirQNabWebbUIrGpF5xY%252AAB01sQdWc5U4fsF%2524SdRlO21rT4ywTNFddA%2524sJs3SIvIukJ3MzJY%2524zs5mw3moiKh6PFWkStdCM2nJ5fxath9T1rP0j_P.API_17_18_viewsdesc" rel="nofollow">
            <span class="content">
                <h5>Materace z gór Wkład materaceowy do pokrowca h2/h3 średnio miękki pianka</h5>
                <span class="price">119,00 PLN</span>
                <button class="btn btn-success btn-success-outlined btn-icon-right">Zobacz <i class="fa fa-angle-right"></i></button>
            </span>
        </a>
    </div>

                        </div>
                        <div class="product-grid col-md-4 hidden-sm hidden-xs normal inner">
                                <div class="image">
        <a href="/produkt-rozdrabniarki/bosch-axt-22-d-blisko-700-punktow-odbioru-w-calej-polsce-szybka-dostawa-atrakcyjne-raty-dostawa-w-2h-warszawa-poznan.html"><img class="img-responsive" src="http://offers.gallery/p-b7-01-b70182e88523da46f2319c93fca3241c500x500/bosch-axt-22-d-blisko-700-punktw-odbioru-w-caej-polsce-szybka-dostawa-atrakcyjne-raty-dostawa-w-2h-warszawa-pozna.jpg"/></a>
        <a href="/produkt-rozdrabniarki/bosch-axt-22-d-blisko-700-punktow-odbioru-w-calej-polsce-szybka-dostawa-atrakcyjne-raty-dostawa-w-2h-warszawa-poznan.html">
            <span class="content">
                <h5>Bosch axt 22 d - blisko 700 punktów odbioru w całej polsce! szybka dostawa! atrakcyjne raty! dostawa w 2h - warszawa poznań</h5>
                <span class="price">1 669,00 PLN</span>
                <button class="btn btn-success btn-success-outlined btn-icon-right">Zobacz <i class="fa fa-angle-right"></i></button>
            </span>
        </a>
    </div>

                        </div>
                    </div>
                </div>
                </div>
                <!-- products in the group ends here -->

                </div>
                </div>
                    </div>
    </div>

    </div>

    <footer>
        <div class="container">
            <div class="row">
                <div class="col-md-5">
                    <h5>O nas</h5>
                    <p>Porownywarka.co to serwis pozwalający na porównanie cen w najlepszych sklepach internetowych w
                        Polsce. Został stworzony, by ułatwić użytkownikom Internetu znalezienie najniższych cen i
                        wygodne e-zakupy. Porównaj oferty kilku tysięcy sklepów internetowych.</p>
                </div>
                <div class="col-md-7">
                    <h5>Dla sklepów</h5>
                    <p>Chcesz, aby znalazła się tutaj również oferta Twojego sklepu? Operatorem danych dla
                        serwisu Porownywarka.co jest Nokaut.pl, porównywarka cen i sieć reklamowa odwiedzana przez kilka
                        milionów użytkowników każdego miesiąca. Skontaktuj się skorzystaj z kontakt@nokaut.pl.</p>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    Copyright © 2023. Wszystkie prawa zastrzeżone.
                    <a href="http://localhost:8000/mapa-kategorii">Mapa kategorii</a>
                </div>
            </div>
        </div>
    </footer>

    <div id="modal-preloader" class="modal-backdrop fade in text-center" style="display:none;padding-top:100px;"><img
                src="/images/progress-circle-info.svg"></div>
    <script src="/js/bootstrap.min.js"></script>
    <script src="/js/owl.carousel.min.js"></script>
    <script src="/js/jquery.bxslider.min.js"></script>
    <script src="/js/jquery.growl.js" type="text/javascript"></script>
    <script src="/js/common.js"></script>
</body>
</html>
";s:10:" * version";s:3:"1.0";s:13:" * statusCode";i:200;s:13:" * statusText";s:2:"OK";s:10:" * charset";N;}