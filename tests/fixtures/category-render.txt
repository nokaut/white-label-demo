O:41:"Symfony\Component\HttpFoundation\Response":6:{s:7:"headers";O:50:"Symfony\Component\HttpFoundation\ResponseHeaderBag":5:{s:23:" * computedCacheControl";a:2:{s:8:"no-cache";b:1;s:7:"private";b:1;}s:10:" * cookies";a:0:{}s:14:" * headerNames";a:2:{s:13:"cache-control";s:13:"Cache-Control";s:4:"date";s:4:"Date";}s:10:" * headers";a:2:{s:13:"cache-control";a:1:{i:0;s:17:"no-cache, private";}s:4:"date";a:1:{i:0;s:29:"Thu, 23 Mar 2023 05:18:20 GMT";}}s:15:" * cacheControl";a:0:{}}s:10:" * content";s:163065:"<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8" />
    <title>    Muzyka - Porownywarka.co</title>
    <meta name="description" content="Znajdziesz tu wszystko to, czego potrzebujesz do muzykowania. Setki ofert różnorodnych produktów w najlepszy cech. Mamy tu oferty z topowych sklepów oferujących taki asortyment. Akcesoria dla muzyków, instrumenty wszelkiego typu (także elektroniczne), sprzęt nagłośnieniowy oraz wiele innych. Wejdź i sprawdź co mamy dla Ciebie w tym miejscu! Nie przepłacaj!" />
            <meta name="viewport" content="width=device-width, initial-scale=1">


    <link rel="canonical" href="http://localhost:8000/kategoria-muzyka/"/>
        <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="/css/bootstrap.css" media="screen">
    <link rel="stylesheet" href="/css/owl.carousel.css">
    <link rel="stylesheet" href="/css/jquery.bxslider.css">
    <link rel="stylesheet" href="/css/theme-bootstrap.css">
    <link rel="stylesheet" href="/css/ecommerce-theme-bootstrap.css">
    <link href="/css/jquery.growl.css" rel="stylesheet" type="text/css"/>
    <link href="//maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css" rel="stylesheet">
            <script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/1.10.2/jquery.min.js"></script>

    <!-- HTML5 shim and Respond.js IE8 support of HTML5 elements and media queries -->
    <!--[if lt IE 9]>
    <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
    <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->

    <script type="text/javascript">
        function search() {
            var url = 'http://localhost:8000/produkty-produkt:_PHRASE_VALUE_.html';
            var phrase = $('#phraseInput').val().trim().toLowerCase();
            if (!phrase) {
                alert('Pole do wyszukiwania nie może być puste');
                return false;
            }
            phrase = phrase.replace(/\s+/g, '-');
            location.href = url.replace('_PHRASE_VALUE_', encodeURIComponent(phrase));
            return false;
        }

        $(function () {
            $('#searchFrom').on('submit', function () {
                return search()
            });
            $('#buttonSearch').on('click', function () {
                return search()
            });
        });
    </script>
    
    <script type="text/javascript">
        function filterRanges(template, inputFromId, inputToId) {
            var valueFrom = $('#' + inputFromId).val();
            var valueTo = $('#' + inputToId).val();
            if (!valueFrom && !valueTo) {
                alert('Proszę podać wartości w polach koło przycisku "zastosuj"');
                return;
            }
            var url = template.replace('%25s~%25s', parseRangeValue(valueFrom) + '~' + parseRangeValue(valueTo));
            document.location.href = url;
        }

        function parseRangeValue(inputValue) {
            var value = parseFloat(inputValue);
            return value ? value : '';
        }
    </script>

</head>
<body>
    <div class="navbar navbar-default navbar-fixed-top yamm">
        <div class="container">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse"
                        data-target=".navbar-responsive-collapse">
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                <a class="navbar-brand" href="/">Porownywarka.co</a>
            </div>
            <div class="navbar-collapse collapse navbar-responsive-collapse">

                <ul class="nav navbar-nav">
            <li class="dropdown yamm-fw  active">
            <a href="#" data-toggle="dropdown" class="dropdown-toggle">Kategorie I <b class="caret"></b></a>
            <ul class="dropdown-menu">
                <li>
                    <div class="row">

                        <div class="col-sm-3">

                            <ul class="dropdown-menu dropdown-menu-inner">
                                <li class="dropdown-header">Kategorie</li>
                                                                    <li class="active"><a href="http://localhost:8000/kategoria-muzyka" title="Muzyka">Muzyka</a></li>
                                                                    <li><a href="http://localhost:8000/kategoria-filmy" title="Filmy">Filmy</a></li>
                                                                    <li><a href="http://localhost:8000/kategoria-fotografia-i-optyka" title="Fotografia i optyka">Fotografia i optyka</a></li>
                                                                    <li><a href="http://localhost:8000/kategoria-komputery" title="Komputery">Komputery</a></li>
                                                                    <li><a href="http://localhost:8000/kategoria-albumy" title="Albumy">Albumy</a></li>
                                                                    <li><a href="http://localhost:8000/kategoria-sprzet-rtv" title="Sprzęt RTV">Sprzęt RTV</a></li>
                                                                    <li><a href="http://localhost:8000/kategoria-sprzet-agd" title="Sprzęt AGD">Sprzęt AGD</a></li>
                                                                    <li><a href="http://localhost:8000/kategoria-gry-i-konsole" title="Gry i konsole">Gry i konsole</a></li>
                                                            </ul>

                        </div>
                                                    <div class="col-sm-9">

                                <div class="row">
                                    <div class="col-sm-12 col-xs-12">
                                        <span class="dropdown-header dropdown-header-no-list">Popularne produkty</span>
                                    </div>
                                </div>

                                <div class="row">
                                                                            <div class="col-md-2 col-xs-4">
                                            <a href="http://localhost:8000/produkt-sluchawki/sony-mdr-rf895.html">
                                                <div class="product tiny">
                                                    <div class="image">
                                                        <img class='img-responsive' src="http://offers.gallery/p-fe-57-fe5750ad73040ae221f65cfbcaae163a90x90/sony-mdr-rf895.jpg" />
                                                    </div>
                                                    <span class="price">od 379,04 PLN</span>
                                                    <h5 class="title">Sony MDR-RF895</h5>
                                                </div>
                                            </a>
                                        </div>
                                                                            <div class="col-md-2 col-xs-4">
                                            <a href="http://localhost:8000/produkt-sluchawki/jbl-t225.html">
                                                <div class="product tiny">
                                                    <div class="image">
                                                        <img class='img-responsive' src="http://offers.gallery/p-3f-41-3f41a1801783ad7c74f0f9443a3c28f390x90/jbl-t225.jpg" />
                                                    </div>
                                                    <span class="price">od 399,00 PLN</span>
                                                    <h5 class="title">JBL T225</h5>
                                                </div>
                                            </a>
                                        </div>
                                                                            <div class="col-md-2 col-xs-4">
                                            <a href="http://localhost:8000/produkt-roboty-kuchenne/robot-planetarny-bosch-mum9bx5s65-optimum-zamow-z-dostawa-jutro-darmowy-transport.html">
                                                <div class="product tiny">
                                                    <div class="image">
                                                        <img class='img-responsive' src="http://offers.gallery/p-1d-ea-1dea070b6aba94bbdfc11d80263673f190x90/robot-planetarny-bosch-mum9bx5s65-optimum-43-zamw-z-dostaw-jutro-43-darmowy-transport-kolor-srebrny.jpg" />
                                                    </div>
                                                    <span class="price">od 3649,00 PLN</span>
                                                    <h5 class="title">Robot planetarny BOSCH MUM9BX5S65 Optimum &#43; Zamów z DOSTAWĄ JUTRO! &#43; DARMOWY TRANSPORT!, kolor srebrny</h5>
                                                </div>
                                            </a>
                                        </div>
                                                                            <div class="col-md-2 col-xs-4">
                                            <a href="http://localhost:8000/produkt-sluchawki/beats-by-dr-dre-studio-3.html">
                                                <div class="product tiny">
                                                    <div class="image">
                                                        <img class='img-responsive' src="http://offers.gallery/p-0a-e8-0ae87a96abbc3ccf37d1f3a05f17d3a490x90/beats-by-dr-dre-studio-3.jpg" />
                                                    </div>
                                                    <span class="price">od 1299,00 PLN</span>
                                                    <h5 class="title">Beats by Dr. Dre Studio 3</h5>
                                                </div>
                                            </a>
                                        </div>
                                                                            <div class="col-md-2 col-xs-4">
                                            <a href="http://localhost:8000/produkt-sluchawki/sony-wf-1000.html">
                                                <div class="product tiny">
                                                    <div class="image">
                                                        <img class='img-responsive' src="http://offers.gallery/p-6d-d6-6dd67f7b817841b6e3cb91c81ec30c7390x90/sony-wf-1000.jpg" />
                                                    </div>
                                                    <span class="price">od 499,99 PLN</span>
                                                    <h5 class="title">Sony WF-1000</h5>
                                                </div>
                                            </a>
                                        </div>
                                                                            <div class="col-md-2 col-xs-4">
                                            <a href="http://localhost:8000/produkt-sluchawki/xiaomi-redmi-buds-3.html">
                                                <div class="product tiny">
                                                    <div class="image">
                                                        <img class='img-responsive' src="http://offers.gallery/p-cd-ad-cdad5f581d0024667108791ce91b13f490x90/xiaomi-redmi-buds-3.jpg" />
                                                    </div>
                                                    <span class="price">od 79,95 PLN</span>
                                                    <h5 class="title">Xiaomi Redmi Buds 3</h5>
                                                </div>
                                            </a>
                                        </div>
                                                                    </div>

                            </div>
                                            </div>
                </li>
            </ul>
        </li>
                <li class="dropdown yamm-fw ">
            <a href="#" data-toggle="dropdown" class="dropdown-toggle">Kategorie II <b class="caret"></b></a>
            <ul class="dropdown-menu">
                <li>
                    <div class="row">

                        <div class="col-sm-3">

                            <ul class="dropdown-menu dropdown-menu-inner">
                                <li class="dropdown-header">Kategorie</li>
                                                                    <li><a href="http://localhost:8000/kategoria-inne" title="Inne">Inne</a></li>
                                                                    <li><a href="http://localhost:8000/kategoria-telefony-i-akcesoria" title="Telefony i akcesoria">Telefony i akcesoria</a></li>
                                                                    <li><a href="http://localhost:8000/kategoria-motoryzacja" title="Motoryzacja">Motoryzacja</a></li>
                                                                    <li><a href="http://localhost:8000/kategoria-zdrowie" title="Zdrowie">Zdrowie</a></li>
                                                                    <li><a href="http://localhost:8000/kategoria-moda-i-styl" title="Moda i styl">Moda i styl</a></li>
                                                                    <li><a href="http://localhost:8000/kategoria-sport-i-hobby" title="Sport i hobby">Sport i hobby</a></li>
                                                                    <li><a href="http://localhost:8000/kategoria-delikatesy" title="Delikatesy">Delikatesy</a></li>
                                                            </ul>

                        </div>
                                                    <div class="col-sm-9">

                                <div class="row">
                                    <div class="col-sm-12 col-xs-12">
                                        <span class="dropdown-header dropdown-header-no-list">Popularne produkty</span>
                                    </div>
                                </div>

                                <div class="row">
                                                                            <div class="col-md-2 col-xs-4">
                                            <a href="http://localhost:8000/produkt-bieznie/bieznia-elektryczna-kinetic-2900.html">
                                                <div class="product tiny">
                                                    <div class="image">
                                                        <img class='img-responsive' src="http://offers.gallery/p-9d-14-9d145773c53a6844b286bfb45d1cf8ed90x90/bienia-elektryczna-kinetic-2900-4260495759791.jpg" />
                                                    </div>
                                                    <span class="price">999,00 PLN</span>
                                                    <h5 class="title">Bieżnia elektryczna Kinetic 2900 (4260495759791)</h5>
                                                </div>
                                            </a>
                                        </div>
                                                                            <div class="col-md-2 col-xs-4">
                                            <a href="http://localhost:8000/produkt-telefony-komorkowe/samsung-galaxy-s20-fe-5g-sm-g781.html">
                                                <div class="product tiny">
                                                    <div class="image">
                                                        <img class='img-responsive' src="http://offers.gallery/p-39-68-396882215d00a7811b9ab789dab51aa190x90/samsung-galaxy-s20-fe-5g-sm-g781.jpg" />
                                                    </div>
                                                    <span class="price">od 1977,00 PLN</span>
                                                    <h5 class="title">Samsung Galaxy S20 FE 5G SM-G781</h5>
                                                </div>
                                            </a>
                                        </div>
                                                                            <div class="col-md-2 col-xs-4">
                                            <a href="http://localhost:8000/produkt-bieznie/bieznia-elektryczna-kinetic-do-10-km.html">
                                                <div class="product tiny">
                                                    <div class="image">
                                                        <img class='img-responsive' src="http://offers.gallery/p-dd-8d-dd8d07585cd08e9442f64a43eb83ac4d90x90/bienia-elektryczna-kinetic-do-10-km-4260495754925.jpg" />
                                                    </div>
                                                    <span class="price">od 799,00 PLN</span>
                                                    <h5 class="title">Bieżnia elektryczna Kinetic do 10 km (4260495754925)</h5>
                                                </div>
                                            </a>
                                        </div>
                                                                            <div class="col-md-2 col-xs-4">
                                            <a href="http://localhost:8000/produkt-telefony-komorkowe/apple-iphone-11-64gb.html">
                                                <div class="product tiny">
                                                    <div class="image">
                                                        <img class='img-responsive' src="http://offers.gallery/p-7b-a4-7ba42684bfa28bd9deb05cadfed989db90x90/apple-iphone-11-64gb.jpg" />
                                                    </div>
                                                    <span class="price">od 2199,00 PLN</span>
                                                    <h5 class="title">Apple iPhone 11 64GB</h5>
                                                </div>
                                            </a>
                                        </div>
                                                                            <div class="col-md-2 col-xs-4">
                                            <a href="http://localhost:8000/produkt-telefony-komorkowe/samsung-galaxy-m23.html">
                                                <div class="product tiny">
                                                    <div class="image">
                                                        <img class='img-responsive' src="http://offers.gallery/p-4b-93-4b93cf43b244aa554ffb7042ba34860890x90/samsung-galaxy-m23.jpg" />
                                                    </div>
                                                    <span class="price">od 949,00 PLN</span>
                                                    <h5 class="title">Samsung Galaxy M23</h5>
                                                </div>
                                            </a>
                                        </div>
                                                                            <div class="col-md-2 col-xs-4">
                                            <a href="http://localhost:8000/produkt-zarowki-ksenonowe-samochodowe/zarowki-2szt-samochodowe-h7-12v-xenon-h-i-d-blue-vision-moc-55w-lub-100w-homologowane-d7d3050e0abf6d33e2e4331a92a702b0.html">
                                                <div class="product tiny">
                                                    <div class="image">
                                                        <img class='img-responsive' src="http://offers.gallery/p-f3-69-f3690effca20b69d9024be22204fd43290x90/arwki-2szt-samochodowe-h7-12v-xenon-hid-blue-vision-moc-55w-lub-100w-homologowane-marki-lumiko-usajk.jpg" />
                                                    </div>
                                                    <span class="price">73,00 PLN</span>
                                                    <h5 class="title">Żarówki (2szt.) samochodowe h7 (12v) xenon h.i.d. blue vision (moc 55w lub 100w) - homologowane. marki Lumiko usa/jk</h5>
                                                </div>
                                            </a>
                                        </div>
                                                                    </div>

                            </div>
                                            </div>
                </li>
            </ul>
        </li>
                <li class="dropdown yamm-fw ">
            <a href="#" data-toggle="dropdown" class="dropdown-toggle">Kategorie III <b class="caret"></b></a>
            <ul class="dropdown-menu">
                <li>
                    <div class="row">

                        <div class="col-sm-3">

                            <ul class="dropdown-menu dropdown-menu-inner">
                                <li class="dropdown-header">Kategorie</li>
                                                                    <li><a href="http://localhost:8000/kategoria-dla-dzieci" title="Dla dzieci">Dla dzieci</a></li>
                                                                    <li><a href="http://localhost:8000/kategoria-prezenty" title="Prezenty">Prezenty</a></li>
                                                                    <li><a href="http://localhost:8000/kategoria-kosmetyki" title="Kosmetyki">Kosmetyki</a></li>
                                                                    <li><a href="http://localhost:8000/kategoria-erotyka" title="Erotyka">Erotyka</a></li>
                                                                    <li><a href="http://localhost:8000/kategoria-biznes" title="Biznes">Biznes</a></li>
                                                                    <li><a href="http://localhost:8000/kategoria-dom-i-ogrod" title="Dom i ogród">Dom i ogród</a></li>
                                                                    <li><a href="http://localhost:8000/kategoria-narzedzia" title="Narzędzia">Narzędzia</a></li>
                                                            </ul>

                        </div>
                                                    <div class="col-sm-9">

                                <div class="row">
                                    <div class="col-sm-12 col-xs-12">
                                        <span class="dropdown-header dropdown-header-no-list">Popularne produkty</span>
                                    </div>
                                </div>

                                <div class="row">
                                                                            <div class="col-md-2 col-xs-4">
                                            <a href="http://localhost:8000/produkt-lustra-lazienkowe/lustro-lazienkowe-podswietlane-led-80x60cm-73f54d3292c0136242647de5a50201a4.html">
                                                <div class="product tiny">
                                                    <div class="image">
                                                        <img class='img-responsive' src="http://offers.gallery/p-d4-db-d4db2393d96f8f5ac49ebca45f3564d890x90/lustro-azienkowe-podwietlane-led-80x60cm-led4-80x60cm.jpg" />
                                                    </div>
                                                    <span class="price">399,00 PLN</span>
                                                    <h5 class="title">Lustro łazienkowe podświetlane led 80x60cm, LED4 80x60cm</h5>
                                                </div>
                                            </a>
                                        </div>
                                                                            <div class="col-md-2 col-xs-4">
                                            <a href="http://localhost:8000/produkt-drzwi-prysznicowe/drzwi-prysznicowe-przesuwne-liniger-d20-premium.html">
                                                <div class="product tiny">
                                                    <div class="image">
                                                        <img class='img-responsive' src="http://offers.gallery/p-52-ae-52ae3bbfeafacdf5b16db012181b4c2d90x90/drzwi-prysznicowe-przesuwne-liniger-d20-premium.jpg" />
                                                    </div>
                                                    <span class="price">1309,00 PLN</span>
                                                    <h5 class="title">Drzwi Prysznicowe Przesuwne Liniger D20 PREMIUM</h5>
                                                </div>
                                            </a>
                                        </div>
                                                                            <div class="col-md-2 col-xs-4">
                                            <a href="http://localhost:8000/produkt-pily-lancuchowe/imoum-live-lancuchowa-mini-pila-elektryczna.html">
                                                <div class="product tiny">
                                                    <div class="image">
                                                        <img class='img-responsive' src="http://offers.gallery/p-9d-80-9d80cf4079f092f17984b56fb2e1c75e90x90/imoum-live-acuchowa-mini-pia-elektryczna.jpg" />
                                                    </div>
                                                    <span class="price">549,00 PLN</span>
                                                    <h5 class="title">Imoum Live Łańcuchowa mini piła elektryczna</h5>
                                                </div>
                                            </a>
                                        </div>
                                                                            <div class="col-md-2 col-xs-4">
                                            <a href="http://localhost:8000/produkt-pozostale-poza-domem/daszek-zadaszenie-systemowe-drzwi-modern-300x060-a072f751415d59bd5570d3bc2654357b.html">
                                                <div class="product tiny">
                                                    <div class="image">
                                                        <img class='img-responsive' src="http://offers.gallery/p-91-6b-916b644d5ac7d82fdb5fa8e158e61ed590x90/metal-gum-daszek-zadaszenie-systemowe-drzwi-modern-300x060.jpg" />
                                                    </div>
                                                    <span class="price">289,00 PLN</span>
                                                    <h5 class="title">Metal-gum Daszek zadaszenie systemowe drzwi modern 300x060</h5>
                                                </div>
                                            </a>
                                        </div>
                                                                            <div class="col-md-2 col-xs-4">
                                            <a href="http://localhost:8000/produkt-wertykulatory/wertykulator-i-aerator-einhell-gc-sa-1231-2w1.html">
                                                <div class="product tiny">
                                                    <div class="image">
                                                        <img class='img-responsive' src="http://offers.gallery/p-88-26-8826f253afe94dbc610f62214590675090x90/einhell-wertykulator-i-aerator-gc-sa-1231-2w1.jpg" />
                                                    </div>
                                                    <span class="price">551,99 PLN</span>
                                                    <h5 class="title">Einhell Wertykulator i aerator gc-sa 1231 2w1</h5>
                                                </div>
                                            </a>
                                        </div>
                                                                            <div class="col-md-2 col-xs-4">
                                            <a href="http://localhost:8000/produkt-pozostale-poza-domem/daszek-zadaszenie-proste-drzwi-270-x-100-1199bd3bf9f942069a64a446df5b4633.html">
                                                <div class="product tiny">
                                                    <div class="image">
                                                        <img class='img-responsive' src="http://offers.gallery/p-92-c2-92c2c25470a62d2aa6052fd29103b11890x90/daszek-zadaszenie-proste-drzwi-270-x-100.jpg" />
                                                    </div>
                                                    <span class="price">949,00 PLN</span>
                                                    <h5 class="title">Daszek Zadaszenie Proste Drzwi 270 x 100</h5>
                                                </div>
                                            </a>
                                        </div>
                                                                    </div>

                            </div>
                                            </div>
                </li>
            </ul>
        </li>
    </ul>
                <form id="searchFrom" class="navbar-form navbar-right">
                    <div class="input-group input-group-with-btn">
                        <input id="phraseInput" type="text" class="form-control input-lg"
                               value="" placeholder="Szukam...">
                        <span class="input-group-btn">
                  <button id="buttonSearch" class="btn btn-link" type="button"><i class="fa fa-search"></i></button>
                </span>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <div class="container top">

                                    <div class="row">
                    <div class="col-lg-12 col-md-12 col-sm-12">
                        <ul class="breadcrumb">
                            <li><a href="/">Porownywarka.co</a></li>
                                                                                                <li class="active">Kategorie I</li>
                                                                                                                                <li class="active">Muzyka</li>
                                                                                    </ul>
                    </div>
                </div>
                    
            <div class="row category">

    <!-- filters -->
    <div class="col-md-3 col-sm-12 category-filters">
        <div class="panel-group" id="accordion">

                        <div class="panel panel-default category-filter">
                <div class="panel-heading">
                    <h4 class="panel-title">
                        <a data-toggle="collapse" href="#collapseCategory" class="category-filter-title collapsed">
                            Kategorie
                            <i class="filter-open fa fa-angle-down"></i>
                            <i class="filter-close fa fa-angle-up"></i>
                        </a>
                    </h4>
                </div>
                <div id="collapseCategory" class="panel-collapse in" style="height: auto;">
                    <div class="panel-body">
                        <ul>
                                                            <li class="active">
                                                                                                                                                    <a href="http://localhost:8000/">
                                        <span class="badge pull-right">25766</span> Muzyka <i class="fa fa-level-up"></i>
                                    </a>
                                </li>
                                                                                                                        <li class="lower-half"><a href="http://localhost:8000/kategoria-instrumenty-muzyczne/">
                                    <span class="badge pull-right">25025</span> Instrumenty muzyczne</a>
                                </li>
                                                                                                                            <li><a href="http://localhost:8000/kategoria-muzyka-klasyczna/">
                                    <span class="badge pull-right">2</span> Muzyka klasyczna</a>
                                </li>
                                                                                                                            <li><a href="http://localhost:8000/kategoria-muzyka-rozrywkowa/">
                                    <span class="badge pull-right">484</span> Muzyka rozrywkowa</a>
                                </li>
                                                                                                                            <li><a href="http://localhost:8000/kategoria-pozostala-muzyka/">
                                    <span class="badge pull-right">255</span> Pozostała muzyka</a>
                                </li>
                                                                                    </ul>
                    </div>
                </div>
            </div>
            
                <div class="panel panel-default category-filter">
        <div class="panel-heading">
            <h4 class="panel-title">
                <a data-toggle="collapse" href="#collapse-prices" class="category-filter-title collapsed">
                    Cena
                    <i class="filter-open fa fa-angle-down"></i>
                    <i class="filter-close fa fa-angle-up"></i>
                </a>
            </h4>
        </div>
        <div  data-links='keep-view' id="collapse-prices" class="panel-collapse in" style="height: auto;;">
            <div class="panel-body">
                <ul>
                                                                                        <li class="">
                            <a rel="nofollow" href="http://localhost:8000/kategoria-muzyka/cena:0.25~94.57.html">
                                <span class="badge pull-right">9718</span> 0,25 - 94,57 zł
                            </a>
                        </li>
                                                                    <li class="">
                            <a rel="nofollow" href="http://localhost:8000/kategoria-muzyka/cena:95.00~556.00.html">
                                <span class="badge pull-right">8921</span> 95,00 - 556,00 zł
                            </a>
                        </li>
                                                                    <li class="">
                            <a rel="nofollow" href="http://localhost:8000/kategoria-muzyka/cena:557.00~1853.00.html">
                                <span class="badge pull-right">4505</span> 557,00 - 1853,00 zł
                            </a>
                        </li>
                                                                    <li class="">
                            <a rel="nofollow" href="http://localhost:8000/kategoria-muzyka/cena:1854.00~363207.80.html">
                                <span class="badge pull-right">2622</span> 1854,00 - 363207,80 zł
                            </a>
                        </li>
                    
                                            <li class="lower">
                            <form class="form" role="form">
                                <div class="input-group">
                                    <input id="-prices-range-from" value="" type="text" class="form-control input-sm" placeholder="od">
                                    <div class="input-group-addon">-</div>
                                    <input id="-prices-range-to" value="" type="text" class="form-control input-sm" placeholder="do">
                                    <div class="input-group-addon">PLN</div>
                                    <span class="input-group-btn pull-right filter-submit">
                                      <button onclick="filterRanges('http://localhost:8000/kategoria-muzyka/cena:%25s~%25s.html', '-prices-range-from', '-prices-range-to')" class="btn btn-sm btn-link" type="button">zastosuj</button>
                                    </span>
                                </div>
                            </form>
                        </li>
                                    </ul>
            </div>
        </div>
    </div>

                <div class="panel panel-default category-filter">
        <div class="panel-heading">
            <h4 class="panel-title">
                <a data-toggle="collapse" href="#collapse-producers" class="category-filter-title collapsed">
                    Producent
                    <i class="filter-open fa fa-angle-down"></i>
                    <i class="filter-close fa fa-angle-up"></i>
                </a>
            </h4>
        </div>
        <div  data-links='keep-view' id="collapse-producers" class="panel-collapse collapse" style="height: 0;;">
            <div class="panel-body">
                <ul>
                                                                                        <li class="">
                            <a href="http://localhost:8000/kategoria-muzyka/producent:4audio.html">
                                <span class="badge pull-right">128</span> 4Audio 
                            </a>
                        </li>
                                                                    <li class="">
                            <a href="http://localhost:8000/kategoria-muzyka/producent:adam-hall.html">
                                <span class="badge pull-right">1457</span> Adam Hall 
                            </a>
                        </li>
                                                                    <li class="">
                            <a href="http://localhost:8000/kategoria-muzyka/producent:ahead.html">
                                <span class="badge pull-right">45</span> Ahead 
                            </a>
                        </li>
                                                                    <li class="">
                            <a href="http://localhost:8000/kategoria-muzyka/producent:akg.html">
                                <span class="badge pull-right">86</span> AKG 
                            </a>
                        </li>
                                                                    <li class="">
                            <a href="http://localhost:8000/kategoria-muzyka/producent:american-dj.html">
                                <span class="badge pull-right">161</span> American DJ 
                            </a>
                        </li>
                                                                    <li class="">
                            <a href="http://localhost:8000/kategoria-muzyka/producent:amex.html">
                                <span class="badge pull-right">60</span> Amex 
                            </a>
                        </li>
                                                                    <li class="">
                            <a href="http://localhost:8000/kategoria-muzyka/producent:an.html">
                                <span class="badge pull-right">165</span> AN 
                            </a>
                        </li>
                                                                    <li class="">
                            <a href="http://localhost:8000/kategoria-muzyka/producent:aquarian.html">
                                <span class="badge pull-right">46</span> Aquarian 
                            </a>
                        </li>
                                                                    <li class="">
                            <a href="http://localhost:8000/kategoria-muzyka/producent:aquila.html">
                                <span class="badge pull-right">136</span> Aquila 
                            </a>
                        </li>
                                                                    <li class="">
                            <a href="http://localhost:8000/kategoria-muzyka/producent:bach.html">
                                <span class="badge pull-right">110</span> Bach 
                            </a>
                        </li>
                                                                    <li class="">
                            <a href="http://localhost:8000/kategoria-muzyka/producent:bartolini.html">
                                <span class="badge pull-right">82</span> Bartolini 
                            </a>
                        </li>
                                                                    <li class="">
                            <a href="http://localhost:8000/kategoria-muzyka/producent:bigsby.html">
                                <span class="badge pull-right">112</span> Bigsby 
                            </a>
                        </li>
                                                                    <li class="">
                            <a href="http://localhost:8000/kategoria-muzyka/producent:boston.html">
                                <span class="badge pull-right">79</span> Boston 
                            </a>
                        </li>
                                                                    <li class="">
                            <a href="http://localhost:8000/kategoria-muzyka/producent:cameo.html">
                                <span class="badge pull-right">100</span> Cameo 
                            </a>
                        </li>
                                                                    <li class="">
                            <a href="http://localhost:8000/kategoria-muzyka/producent:canto.html">
                                <span class="badge pull-right">157</span> Canto 
                            </a>
                        </li>
                                                                    <li class="">
                            <a href="http://localhost:8000/kategoria-muzyka/producent:dj-techtools.html">
                                <span class="badge pull-right">101</span> DJ TECHTOOLS 
                            </a>
                        </li>
                                                                    <li class="">
                            <a href="http://localhost:8000/kategoria-muzyka/producent:dpa.html">
                                <span class="badge pull-right">642</span> DPA 
                            </a>
                        </li>
                                                                    <li class="">
                            <a href="http://localhost:8000/kategoria-muzyka/producent:drum-workshop.html">
                                <span class="badge pull-right">192</span> Drum Workshop 
                            </a>
                        </li>
                                                                    <li class="">
                            <a href="http://localhost:8000/kategoria-muzyka/producent:dunlop.html">
                                <span class="badge pull-right">354</span> Dunlop 
                            </a>
                        </li>
                                                                    <li class="">
                            <a href="http://localhost:8000/kategoria-muzyka/producent:duratruss.html">
                                <span class="badge pull-right">406</span> DuraTruss 
                            </a>
                        </li>
                                                                    <li class="">
                            <a href="http://localhost:8000/kategoria-muzyka/producent:d-addario.html">
                                <span class="badge pull-right">212</span> D′Addario 
                            </a>
                        </li>
                                                                    <li class="">
                            <a href="http://localhost:8000/kategoria-muzyka/producent:elixir.html">
                                <span class="badge pull-right">45</span> Elixir 
                            </a>
                        </li>
                                                                    <li class="">
                            <a href="http://localhost:8000/kategoria-muzyka/producent:eminence.html">
                                <span class="badge pull-right">45</span> Eminence 
                            </a>
                        </li>
                                                                    <li class="">
                            <a href="http://localhost:8000/kategoria-muzyka/producent:ernie-ball.html">
                                <span class="badge pull-right">295</span> Ernie Ball 
                            </a>
                        </li>
                                                                    <li class="">
                            <a href="http://localhost:8000/kategoria-muzyka/producent:evans.html">
                                <span class="badge pull-right">57</span> Evans 
                            </a>
                        </li>
                                                                    <li class="">
                            <a href="http://localhost:8000/kategoria-muzyka/producent:ewpol.html">
                                <span class="badge pull-right">89</span> Ewpol 
                            </a>
                        </li>
                                                                    <li class="">
                            <a href="http://localhost:8000/kategoria-muzyka/producent:fender.html">
                                <span class="badge pull-right">282</span> Fender 
                            </a>
                        </li>
                                                                    <li class="">
                            <a href="http://localhost:8000/kategoria-muzyka/producent:flash.html">
                                <span class="badge pull-right">63</span> Flash 
                            </a>
                        </li>
                                                                    <li class="">
                            <a href="http://localhost:8000/kategoria-muzyka/producent:floyd-rose.html">
                                <span class="badge pull-right">144</span> Floyd Rose 
                            </a>
                        </li>
                                                                    <li class="">
                            <a href="http://localhost:8000/kategoria-muzyka/producent:framus.html">
                                <span class="badge pull-right">129</span> Framus 
                            </a>
                        </li>
                                                                    <li class="">
                            <a href="http://localhost:8000/kategoria-muzyka/producent:gaucho.html">
                                <span class="badge pull-right">217</span> Gaucho 
                            </a>
                        </li>
                                                                    <li class="">
                            <a href="http://localhost:8000/kategoria-muzyka/producent:gewa.html">
                                <span class="badge pull-right">595</span> Gewa 
                            </a>
                        </li>
                                                                    <li class="">
                            <a href="http://localhost:8000/kategoria-muzyka/producent:ghs.html">
                                <span class="badge pull-right">259</span> GHS 
                            </a>
                        </li>
                                                                    <li class="">
                            <a href="http://localhost:8000/kategoria-muzyka/producent:gibraltar.html">
                                <span class="badge pull-right">238</span> Gibraltar 
                            </a>
                        </li>
                                                                    <li class="">
                            <a href="http://localhost:8000/kategoria-muzyka/producent:graphtech.html">
                                <span class="badge pull-right">517</span> Graphtech 
                            </a>
                        </li>
                                                                    <li class="">
                            <a href="http://localhost:8000/kategoria-muzyka/producent:gravity.html">
                                <span class="badge pull-right">114</span> Gravity 
                            </a>
                        </li>
                                                                    <li class="">
                            <a href="http://localhost:8000/kategoria-muzyka/producent:gretsch.html">
                                <span class="badge pull-right">91</span> Gretsch 
                            </a>
                        </li>
                                                                    <li class="">
                            <a href="http://localhost:8000/kategoria-muzyka/producent:grover.html">
                                <span class="badge pull-right">219</span> Grover 
                            </a>
                        </li>
                                                                    <li class="">
                            <a href="http://localhost:8000/kategoria-muzyka/producent:hannabach.html">
                                <span class="badge pull-right">139</span> Hannabach 
                            </a>
                        </li>
                                                                    <li class="">
                            <a href="http://localhost:8000/kategoria-muzyka/producent:hayman.html">
                                <span class="badge pull-right">59</span> Hayman 
                            </a>
                        </li>
                                                                    <li class="">
                            <a href="http://localhost:8000/kategoria-muzyka/producent:hercules.html">
                                <span class="badge pull-right">62</span> Hercules 
                            </a>
                        </li>
                                                                    <li class="">
                            <a href="http://localhost:8000/kategoria-muzyka/producent:hipshot.html">
                                <span class="badge pull-right">109</span> Hipshot 
                            </a>
                        </li>
                                                                    <li class="">
                            <a href="http://localhost:8000/kategoria-muzyka/producent:hosa.html">
                                <span class="badge pull-right">116</span> Hosa 
                            </a>
                        </li>
                                                                    <li class="">
                            <a href="http://localhost:8000/kategoria-muzyka/producent:ibanez.html">
                                <span class="badge pull-right">309</span> Ibanez 
                            </a>
                        </li>
                                                                    <li class="">
                            <a href="http://localhost:8000/kategoria-muzyka/producent:joyo.html">
                                <span class="badge pull-right">101</span> Joyo 
                            </a>
                        </li>
                                                                    <li class="">
                            <a href="http://localhost:8000/kategoria-muzyka/producent:k-m.html">
                                <span class="badge pull-right">409</span> K&amp;M 
                            </a>
                        </li>
                                                                    <li class="">
                            <a href="http://localhost:8000/kategoria-muzyka/producent:kahler.html">
                                <span class="badge pull-right">58</span> Kahler 
                            </a>
                        </li>
                                                                    <li class="">
                            <a href="http://localhost:8000/kategoria-muzyka/producent:kala.html">
                                <span class="badge pull-right">94</span> Kala 
                            </a>
                        </li>
                                                                    <li class="">
                            <a href="http://localhost:8000/kategoria-muzyka/producent:klotz.html">
                                <span class="badge pull-right">803</span> Klotz 
                            </a>
                        </li>
                                                                    <li class="">
                            <a href="http://localhost:8000/kategoria-muzyka/producent:konig-meyer.html">
                                <span class="badge pull-right">309</span> KONIG MEYER 
                            </a>
                        </li>
                                                                    <li class="">
                            <a href="http://localhost:8000/kategoria-muzyka/producent:larsen.html">
                                <span class="badge pull-right">60</span> Larsen 
                            </a>
                        </li>
                                                                    <li class="">
                            <a href="http://localhost:8000/kategoria-muzyka/producent:latin-percussion.html">
                                <span class="badge pull-right">346</span> Latin Percussion 
                            </a>
                        </li>
                                                                    <li class="">
                            <a href="http://localhost:8000/kategoria-muzyka/producent:ld-systems.html">
                                <span class="badge pull-right">445</span> LD Systems 
                            </a>
                        </li>
                                                                    <li class="">
                            <a href="http://localhost:8000/kategoria-muzyka/producent:lee.html">
                                <span class="badge pull-right">49</span> Lee 
                            </a>
                        </li>
                                                                    <li class="">
                            <a href="http://localhost:8000/kategoria-muzyka/producent:lee-oskar.html">
                                <span class="badge pull-right">54</span> Lee Oskar 
                            </a>
                        </li>
                                                                    <li class="">
                            <a href="http://localhost:8000/kategoria-muzyka/producent:mackie.html">
                                <span class="badge pull-right">54</span> Mackie 
                            </a>
                        </li>
                                                                    <li class="">
                            <a href="http://localhost:8000/kategoria-muzyka/producent:mapex.html">
                                <span class="badge pull-right">65</span> Mapex 
                            </a>
                        </li>
                                                                    <li class="">
                            <a href="http://localhost:8000/kategoria-muzyka/producent:mec.html">
                                <span class="badge pull-right">220</span> MEC 
                            </a>
                        </li>
                                                                    <li class="">
                            <a href="http://localhost:8000/kategoria-muzyka/producent:meinl.html">
                                <span class="badge pull-right">405</span> Meinl 
                            </a>
                        </li>
                                                                    <li class="">
                            <a href="http://localhost:8000/kategoria-muzyka/producent:mooer.html">
                                <span class="badge pull-right">110</span> Mooer 
                            </a>
                        </li>
                                                                    <li class="">
                            <a href="http://localhost:8000/kategoria-muzyka/producent:neutrik.html">
                                <span class="badge pull-right">196</span> Neutrik 
                            </a>
                        </li>
                                                                    <li class="">
                            <a href="http://localhost:8000/kategoria-muzyka/producent:nino.html">
                                <span class="badge pull-right">117</span> Nino 
                            </a>
                        </li>
                                                                    <li class="">
                            <a href="http://localhost:8000/kategoria-muzyka/producent:nordstrand.html">
                                <span class="badge pull-right">184</span> Nordstrand 
                            </a>
                        </li>
                                                                    <li class="">
                            <a href="http://localhost:8000/kategoria-muzyka/producent:optima.html">
                                <span class="badge pull-right">145</span> Optima 
                            </a>
                        </li>
                                                                    <li class="">
                            <a href="http://localhost:8000/kategoria-muzyka/producent:ortega.html">
                                <span class="badge pull-right">199</span> Ortega 
                            </a>
                        </li>
                                                                    <li class="">
                            <a href="http://localhost:8000/kategoria-muzyka/producent:paiste.html">
                                <span class="badge pull-right">178</span> Paiste 
                            </a>
                        </li>
                                                                    <li class="">
                            <a href="http://localhost:8000/kategoria-muzyka/producent:palmer.html">
                                <span class="badge pull-right">47</span> Palmer 
                            </a>
                        </li>
                                                                    <li class="">
                            <a href="http://localhost:8000/kategoria-muzyka/producent:planet-waves.html">
                                <span class="badge pull-right">71</span> Planet Waves 
                            </a>
                        </li>
                                                                    <li class="">
                            <a href="http://localhost:8000/kategoria-muzyka/producent:proel.html">
                                <span class="badge pull-right">64</span> Proel 
                            </a>
                        </li>
                                                                    <li class="">
                            <a href="http://localhost:8000/kategoria-muzyka/producent:pwm.html">
                                <span class="badge pull-right">100</span> PWM 
                            </a>
                        </li>
                                                                    <li class="">
                            <a href="http://localhost:8000/kategoria-muzyka/producent:reloop.html">
                                <span class="badge pull-right">86</span> Reloop 
                            </a>
                        </li>
                                                                    <li class="">
                            <a href="http://localhost:8000/kategoria-muzyka/producent:remo.html">
                                <span class="badge pull-right">482</span> Remo 
                            </a>
                        </li>
                                                                    <li class="">
                            <a href="http://localhost:8000/kategoria-muzyka/producent:rico.html">
                                <span class="badge pull-right">62</span> Rico 
                            </a>
                        </li>
                                                                    <li class="">
                            <a href="http://localhost:8000/kategoria-muzyka/producent:riggatec.html">
                                <span class="badge pull-right">60</span> RIGGATEC 
                            </a>
                        </li>
                                                                    <li class="">
                            <a href="http://localhost:8000/kategoria-muzyka/producent:rockbag.html">
                                <span class="badge pull-right">320</span> Rockbag 
                            </a>
                        </li>
                                                                    <li class="">
                            <a href="http://localhost:8000/kategoria-muzyka/producent:rockbass.html">
                                <span class="badge pull-right">51</span> RockBass 
                            </a>
                        </li>
                                                                    <li class="">
                            <a href="http://localhost:8000/kategoria-muzyka/producent:rockboard.html">
                                <span class="badge pull-right">63</span> Rockboard 
                            </a>
                        </li>
                                                                    <li class="">
                            <a href="http://localhost:8000/kategoria-muzyka/producent:rockcable.html">
                                <span class="badge pull-right">101</span> RockCable 
                            </a>
                        </li>
                                                                    <li class="">
                            <a href="http://localhost:8000/kategoria-muzyka/producent:rockcase.html">
                                <span class="badge pull-right">97</span> Rockcase 
                            </a>
                        </li>
                                                                    <li class="">
                            <a href="http://localhost:8000/kategoria-muzyka/producent:rode.html">
                                <span class="badge pull-right">232</span> Rode 
                            </a>
                        </li>
                                                                    <li class="">
                            <a href="http://localhost:8000/kategoria-muzyka/producent:savarez.html">
                                <span class="badge pull-right">93</span> Savarez 
                            </a>
                        </li>
                                                                    <li class="">
                            <a href="http://localhost:8000/kategoria-muzyka/producent:seymour-duncan.html">
                                <span class="badge pull-right">618</span> Seymour Duncan 
                            </a>
                        </li>
                                                                    <li class="">
                            <a href="http://localhost:8000/kategoria-muzyka/producent:stagg.html">
                                <span class="badge pull-right">187</span> Stagg 
                            </a>
                        </li>
                                                                    <li class="">
                            <a href="http://localhost:8000/kategoria-muzyka/producent:stim.html">
                                <span class="badge pull-right">56</span> Stim 
                            </a>
                        </li>
                                                                    <li class="">
                            <a href="http://localhost:8000/kategoria-muzyka/producent:tama.html">
                                <span class="badge pull-right">95</span> Tama 
                            </a>
                        </li>
                                                                    <li class="">
                            <a href="http://localhost:8000/kategoria-muzyka/producent:thomastik.html">
                                <span class="badge pull-right">226</span> Thomastik 
                            </a>
                        </li>
                                                                    <li class="">
                            <a href="http://localhost:8000/kategoria-muzyka/producent:toca.html">
                                <span class="badge pull-right">123</span> Toca 
                            </a>
                        </li>
                                                                    <li class="">
                            <a href="http://localhost:8000/kategoria-muzyka/producent:tonepros.html">
                                <span class="badge pull-right">125</span> TonePros 
                            </a>
                        </li>
                                                                    <li class="">
                            <a href="http://localhost:8000/kategoria-muzyka/producent:vandoren.html">
                                <span class="badge pull-right">126</span> Vandoren 
                            </a>
                        </li>
                                                                    <li class="">
                            <a href="http://localhost:8000/kategoria-muzyka/producent:vic-firth.html">
                                <span class="badge pull-right">144</span> Vic Firth 
                            </a>
                        </li>
                                                                    <li class="">
                            <a href="http://localhost:8000/kategoria-muzyka/producent:warwick.html">
                                <span class="badge pull-right">464</span> Warwick 
                            </a>
                        </li>
                                                                    <li class="">
                            <a href="http://localhost:8000/kategoria-muzyka/producent:wincent.html">
                                <span class="badge pull-right">48</span> Wincent 
                            </a>
                        </li>
                                                                    <li class="">
                            <a href="http://localhost:8000/kategoria-muzyka/producent:wittner.html">
                                <span class="badge pull-right">63</span> Wittner 
                            </a>
                        </li>
                                                                    <li class="">
                            <a href="http://localhost:8000/kategoria-muzyka/producent:yamaha.html">
                                <span class="badge pull-right">682</span> Yamaha 
                            </a>
                        </li>
                                                                    <li class="">
                            <a href="http://localhost:8000/kategoria-muzyka/producent:zildjian.html">
                                <span class="badge pull-right">51</span> Zildjian 
                            </a>
                        </li>
                    
                                    </ul>
            </div>
        </div>
    </div>

            
                        <div class="panel panel-default category-filter">
                <div class="panel-heading">
                    <h4 class="panel-title">
                        <a data-toggle="collapse" data-parent="#accordion" href="#collapseThree" class="category-filter-title">
                            Opis
                            <i class="filter-open fa fa-angle-down"></i>
                            <i class="filter-close fa fa-angle-up"></i>
                        </a>
                    </h4>
                </div>
                <div id="collapseThree" class="panel-collapse collapse in">
                    <div class="panel-body">
                        Znajdziesz tu wszystko to, czego potrzebujesz do muzykowania. Setki ofert różnorodnych produktów w najlepszy cech. Mamy tu oferty z topowych sklepów oferujących taki asortyment. Akcesoria dla muzyków, instrumenty wszelkiego typu (także elektroniczne), sprzęt nagłośnieniowy oraz wiele innych. Wejdź i sprawdź co mamy dla Ciebie w tym miejscu! Nie przepłacaj!
                    </div>
                </div>
            </div>
                    </div>

    </div>


    <div class="col-md-9 col-sm-12">

    <div class="row category-details">
        <div class="col-xs-11">
            <h1>
                <span class="name"><strong>Muzyka</strong><small>25766 produktów</small></span>
                                            </h1>
        </div>
        <div class="col-xs-1 text-right options">

            <div class="btn-group">
                <a href="#" class="btn btn-link dropdown-toggle" data-toggle="dropdown">
                    <i class="fa fa-bars"></i>
                </a>
                <ul class="dropdown-menu dropdown-menu-right">
                    <li class="dropdown-header">Widok</li>
                    <li id="category-view-list"><a href="#list"><i class="fa fa-th-list"></i> lista</a></li>
                    <li id="category-view-grid" class="active"><a href="#box"><i class="fa fa-th"></i> kafle</a></li>
                    <li class="divider"></li>
                    <li class="dropdown-header">Sortowanie</li>

                    
                                                                        <li class="active"><a rel="nofollow" href="http://localhost:8000/kategoria-muzyka/"><i class="fa                                                     fa-long-arrow-down
                                            "></i> domyślne</a></li>
                                                                                                <li><a rel="nofollow" href="http://localhost:8000/kategoria-muzyka/--najpopularniejsze.html"><i class="fa                                                     fa-sort-amount-desc
                                            "></i> od popularnych</a></li>
                                                                                                <li><a rel="nofollow" href="http://localhost:8000/kategoria-muzyka/--najmniej-popularne.html"><i class="fa                                                     fa-sort-amount-asc
                                            "></i> od mało popularnych</a></li>
                                                                                                <li><a rel="nofollow" href="http://localhost:8000/kategoria-muzyka/--od-a-do-z.html"><i class="fa                                                     fa-sort-alpha-asc
                                            "></i> od a do z</a></li>
                                                                                                <li><a rel="nofollow" href="http://localhost:8000/kategoria-muzyka/--od-z-do-a.html"><i class="fa                                                     fa-sort-alpha-desc
                                            "></i> od z do a</a></li>
                                                                                                <li><a rel="nofollow" href="http://localhost:8000/kategoria-muzyka/--najtansze.html"><i class="fa                                                     fa-sort-numeric-asc
                                            "></i> od najtańszych</a></li>
                                                                                                <li><a rel="nofollow" href="http://localhost:8000/kategoria-muzyka/--najdrozsze.html"><i class="fa                                                     fa-sort-numeric-desc
                                            "></i> od najdroższych</a></li>
                                                            </ul>
            </div>
        </div>
    </div>

    <div class="row category-products">

            <!---- product starts here ---->
        <div class="col-lg-3 col-md-4 col-sm-6 col-xs-12 product-wrapper-grid">
            <div class="product normal">
                <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DWmDmS2PME6q7ueKj5XDO%2524m6OEx4l6%252AoPboJTjFDqT0Bs3V0ArEz9rerWld%252AZCsM1g7mmHgfyfdwiOqZ7CFALD3vrDKdJOvG85HZIXOPLU1Txqo8vzB%25247KfDOOxi9iBon_P.API_1_24_" rel="nofollow">
                    <div class="image">
                        <img class="img-responsive" src="http://offers.gallery/p-e8-33-e833cbe475afe5f389988967305f05d9500x500/dsl1cr-wzmacniacz-gitarowy-combo-marki-marshall.jpg" title="dsl1cr wzmacniacz gitarowy combo marki Marshall" />
                    </div>
                </a>
                <div class="product-details">
                    <div class="row">
                        <div class="col-lg-9 col-sm-8 col-xs-12 title-features">
                            <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DWmDmS2PME6q7ueKj5XDO%2524m6OEx4l6%252AoPboJTjFDqT0Bs3V0ArEz9rerWld%252AZCsM1g7mmHgfyfdwiOqZ7CFALD3vrDKdJOvG85HZIXOPLU1Txqo8vzB%25247KfDOOxi9iBon_P.API_1_24_" rel="nofollow">
                                <h5 class="title">dsl1cr wzmacniacz gitarowy combo marki Marshall</h5>
                            </a>
                            <div class="product-details-popup text-center">
                                                                <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DWmDmS2PME6q7ueKj5XDO%2524m6OEx4l6%252AoPboJTjFDqT0Bs3V0ArEz9rerWld%252AZCsM1g7mmHgfyfdwiOqZ7CFALD3vrDKdJOvG85HZIXOPLU1Txqo8vzB%25247KfDOOxi9iBon_P.API_1_24_" rel="nofollow" data-container="body" data-placement="left" data-toggle="tooltip" >
                                    <i class="fa fa-align-justify"></i>
                                    <div class="tooltip_title_wrapper hidden">
                                        <p>Marshall DSL1 CR wzmacniacz gitarowy Od jasnych, czystych odcieni po mocny, agresywny gain, kombo DSL1 ma możliwości gwarantujące brzmienie dobrane do ciebie. Ma on atrybuty i brzmienie Marshalla,...</p>
                                    </div>
                                </a>
                                                                                                                                                                    <a href="/produkt-wzmacniacze-i-kolumny-gitarowe-basowe/marshall-dsl1cr-wzmacniacz-gitarowy-combo.html"><i class="fa fa-link"></i></a>
                                                            </div>
                            <ul class="features">
                                                            </ul>
                        </div>
                        <div class="col-lg-3 col-sm-4 col-xs-12 price">
                            <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DWmDmS2PME6q7ueKj5XDO%2524m6OEx4l6%252AoPboJTjFDqT0Bs3V0ArEz9rerWld%252AZCsM1g7mmHgfyfdwiOqZ7CFALD3vrDKdJOvG85HZIXOPLU1Txqo8vzB%25247KfDOOxi9iBon_P.API_1_24_" rel="nofollow"><span class="price lead">1 499,00 PLN</span></a>
                            <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DWmDmS2PME6q7ueKj5XDO%2524m6OEx4l6%252AoPboJTjFDqT0Bs3V0ArEz9rerWld%252AZCsM1g7mmHgfyfdwiOqZ7CFALD3vrDKdJOvG85HZIXOPLU1Txqo8vzB%25247KfDOOxi9iBon_P.API_1_24_" rel="nofollow" class="btn btn-success btn-success-outlined btn-icon-right">Przejdź do sklepu <i class="fa fa-angle-right"></i></a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!---- product ends here ---->
            <!---- product starts here ---->
        <div class="col-lg-3 col-md-4 col-sm-6 col-xs-12 product-wrapper-grid">
            <div class="product normal">
                <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253D7eW6YD4QzSK7ZIxD35CCg9b1vogk0VUSkUYWP4ScdrmPRYanRhmWjjESsexa5PP%2524qA0Gb9bbd%252AyzQo4UMvHu%2524jTOVAfngOBMF6YRoJW3jU2xWxqPn1m2UXi7Ws6AD68X_P.API_2_24_" rel="nofollow">
                    <div class="image">
                        <img class="img-responsive" src="http://offers.gallery/p-a9-98-a99860cf3841c7e3785611fad45263c2500x500/rode-ntg-1-mikrofon-kierunkowy-shotgun-do-zastosowa-filmowych.jpg" title="Rode ntg-1 mikrofon kierunkowy (shotgun) do zastosowań filmowych," />
                    </div>
                </a>
                <div class="product-details">
                    <div class="row">
                        <div class="col-lg-9 col-sm-8 col-xs-12 title-features">
                            <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253D7eW6YD4QzSK7ZIxD35CCg9b1vogk0VUSkUYWP4ScdrmPRYanRhmWjjESsexa5PP%2524qA0Gb9bbd%252AyzQo4UMvHu%2524jTOVAfngOBMF6YRoJW3jU2xWxqPn1m2UXi7Ws6AD68X_P.API_2_24_" rel="nofollow">
                                <h5 class="title">Rode ntg-1 mikrofon kierunkowy (shotgun) do zastosowań filmowych,</h5>
                            </a>
                            <div class="product-details-popup text-center">
                                                                <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253D7eW6YD4QzSK7ZIxD35CCg9b1vogk0VUSkUYWP4ScdrmPRYanRhmWjjESsexa5PP%2524qA0Gb9bbd%252AyzQo4UMvHu%2524jTOVAfngOBMF6YRoJW3jU2xWxqPn1m2UXi7Ws6AD68X_P.API_2_24_" rel="nofollow" data-container="body" data-placement="left" data-toggle="tooltip" >
                                    <i class="fa fa-align-justify"></i>
                                    <div class="tooltip_title_wrapper hidden">
                                        <p>Rode NTG-1 mikrofon kierunkowy (shotgun) do zastosowań filmowych, radiowych i TV, w zestawie uchwyt i osłona przeciwwietrzna, zasilanie Phantom 48V</p>
                                    </div>
                                </a>
                                                                                                                                                                    <a href="/produkt-mikrofony/rode-ntg-1-mikrofon-kierunkowy-shotgun-do-zastosowan-filmowych.html"><i class="fa fa-link"></i></a>
                                                            </div>
                            <ul class="features">
                                                            </ul>
                        </div>
                        <div class="col-lg-3 col-sm-4 col-xs-12 price">
                            <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253D7eW6YD4QzSK7ZIxD35CCg9b1vogk0VUSkUYWP4ScdrmPRYanRhmWjjESsexa5PP%2524qA0Gb9bbd%252AyzQo4UMvHu%2524jTOVAfngOBMF6YRoJW3jU2xWxqPn1m2UXi7Ws6AD68X_P.API_2_24_" rel="nofollow"><span class="price lead">910,00 PLN</span></a>
                            <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253D7eW6YD4QzSK7ZIxD35CCg9b1vogk0VUSkUYWP4ScdrmPRYanRhmWjjESsexa5PP%2524qA0Gb9bbd%252AyzQo4UMvHu%2524jTOVAfngOBMF6YRoJW3jU2xWxqPn1m2UXi7Ws6AD68X_P.API_2_24_" rel="nofollow" class="btn btn-success btn-success-outlined btn-icon-right">Przejdź do sklepu <i class="fa fa-angle-right"></i></a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!---- product ends here ---->
            <!---- product starts here ---->
        <div class="col-lg-3 col-md-4 col-sm-6 col-xs-12 product-wrapper-grid">
            <div class="product normal">
                <a href="/produkt-mikrofony/rode-nt-usb-studyjny-mikrofon-pojemnosciowy.html">
                    <div class="image">
                        <img class="img-responsive" src="http://offers.gallery/p-22-0e-220ecb1b6e350b7356093146b8f95cab500x500/rode-nt-usb-studyjny-mikrofon-pojemnociowy-1000002368107.jpg" title="Rode nt-usb studyjny mikrofon pojemnościowy (1000002368107)" />
                    </div>
                </a>
                <div class="product-details">
                    <div class="row">
                        <div class="col-lg-9 col-sm-8 col-xs-12 title-features">
                            <a href="/produkt-mikrofony/rode-nt-usb-studyjny-mikrofon-pojemnosciowy.html">
                                <h5 class="title">Rode nt-usb studyjny mikrofon pojemnościowy (1000002368107)</h5>
                            </a>
                            <div class="product-details-popup text-center">
                                                                <a href="/produkt-mikrofony/rode-nt-usb-studyjny-mikrofon-pojemnosciowy.html" data-container="body" data-placement="left" data-toggle="tooltip" >
                                    <i class="fa fa-align-justify"></i>
                                    <div class="tooltip_title_wrapper hidden">
                                        <p>Rode NT-USB&amp;#43; studyjny mikrofon objętościowy</p>
                                    </div>
                                </a>
                                                                                                                                    <a href="/produkt-mikrofony/rode-nt-usb-studyjny-mikrofon-pojemnosciowy.html" data-container="body" data-placement="left" data-toggle="tooltip">
                                        <i class="fa fa-tag"></i>

                                        <div class="tooltip_title_wrapper hidden">
                                            Na tym produkcie możesz zaoszczędzić aż  19%
                                        </div>
                                    </a>
                                                                                            </div>
                            <ul class="features">
                                                            </ul>
                        </div>
                        <div class="col-lg-3 col-sm-4 col-xs-12 price">
                            <a href="/produkt-mikrofony/rode-nt-usb-studyjny-mikrofon-pojemnosciowy.html"><span class="price lead">od 812,42 PLN</span></a>
                            <a href="/produkt-mikrofony/rode-nt-usb-studyjny-mikrofon-pojemnosciowy.html" class="btn btn-success btn-success-outlined btn-icon-right">Porównaj oferty <i class="fa fa-angle-right"></i></a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!---- product ends here ---->
            <!---- product starts here ---->
        <div class="col-lg-3 col-md-4 col-sm-6 col-xs-12 product-wrapper-grid">
            <div class="product normal">
                <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DGve%252A%252ASUGtuoav1AOGVpUjzTC1miWGi3rV1AaOk9SUj00x6ui63LWAo96z7PC7N%252A3F1I%2524a1HuNllOQFbWzmHjP8DbCYHvxYrP2s3pEzhJbTeUFH6xEiQqAu1PmErK26fW_P.API_4_24_" rel="nofollow">
                    <div class="image">
                        <img class="img-responsive" src="http://offers.gallery/p-6b-3d-6b3d3cf8177956aabea574a986f39215500x500/ld-systems-u506-uk-md-mikrofon-bezprzewodowy-dorczny-dynamiczny.jpg" title="LD Systems U506 UK MD - Mikrofon bezprzewodowy doręczny, dynamiczny" />
                    </div>
                </a>
                <div class="product-details">
                    <div class="row">
                        <div class="col-lg-9 col-sm-8 col-xs-12 title-features">
                            <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DGve%252A%252ASUGtuoav1AOGVpUjzTC1miWGi3rV1AaOk9SUj00x6ui63LWAo96z7PC7N%252A3F1I%2524a1HuNllOQFbWzmHjP8DbCYHvxYrP2s3pEzhJbTeUFH6xEiQqAu1PmErK26fW_P.API_4_24_" rel="nofollow">
                                <h5 class="title">LD Systems U506 UK MD - Mikrofon bezprzewodowy doręczny, dynamiczny</h5>
                            </a>
                            <div class="product-details-popup text-center">
                                                                <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DGve%252A%252ASUGtuoav1AOGVpUjzTC1miWGi3rV1AaOk9SUj00x6ui63LWAo96z7PC7N%252A3F1I%2524a1HuNllOQFbWzmHjP8DbCYHvxYrP2s3pEzhJbTeUFH6xEiQqAu1PmErK26fW_P.API_4_24_" rel="nofollow" data-container="body" data-placement="left" data-toggle="tooltip" >
                                    <i class="fa fa-align-justify"></i>
                                    <div class="tooltip_title_wrapper hidden">
                                        <p>LD Systems U506 UK MD mikrofon dynamiczny</p>
                                    </div>
                                </a>
                                                                                                                                                                    <a href="/produkt-mikrofony/ld-systems-u506-uk-md-mikrofon-bezprzewodowy-doreczny-dynamiczny.html"><i class="fa fa-link"></i></a>
                                                            </div>
                            <ul class="features">
                                                            </ul>
                        </div>
                        <div class="col-lg-3 col-sm-4 col-xs-12 price">
                            <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DGve%252A%252ASUGtuoav1AOGVpUjzTC1miWGi3rV1AaOk9SUj00x6ui63LWAo96z7PC7N%252A3F1I%2524a1HuNllOQFbWzmHjP8DbCYHvxYrP2s3pEzhJbTeUFH6xEiQqAu1PmErK26fW_P.API_4_24_" rel="nofollow"><span class="price lead">954,00 PLN</span></a>
                            <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DGve%252A%252ASUGtuoav1AOGVpUjzTC1miWGi3rV1AaOk9SUj00x6ui63LWAo96z7PC7N%252A3F1I%2524a1HuNllOQFbWzmHjP8DbCYHvxYrP2s3pEzhJbTeUFH6xEiQqAu1PmErK26fW_P.API_4_24_" rel="nofollow" class="btn btn-success btn-success-outlined btn-icon-right">Przejdź do sklepu <i class="fa fa-angle-right"></i></a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!---- product ends here ---->
            <!---- product starts here ---->
        <div class="col-lg-3 col-md-4 col-sm-6 col-xs-12 product-wrapper-grid">
            <div class="product normal">
                <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253Dt7%2524Mmk93a5hIYtw4xLtmpO1Knl6qv%2524TvpNC%252406e2z0ZTKHELf9m9guS3tbkkX6oGF5e7uRnKVX0zWQxOLmI%252AjYMyOpZKTt1elHF63YKEkMRuZf6gZIkFCxPv2aZ8G9Ww_P.API_5_24_" rel="nofollow">
                    <div class="image">
                        <img class="img-responsive" src="http://offers.gallery/p-76-dd-76dd236a708ba91deffa00fa455845fd500x500/free-hb2-mikrofon-bezprzewodowy-podwjny-dorczny-43-nagowny-marki-novox.jpg" title="free hb2 mikrofon bezprzewodowy podwójny, doręczny &#43; nagłowny marki Novox" />
                    </div>
                </a>
                <div class="product-details">
                    <div class="row">
                        <div class="col-lg-9 col-sm-8 col-xs-12 title-features">
                            <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253Dt7%2524Mmk93a5hIYtw4xLtmpO1Knl6qv%2524TvpNC%252406e2z0ZTKHELf9m9guS3tbkkX6oGF5e7uRnKVX0zWQxOLmI%252AjYMyOpZKTt1elHF63YKEkMRuZf6gZIkFCxPv2aZ8G9Ww_P.API_5_24_" rel="nofollow">
                                <h5 class="title">free hb2 mikrofon bezprzewodowy podwójny, doręczny &#43; nagłowny marki Novox</h5>
                            </a>
                            <div class="product-details-popup text-center">
                                                                <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253Dt7%2524Mmk93a5hIYtw4xLtmpO1Knl6qv%2524TvpNC%252406e2z0ZTKHELf9m9guS3tbkkX6oGF5e7uRnKVX0zWQxOLmI%252AjYMyOpZKTt1elHF63YKEkMRuZf6gZIkFCxPv2aZ8G9Ww_P.API_5_24_" rel="nofollow" data-container="body" data-placement="left" data-toggle="tooltip" >
                                    <i class="fa fa-align-justify"></i>
                                    <div class="tooltip_title_wrapper hidden">
                                        <p>Novox Free HB2 komplet bezprzewodowy z mikrofonami do ręki i nagłownym Bezprzewodowe systemy mikrofonowe kolekcji Free są połączeniem najlepszego stosunku jakości do ceny, rewelacyjnego brzmienia,...</p>
                                    </div>
                                </a>
                                                                                                                                                                    <a href="/produkt-mikrofony/novox-free-hb2-mikrofon-bezprzewodowy-podwojny-doreczny-naglowny.html"><i class="fa fa-link"></i></a>
                                                            </div>
                            <ul class="features">
                                                            </ul>
                        </div>
                        <div class="col-lg-3 col-sm-4 col-xs-12 price">
                            <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253Dt7%2524Mmk93a5hIYtw4xLtmpO1Knl6qv%2524TvpNC%252406e2z0ZTKHELf9m9guS3tbkkX6oGF5e7uRnKVX0zWQxOLmI%252AjYMyOpZKTt1elHF63YKEkMRuZf6gZIkFCxPv2aZ8G9Ww_P.API_5_24_" rel="nofollow"><span class="price lead">399,00 PLN</span></a>
                            <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253Dt7%2524Mmk93a5hIYtw4xLtmpO1Knl6qv%2524TvpNC%252406e2z0ZTKHELf9m9guS3tbkkX6oGF5e7uRnKVX0zWQxOLmI%252AjYMyOpZKTt1elHF63YKEkMRuZf6gZIkFCxPv2aZ8G9Ww_P.API_5_24_" rel="nofollow" class="btn btn-success btn-success-outlined btn-icon-right">Przejdź do sklepu <i class="fa fa-angle-right"></i></a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!---- product ends here ---->
            <!---- product starts here ---->
        <div class="col-lg-3 col-md-4 col-sm-6 col-xs-12 product-wrapper-grid">
            <div class="product normal">
                <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DogV%252481%252AO353JScrtH9FQipnMNN%252AXJ30R1FRt%2524KvCRSMKNp%2524RvgTNzoFyA764b%2524if279NbNyhHMKudvOvg4znEoXJ7xUZLzGcCKp9pA7PA6vQk539aYXxdz%252ALXcQUdWRr_P.API_6_24_" rel="nofollow">
                    <div class="image">
                        <img class="img-responsive" src="http://offers.gallery/p-7e-40-7e4097548e822ac3cb2ecaf2d44b0044500x500/mxl-440-mikrofon-pojemnociowy-mxl440.jpg" title="MXL 440 - mikrofon pojemnościowy, MXL440" />
                    </div>
                </a>
                <div class="product-details">
                    <div class="row">
                        <div class="col-lg-9 col-sm-8 col-xs-12 title-features">
                            <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DogV%252481%252AO353JScrtH9FQipnMNN%252AXJ30R1FRt%2524KvCRSMKNp%2524RvgTNzoFyA764b%2524if279NbNyhHMKudvOvg4znEoXJ7xUZLzGcCKp9pA7PA6vQk539aYXxdz%252ALXcQUdWRr_P.API_6_24_" rel="nofollow">
                                <h5 class="title">MXL 440 - mikrofon pojemnościowy, MXL440</h5>
                            </a>
                            <div class="product-details-popup text-center">
                                                                <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DogV%252481%252AO353JScrtH9FQipnMNN%252AXJ30R1FRt%2524KvCRSMKNp%2524RvgTNzoFyA764b%2524if279NbNyhHMKudvOvg4znEoXJ7xUZLzGcCKp9pA7PA6vQk539aYXxdz%252ALXcQUdWRr_P.API_6_24_" rel="nofollow" data-container="body" data-placement="left" data-toggle="tooltip" >
                                    <i class="fa fa-align-justify"></i>
                                    <div class="tooltip_title_wrapper hidden">
                                        <p>Mikrofon pojemnościowy marki MXL. MXL440 to mikrofon wielkomembranowy. Jego brzmienie jest standardowe dla tego typu konstrukcji, zezwalając na obfite użycie – od wokalu po instrumenty. Dzięki...</p>
                                    </div>
                                </a>
                                                                                                                                                                    <a href="/produkt-mikrofony/mxl-440-mikrofon-pojemnosciowy.html"><i class="fa fa-link"></i></a>
                                                            </div>
                            <ul class="features">
                                                            </ul>
                        </div>
                        <div class="col-lg-3 col-sm-4 col-xs-12 price">
                            <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DogV%252481%252AO353JScrtH9FQipnMNN%252AXJ30R1FRt%2524KvCRSMKNp%2524RvgTNzoFyA764b%2524if279NbNyhHMKudvOvg4znEoXJ7xUZLzGcCKp9pA7PA6vQk539aYXxdz%252ALXcQUdWRr_P.API_6_24_" rel="nofollow"><span class="price lead">389,00 PLN</span></a>
                            <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DogV%252481%252AO353JScrtH9FQipnMNN%252AXJ30R1FRt%2524KvCRSMKNp%2524RvgTNzoFyA764b%2524if279NbNyhHMKudvOvg4znEoXJ7xUZLzGcCKp9pA7PA6vQk539aYXxdz%252ALXcQUdWRr_P.API_6_24_" rel="nofollow" class="btn btn-success btn-success-outlined btn-icon-right">Przejdź do sklepu <i class="fa fa-angle-right"></i></a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!---- product ends here ---->
            <!---- product starts here ---->
        <div class="col-lg-3 col-md-4 col-sm-6 col-xs-12 product-wrapper-grid">
            <div class="product normal">
                <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DTXRYaLxUc0MkWtF7Q41%2524a%252ATGc7ufGfOLPcPq%2524zmwuTSQ4AhY3wqAEdHujI5ViToiJ1obcQcyqXpg2Om6lVJOLgOKmnEoQ0jKcaSLZ7EeDhG06qFf3mK1OAuuZwGk4fdc_P.API_7_24_" rel="nofollow">
                    <div class="image">
                        <img class="img-responsive" src="http://offers.gallery/p-d8-31-d8316efe28346df9c34bdd260d331e47500x500/ik-multimedia-irig-mic-lav-mikrofon-krawatowy-do-iphone-ipad-ipod-8025813630031.jpg" title="IK Multimedia iRig Mic Lav mikrofon krawatowy do iPhone, iPad, iPod (8025813630031)" />
                    </div>
                </a>
                <div class="product-details">
                    <div class="row">
                        <div class="col-lg-9 col-sm-8 col-xs-12 title-features">
                            <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DTXRYaLxUc0MkWtF7Q41%2524a%252ATGc7ufGfOLPcPq%2524zmwuTSQ4AhY3wqAEdHujI5ViToiJ1obcQcyqXpg2Om6lVJOLgOKmnEoQ0jKcaSLZ7EeDhG06qFf3mK1OAuuZwGk4fdc_P.API_7_24_" rel="nofollow">
                                <h5 class="title">IK Multimedia iRig Mic Lav mikrofon krawatowy do iPhone, iPad, iPod (8025813630031)</h5>
                            </a>
                            <div class="product-details-popup text-center">
                                                                <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DTXRYaLxUc0MkWtF7Q41%2524a%252ATGc7ufGfOLPcPq%2524zmwuTSQ4AhY3wqAEdHujI5ViToiJ1obcQcyqXpg2Om6lVJOLgOKmnEoQ0jKcaSLZ7EeDhG06qFf3mK1OAuuZwGk4fdc_P.API_7_24_" rel="nofollow" data-container="body" data-placement="left" data-toggle="tooltip" >
                                    <i class="fa fa-align-justify"></i>
                                    <div class="tooltip_title_wrapper hidden">
                                        <p>IK Multimedia iRig Mic Lav mikrofon krawatowy do iPhone, iPad, iPod touch i sprzętów Android</p>
                                    </div>
                                </a>
                                                                                                                                                                    <a href="/produkt-akcesoria-studyjne/ik-multimedia-irig-mic-lav-mikrofon-krawatowy-do-iphone-ipad-ipod.html"><i class="fa fa-link"></i></a>
                                                            </div>
                            <ul class="features">
                                                            </ul>
                        </div>
                        <div class="col-lg-3 col-sm-4 col-xs-12 price">
                            <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DTXRYaLxUc0MkWtF7Q41%2524a%252ATGc7ufGfOLPcPq%2524zmwuTSQ4AhY3wqAEdHujI5ViToiJ1obcQcyqXpg2Om6lVJOLgOKmnEoQ0jKcaSLZ7EeDhG06qFf3mK1OAuuZwGk4fdc_P.API_7_24_" rel="nofollow"><span class="price lead">250,00 PLN</span></a>
                            <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DTXRYaLxUc0MkWtF7Q41%2524a%252ATGc7ufGfOLPcPq%2524zmwuTSQ4AhY3wqAEdHujI5ViToiJ1obcQcyqXpg2Om6lVJOLgOKmnEoQ0jKcaSLZ7EeDhG06qFf3mK1OAuuZwGk4fdc_P.API_7_24_" rel="nofollow" class="btn btn-success btn-success-outlined btn-icon-right">Przejdź do sklepu <i class="fa fa-angle-right"></i></a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!---- product ends here ---->
            <!---- product starts here ---->
        <div class="col-lg-3 col-md-4 col-sm-6 col-xs-12 product-wrapper-grid">
            <div class="product normal">
                <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DD7wjbdIlRFFi08xMXnhwPOYUmCoafljBDYeXvF9rchAZch4dSnT4HHqwn3jZoTiXEnrtOSwiKBNrItzq%2524JQnpU9nrTd545hOzRL%2524hjukDMGqZf0VUm7GLgMgW2vT1opf_P.API_8_24_" rel="nofollow">
                    <div class="image">
                        <img class="img-responsive" src="http://offers.gallery/p-0b-ba-0bba6bba551344115c8c69fc173263ce500x500/stagg-ba-20-wzmacniacz-basowy.jpg" title="Stagg BA-20 wzmacniacz basowy" />
                    </div>
                </a>
                <div class="product-details">
                    <div class="row">
                        <div class="col-lg-9 col-sm-8 col-xs-12 title-features">
                            <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DD7wjbdIlRFFi08xMXnhwPOYUmCoafljBDYeXvF9rchAZch4dSnT4HHqwn3jZoTiXEnrtOSwiKBNrItzq%2524JQnpU9nrTd545hOzRL%2524hjukDMGqZf0VUm7GLgMgW2vT1opf_P.API_8_24_" rel="nofollow">
                                <h5 class="title">Stagg BA-20 wzmacniacz basowy</h5>
                            </a>
                            <div class="product-details-popup text-center">
                                                                <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DD7wjbdIlRFFi08xMXnhwPOYUmCoafljBDYeXvF9rchAZch4dSnT4HHqwn3jZoTiXEnrtOSwiKBNrItzq%2524JQnpU9nrTd545hOzRL%2524hjukDMGqZf0VUm7GLgMgW2vT1opf_P.API_8_24_" rel="nofollow" data-container="body" data-placement="left" data-toggle="tooltip" >
                                    <i class="fa fa-align-justify"></i>
                                    <div class="tooltip_title_wrapper hidden">
                                        <p>Combo do gitary basowej Stagg 20-BA...</p>
                                    </div>
                                </a>
                                                                                                                                                                    <a href="/produkt-wzmacniacze-i-kolumny-gitarowe-basowe/stagg-ba-20-wzmacniacz-basowy.html"><i class="fa fa-link"></i></a>
                                                            </div>
                            <ul class="features">
                                                            </ul>
                        </div>
                        <div class="col-lg-3 col-sm-4 col-xs-12 price">
                            <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DD7wjbdIlRFFi08xMXnhwPOYUmCoafljBDYeXvF9rchAZch4dSnT4HHqwn3jZoTiXEnrtOSwiKBNrItzq%2524JQnpU9nrTd545hOzRL%2524hjukDMGqZf0VUm7GLgMgW2vT1opf_P.API_8_24_" rel="nofollow"><span class="price lead">449,00 PLN</span></a>
                            <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DD7wjbdIlRFFi08xMXnhwPOYUmCoafljBDYeXvF9rchAZch4dSnT4HHqwn3jZoTiXEnrtOSwiKBNrItzq%2524JQnpU9nrTd545hOzRL%2524hjukDMGqZf0VUm7GLgMgW2vT1opf_P.API_8_24_" rel="nofollow" class="btn btn-success btn-success-outlined btn-icon-right">Przejdź do sklepu <i class="fa fa-angle-right"></i></a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!---- product ends here ---->
            <!---- product starts here ---->
        <div class="col-lg-3 col-md-4 col-sm-6 col-xs-12 product-wrapper-grid">
            <div class="product normal">
                <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DsnrUYRGvZ%25242ubnrVdxbblB75mqiCpqf8cbutFJEljsO41nnxZO0ju9T67wAROzUwnaHma0I75C%252400pn%25244BaUJWT68R4bz6d5iOyw4xezJebidOLmh5J2e0uwsxAhmjZV_P.API_9_24_" rel="nofollow">
                    <div class="image">
                        <img class="img-responsive" src="http://offers.gallery/p-57-0f-570f8328f8e28ca23fc08f9bc43bac5f500x500/boya-by-pvm3000l-mikrofon-kierunkowy-typu-shotgun.jpg" title="Boya by-pvm3000l mikrofon kierunkowy typu shotgun" />
                    </div>
                </a>
                <div class="product-details">
                    <div class="row">
                        <div class="col-lg-9 col-sm-8 col-xs-12 title-features">
                            <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DsnrUYRGvZ%25242ubnrVdxbblB75mqiCpqf8cbutFJEljsO41nnxZO0ju9T67wAROzUwnaHma0I75C%252400pn%25244BaUJWT68R4bz6d5iOyw4xezJebidOLmh5J2e0uwsxAhmjZV_P.API_9_24_" rel="nofollow">
                                <h5 class="title">Boya by-pvm3000l mikrofon kierunkowy typu shotgun</h5>
                            </a>
                            <div class="product-details-popup text-center">
                                                                <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DsnrUYRGvZ%25242ubnrVdxbblB75mqiCpqf8cbutFJEljsO41nnxZO0ju9T67wAROzUwnaHma0I75C%252400pn%25244BaUJWT68R4bz6d5iOyw4xezJebidOLmh5J2e0uwsxAhmjZV_P.API_9_24_" rel="nofollow" data-container="body" data-placement="left" data-toggle="tooltip" >
                                    <i class="fa fa-align-justify"></i>
                                    <div class="tooltip_title_wrapper hidden">
                                        <p>BOYA BY-PVM3000L mikrofon kierunkowy rodzaju Shotgun</p>
                                    </div>
                                </a>
                                                                                                                                                                    <a href="/produkt-akcesoria-studyjne/boya-by-pvm3000l-mikrofon-kierunkowy-typu-shotgun.html"><i class="fa fa-link"></i></a>
                                                            </div>
                            <ul class="features">
                                                            </ul>
                        </div>
                        <div class="col-lg-3 col-sm-4 col-xs-12 price">
                            <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DsnrUYRGvZ%25242ubnrVdxbblB75mqiCpqf8cbutFJEljsO41nnxZO0ju9T67wAROzUwnaHma0I75C%252400pn%25244BaUJWT68R4bz6d5iOyw4xezJebidOLmh5J2e0uwsxAhmjZV_P.API_9_24_" rel="nofollow"><span class="price lead">669,00 PLN</span></a>
                            <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DsnrUYRGvZ%25242ubnrVdxbblB75mqiCpqf8cbutFJEljsO41nnxZO0ju9T67wAROzUwnaHma0I75C%252400pn%25244BaUJWT68R4bz6d5iOyw4xezJebidOLmh5J2e0uwsxAhmjZV_P.API_9_24_" rel="nofollow" class="btn btn-success btn-success-outlined btn-icon-right">Przejdź do sklepu <i class="fa fa-angle-right"></i></a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!---- product ends here ---->
            <!---- product starts here ---->
        <div class="col-lg-3 col-md-4 col-sm-6 col-xs-12 product-wrapper-grid">
            <div class="product normal">
                <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DjL6Av5nzVSI9rxkNULQdl2Zts1XzsPO7kJP23trL3EtRUo2cdtb173p9OsJ9%252AyVwuVQBmBeSEf2BCerUlDiLq4Ez5IglWt0ZZIrGbvtqIPxrRUTJYqdONAmx6XfmxgNr_P.API_10_24_" rel="nofollow">
                    <div class="image">
                        <img class="img-responsive" src="http://offers.gallery/p-f0-0e-f00ec0b02f675efb3cdf763676ad4d07500x500/mikrofon-genesis-radium-400-studyjny-usb-marki-natec.jpg" title="mikrofon genesis radium 400 studyjny usb marki Natec" />
                    </div>
                </a>
                <div class="product-details">
                    <div class="row">
                        <div class="col-lg-9 col-sm-8 col-xs-12 title-features">
                            <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DjL6Av5nzVSI9rxkNULQdl2Zts1XzsPO7kJP23trL3EtRUo2cdtb173p9OsJ9%252AyVwuVQBmBeSEf2BCerUlDiLq4Ez5IglWt0ZZIrGbvtqIPxrRUTJYqdONAmx6XfmxgNr_P.API_10_24_" rel="nofollow">
                                <h5 class="title">mikrofon genesis radium 400 studyjny usb marki Natec</h5>
                            </a>
                            <div class="product-details-popup text-center">
                                                                <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DjL6Av5nzVSI9rxkNULQdl2Zts1XzsPO7kJP23trL3EtRUo2cdtb173p9OsJ9%252AyVwuVQBmBeSEf2BCerUlDiLq4Ez5IglWt0ZZIrGbvtqIPxrRUTJYqdONAmx6XfmxgNr_P.API_10_24_" rel="nofollow" data-container="body" data-placement="left" data-toggle="tooltip" >
                                    <i class="fa fa-align-justify"></i>
                                    <div class="tooltip_title_wrapper hidden">
                                        <p>WSZYSTKO CZEGO POTRZEBA DO GRY I STREAMINGU Myślisz o tym jak rozwinąć swój kanał na YouTube albo ulepszyć jakość swoich transmisji on-line? Nic prostszego. Genesis Radium 400 to wysokiej jakości...</p>
                                    </div>
                                </a>
                                                                                                                                                                    <a href="/produkt-mikrofony/natec-mikrofon-genesis-radium-400-studyjny-usb.html"><i class="fa fa-link"></i></a>
                                                            </div>
                            <ul class="features">
                                                            </ul>
                        </div>
                        <div class="col-lg-3 col-sm-4 col-xs-12 price">
                            <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DjL6Av5nzVSI9rxkNULQdl2Zts1XzsPO7kJP23trL3EtRUo2cdtb173p9OsJ9%252AyVwuVQBmBeSEf2BCerUlDiLq4Ez5IglWt0ZZIrGbvtqIPxrRUTJYqdONAmx6XfmxgNr_P.API_10_24_" rel="nofollow"><span class="price lead">229,00 PLN</span></a>
                            <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DjL6Av5nzVSI9rxkNULQdl2Zts1XzsPO7kJP23trL3EtRUo2cdtb173p9OsJ9%252AyVwuVQBmBeSEf2BCerUlDiLq4Ez5IglWt0ZZIrGbvtqIPxrRUTJYqdONAmx6XfmxgNr_P.API_10_24_" rel="nofollow" class="btn btn-success btn-success-outlined btn-icon-right">Przejdź do sklepu <i class="fa fa-angle-right"></i></a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!---- product ends here ---->
            <!---- product starts here ---->
        <div class="col-lg-3 col-md-4 col-sm-6 col-xs-12 product-wrapper-grid">
            <div class="product normal">
                <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DkMT6jv7oMka9sauBKmL5AgSkmrHJRNLfxqMdIX7PcK8oF%2524ksmUILZ%252Ahi7TTHXU69zI1d9AUHzNy0yC29PE0jk97PoWZYas8sz7NixM4whJYam0UlWi0m6DZWTlFXoYG%2524_P.API_11_24_" rel="nofollow">
                    <div class="image">
                        <img class="img-responsive" src="http://offers.gallery/p-d8-e1-d8e1389340e7666e0288685f04d13a06500x500/af75-bs-brown-sunburst-gitara-elektryczna-marki-ibanez.jpg" title="af75-bs brown sunburst - gitara elektryczna marki Ibanez" />
                    </div>
                </a>
                <div class="product-details">
                    <div class="row">
                        <div class="col-lg-9 col-sm-8 col-xs-12 title-features">
                            <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DkMT6jv7oMka9sauBKmL5AgSkmrHJRNLfxqMdIX7PcK8oF%2524ksmUILZ%252Ahi7TTHXU69zI1d9AUHzNy0yC29PE0jk97PoWZYas8sz7NixM4whJYam0UlWi0m6DZWTlFXoYG%2524_P.API_11_24_" rel="nofollow">
                                <h5 class="title">af75-bs brown sunburst - gitara elektryczna marki Ibanez</h5>
                            </a>
                            <div class="product-details-popup text-center">
                                                                <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DkMT6jv7oMka9sauBKmL5AgSkmrHJRNLfxqMdIX7PcK8oF%2524ksmUILZ%252Ahi7TTHXU69zI1d9AUHzNy0yC29PE0jk97PoWZYas8sz7NixM4whJYam0UlWi0m6DZWTlFXoYG%2524_P.API_11_24_" rel="nofollow" data-container="body" data-placement="left" data-toggle="tooltip" >
                                    <i class="fa fa-align-justify"></i>
                                    <div class="tooltip_title_wrapper hidden">
                                        <p>Gitary Ibanez z kolekcji ArtStar zbudowane dla mistrzów jazzu, którzy potrzebują wielkiej sprężystości. Gitary z tej kolekcji zaprojektowano, by łagodnie móc przejść od bluesa poprzez jazz do...</p>
                                    </div>
                                </a>
                                                                                                                                                                    <a href="/produkt-gitary-elektryczne/ibanez-af75-bs-brown-sunburst-gitara-elektryczna.html"><i class="fa fa-link"></i></a>
                                                            </div>
                            <ul class="features">
                                                            </ul>
                        </div>
                        <div class="col-lg-3 col-sm-4 col-xs-12 price">
                            <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DkMT6jv7oMka9sauBKmL5AgSkmrHJRNLfxqMdIX7PcK8oF%2524ksmUILZ%252Ahi7TTHXU69zI1d9AUHzNy0yC29PE0jk97PoWZYas8sz7NixM4whJYam0UlWi0m6DZWTlFXoYG%2524_P.API_11_24_" rel="nofollow"><span class="price lead">2 219,00 PLN</span></a>
                            <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DkMT6jv7oMka9sauBKmL5AgSkmrHJRNLfxqMdIX7PcK8oF%2524ksmUILZ%252Ahi7TTHXU69zI1d9AUHzNy0yC29PE0jk97PoWZYas8sz7NixM4whJYam0UlWi0m6DZWTlFXoYG%2524_P.API_11_24_" rel="nofollow" class="btn btn-success btn-success-outlined btn-icon-right">Przejdź do sklepu <i class="fa fa-angle-right"></i></a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!---- product ends here ---->
            <!---- product starts here ---->
        <div class="col-lg-3 col-md-4 col-sm-6 col-xs-12 product-wrapper-grid">
            <div class="product normal">
                <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DWb%2524aE%252AxNxn4obfmZmRV4DS6rTeOE%252ACu5CwBfHF33O01ye1ECE8dDjXxySwh8q5sLSmjOPnm30%2524K650zDI7YRfQm%252AU1SJD2FC0z6rkNbK%2524PTE%2524ILUGVx1DEp0YCHxXHlA_P.API_12_24_" rel="nofollow">
                    <div class="image">
                        <img class="img-responsive" src="http://offers.gallery/p-6c-eb-6ceba26bec8db3190a9a85a656556d12500x500/ibanez-xptb620-bkf-gitara-elektryczna-z-pokrowcem-4549763287458.jpg" title="Ibanez XPTB620-BKF – gitara elektryczna z pokrowcem (4549763287458)" />
                    </div>
                </a>
                <div class="product-details">
                    <div class="row">
                        <div class="col-lg-9 col-sm-8 col-xs-12 title-features">
                            <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DWb%2524aE%252AxNxn4obfmZmRV4DS6rTeOE%252ACu5CwBfHF33O01ye1ECE8dDjXxySwh8q5sLSmjOPnm30%2524K650zDI7YRfQm%252AU1SJD2FC0z6rkNbK%2524PTE%2524ILUGVx1DEp0YCHxXHlA_P.API_12_24_" rel="nofollow">
                                <h5 class="title">Ibanez XPTB620-BKF – gitara elektryczna z pokrowcem (4549763287458)</h5>
                            </a>
                            <div class="product-details-popup text-center">
                                                                <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DWb%2524aE%252AxNxn4obfmZmRV4DS6rTeOE%252ACu5CwBfHF33O01ye1ECE8dDjXxySwh8q5sLSmjOPnm30%2524K650zDI7YRfQm%252AU1SJD2FC0z6rkNbK%2524PTE%2524ILUGVx1DEp0YCHxXHlA_P.API_12_24_" rel="nofollow" data-container="body" data-placement="left" data-toggle="tooltip" >
                                    <i class="fa fa-align-justify"></i>
                                    <div class="tooltip_title_wrapper hidden">
                                        <p>Ibanez XPTB620-BKF – gitara elektrycznaSpecyfikacja:Gitara elektrycznalinia: X IronLabelKorpus: OkoumeGryf: 5-częściowy klon/orzech rodzaju „Neck-through&amp;#34;, profil „Wizard III&amp;#34;, wykończenie...</p>
                                    </div>
                                </a>
                                                                                                                                                                    <a href="/produkt-gitary-elektryczne/ibanez-xptb620-bkf-gitara-elektryczna-z-pokrowcem.html"><i class="fa fa-link"></i></a>
                                                            </div>
                            <ul class="features">
                                                            </ul>
                        </div>
                        <div class="col-lg-3 col-sm-4 col-xs-12 price">
                            <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DWb%2524aE%252AxNxn4obfmZmRV4DS6rTeOE%252ACu5CwBfHF33O01ye1ECE8dDjXxySwh8q5sLSmjOPnm30%2524K650zDI7YRfQm%252AU1SJD2FC0z6rkNbK%2524PTE%2524ILUGVx1DEp0YCHxXHlA_P.API_12_24_" rel="nofollow"><span class="price lead">5 695,00 PLN</span></a>
                            <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DWb%2524aE%252AxNxn4obfmZmRV4DS6rTeOE%252ACu5CwBfHF33O01ye1ECE8dDjXxySwh8q5sLSmjOPnm30%2524K650zDI7YRfQm%252AU1SJD2FC0z6rkNbK%2524PTE%2524ILUGVx1DEp0YCHxXHlA_P.API_12_24_" rel="nofollow" class="btn btn-success btn-success-outlined btn-icon-right">Przejdź do sklepu <i class="fa fa-angle-right"></i></a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!---- product ends here ---->
            <!---- product starts here ---->
        <div class="col-lg-3 col-md-4 col-sm-6 col-xs-12 product-wrapper-grid">
            <div class="product normal">
                <a href="/produkt-mikrofony/tracer-premium-pro-usb.html">
                    <div class="image">
                        <img class="img-responsive" src="http://offers.gallery/p-c4-92-c492c001aa2d8109a07e2fe42fbeb7d5500x500/tracer-premium-pro-usb-tramic46788.jpg" title="Tracer Premium Pro USB, TRAMIC46788" />
                    </div>
                </a>
                <div class="product-details">
                    <div class="row">
                        <div class="col-lg-9 col-sm-8 col-xs-12 title-features">
                            <a href="/produkt-mikrofony/tracer-premium-pro-usb.html">
                                <h5 class="title">Tracer Premium Pro USB, TRAMIC46788</h5>
                            </a>
                            <div class="product-details-popup text-center">
                                                                <a href="/produkt-mikrofony/tracer-premium-pro-usb.html" data-container="body" data-placement="left" data-toggle="tooltip" >
                                    <i class="fa fa-align-justify"></i>
                                    <div class="tooltip_title_wrapper hidden">
                                        <p>W dobie internetowego streamingu, zyskujących na znaczeniu videokonferencji i wielogodzinnych turniejów gier komputerowych, poprawnie dostosowany mikrofon stanowi niezbędny wygodnej komunikacji....</p>
                                    </div>
                                </a>
                                                                                                                                                            </div>
                            <ul class="features">
                                                            </ul>
                        </div>
                        <div class="col-lg-3 col-sm-4 col-xs-12 price">
                            <a href="/produkt-mikrofony/tracer-premium-pro-usb.html"><span class="price lead">od 139,99 PLN</span></a>
                            <a href="/produkt-mikrofony/tracer-premium-pro-usb.html" class="btn btn-success btn-success-outlined btn-icon-right">Porównaj oferty <i class="fa fa-angle-right"></i></a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!---- product ends here ---->
            <!---- product starts here ---->
        <div class="col-lg-3 col-md-4 col-sm-6 col-xs-12 product-wrapper-grid">
            <div class="product normal">
                <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DfYuHlMT1w7BLEmBaxh0huWtktoau8P7zI4ijmje0hUupbU8wTDwQO8Lsw5lwylJwdrFXZd13zyZjuCDwL6y1yXQhKTRWPmKs7vY3F%252ASp2f4Cjvheoy0HjVwApvQe6HlS_P.API_14_24_" rel="nofollow">
                    <div class="image">
                        <img class="img-responsive" src="http://offers.gallery/p-2e-c5-2ec528dfc33a84f00df2f60ac5ea6a53500x500/prodipe-headset-b210-duo-dsp-uhf-mikrofon-bezprzewodowy-nagowny.jpg" title="Prodipe Headset B210 Duo DSP UHF mikrofon bezprzewodowy nagłowny" />
                    </div>
                </a>
                <div class="product-details">
                    <div class="row">
                        <div class="col-lg-9 col-sm-8 col-xs-12 title-features">
                            <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DfYuHlMT1w7BLEmBaxh0huWtktoau8P7zI4ijmje0hUupbU8wTDwQO8Lsw5lwylJwdrFXZd13zyZjuCDwL6y1yXQhKTRWPmKs7vY3F%252ASp2f4Cjvheoy0HjVwApvQe6HlS_P.API_14_24_" rel="nofollow">
                                <h5 class="title">Prodipe Headset B210 Duo DSP UHF mikrofon bezprzewodowy nagłowny</h5>
                            </a>
                            <div class="product-details-popup text-center">
                                                                <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DfYuHlMT1w7BLEmBaxh0huWtktoau8P7zI4ijmje0hUupbU8wTDwQO8Lsw5lwylJwdrFXZd13zyZjuCDwL6y1yXQhKTRWPmKs7vY3F%252ASp2f4Cjvheoy0HjVwApvQe6HlS_P.API_14_24_" rel="nofollow" data-container="body" data-placement="left" data-toggle="tooltip" >
                                    <i class="fa fa-align-justify"></i>
                                    <div class="tooltip_title_wrapper hidden">
                                        <p>Prodipe HEADSET B210DUO DSP UHF - komplet bezprzewodowyMikrofonowy pakiet bezprzewodowy składający się z dwóch headsetów z nadajnikami i bazy. Główne cechy:wariant transmisji informacji: UHFPasmo:...</p>
                                    </div>
                                </a>
                                                                                                                                                                    <a href="/produkt-mikrofony/prodipe-headset-b210-duo-dsp-uhf-mikrofon-bezprzewodowy-naglowny.html"><i class="fa fa-link"></i></a>
                                                            </div>
                            <ul class="features">
                                                            </ul>
                        </div>
                        <div class="col-lg-3 col-sm-4 col-xs-12 price">
                            <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DfYuHlMT1w7BLEmBaxh0huWtktoau8P7zI4ijmje0hUupbU8wTDwQO8Lsw5lwylJwdrFXZd13zyZjuCDwL6y1yXQhKTRWPmKs7vY3F%252ASp2f4Cjvheoy0HjVwApvQe6HlS_P.API_14_24_" rel="nofollow"><span class="price lead">930,00 PLN</span></a>
                            <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DfYuHlMT1w7BLEmBaxh0huWtktoau8P7zI4ijmje0hUupbU8wTDwQO8Lsw5lwylJwdrFXZd13zyZjuCDwL6y1yXQhKTRWPmKs7vY3F%252ASp2f4Cjvheoy0HjVwApvQe6HlS_P.API_14_24_" rel="nofollow" class="btn btn-success btn-success-outlined btn-icon-right">Przejdź do sklepu <i class="fa fa-angle-right"></i></a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!---- product ends here ---->
            <!---- product starts here ---->
        <div class="col-lg-3 col-md-4 col-sm-6 col-xs-12 product-wrapper-grid">
            <div class="product normal">
                <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DnOTIgYx06Zp2QTmZ4uFvoWTvohoSZKIoMPpaTDrKuLIXZjktIL0NeuAbggWLSCq%252Akkikaerud3sDpf3Ovcyow41qA3aJt0VYbd4p2jfHmGRRDS5L3LZNLsh7Su9LNmjJ_P.API_15_24_" rel="nofollow">
                    <div class="image">
                        <img class="img-responsive" src="http://offers.gallery/p-e3-c8-e3c8560fd24bb64f640565e33ad5dd06500x500/k712-pro-suchawki-otwarte-marki-akg.jpg" title="k712 pro słuchawki otwarte marki Akg" />
                    </div>
                </a>
                <div class="product-details">
                    <div class="row">
                        <div class="col-lg-9 col-sm-8 col-xs-12 title-features">
                            <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DnOTIgYx06Zp2QTmZ4uFvoWTvohoSZKIoMPpaTDrKuLIXZjktIL0NeuAbggWLSCq%252Akkikaerud3sDpf3Ovcyow41qA3aJt0VYbd4p2jfHmGRRDS5L3LZNLsh7Su9LNmjJ_P.API_15_24_" rel="nofollow">
                                <h5 class="title">k712 pro słuchawki otwarte marki Akg</h5>
                            </a>
                            <div class="product-details-popup text-center">
                                                                <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DnOTIgYx06Zp2QTmZ4uFvoWTvohoSZKIoMPpaTDrKuLIXZjktIL0NeuAbggWLSCq%252Akkikaerud3sDpf3Ovcyow41qA3aJt0VYbd4p2jfHmGRRDS5L3LZNLsh7Su9LNmjJ_P.API_15_24_" rel="nofollow" data-container="body" data-placement="left" data-toggle="tooltip" >
                                    <i class="fa fa-align-justify"></i>
                                    <div class="tooltip_title_wrapper hidden">
                                        <p>AKG K712 PRO słuchawki otwarte</p>
                                    </div>
                                </a>
                                                                                                                                                                    <a href="/produkt-pozostale-akcesoria-dla-muzykow/akg-k712-pro-sluchawki-otwarte.html"><i class="fa fa-link"></i></a>
                                                            </div>
                            <ul class="features">
                                                            </ul>
                        </div>
                        <div class="col-lg-3 col-sm-4 col-xs-12 price">
                            <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DnOTIgYx06Zp2QTmZ4uFvoWTvohoSZKIoMPpaTDrKuLIXZjktIL0NeuAbggWLSCq%252Akkikaerud3sDpf3Ovcyow41qA3aJt0VYbd4p2jfHmGRRDS5L3LZNLsh7Su9LNmjJ_P.API_15_24_" rel="nofollow"><span class="price lead">1 289,00 PLN</span></a>
                            <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DnOTIgYx06Zp2QTmZ4uFvoWTvohoSZKIoMPpaTDrKuLIXZjktIL0NeuAbggWLSCq%252Akkikaerud3sDpf3Ovcyow41qA3aJt0VYbd4p2jfHmGRRDS5L3LZNLsh7Su9LNmjJ_P.API_15_24_" rel="nofollow" class="btn btn-success btn-success-outlined btn-icon-right">Przejdź do sklepu <i class="fa fa-angle-right"></i></a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!---- product ends here ---->
            <!---- product starts here ---->
        <div class="col-lg-3 col-md-4 col-sm-6 col-xs-12 product-wrapper-grid">
            <div class="product normal">
                <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253D%25245JbspQz%2524tkbPx%2524s9A7AVYc%252A%252Ag3qjq%2524q7zkBA9Uu5rysCl%252ATBRQ3WPOBprNbSxVx%252Ah3XdNTWbzWwpKME3dNq27MS56uaIsCByAe1rHwlSJtOf9lqXGOL7yp6%2524YRr1xj5_P.API_16_24_" rel="nofollow">
                    <div class="image">
                        <img class="img-responsive" src="http://offers.gallery/p-2c-df-2cdfad74b4bfa1cb155bfa3846dbd96a500x500/ld-systems-u508-bpl-2-zestaw-bezprzewodowy-4049521279423.jpg" title="LD SYSTEMS U508 BPL 2 - zestaw bezprzewodowy (4049521279423)" />
                    </div>
                </a>
                <div class="product-details">
                    <div class="row">
                        <div class="col-lg-9 col-sm-8 col-xs-12 title-features">
                            <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253D%25245JbspQz%2524tkbPx%2524s9A7AVYc%252A%252Ag3qjq%2524q7zkBA9Uu5rysCl%252ATBRQ3WPOBprNbSxVx%252Ah3XdNTWbzWwpKME3dNq27MS56uaIsCByAe1rHwlSJtOf9lqXGOL7yp6%2524YRr1xj5_P.API_16_24_" rel="nofollow">
                                <h5 class="title">LD SYSTEMS U508 BPL 2 - zestaw bezprzewodowy (4049521279423)</h5>
                            </a>
                            <div class="product-details-popup text-center">
                                                                <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253D%25245JbspQz%2524tkbPx%2524s9A7AVYc%252A%252Ag3qjq%2524q7zkBA9Uu5rysCl%252ATBRQ3WPOBprNbSxVx%252Ah3XdNTWbzWwpKME3dNq27MS56uaIsCByAe1rHwlSJtOf9lqXGOL7yp6%2524YRr1xj5_P.API_16_24_" rel="nofollow" data-container="body" data-placement="left" data-toggle="tooltip" >
                                    <i class="fa fa-align-justify"></i>
                                    <div class="tooltip_title_wrapper hidden">
                                        <p>LD Systems U508 BPL 2 Bezprzewodowy system mikrofonowy z 2 x nadajnikiem Bodypack i 2 x mikrofonem przypinanym serię U500® zaprojektowano z myślą o potrzebach wszystkich użytkowników. Mistrzowski...</p>
                                    </div>
                                </a>
                                                                                                                                                                    <a href="/produkt-pozostaly-sprzet-naglosnieniowy-i-studyjny/ld-systems-u508-bpl-2-zestaw-bezprzewodowy.html"><i class="fa fa-link"></i></a>
                                                            </div>
                            <ul class="features">
                                                            </ul>
                        </div>
                        <div class="col-lg-3 col-sm-4 col-xs-12 price">
                            <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253D%25245JbspQz%2524tkbPx%2524s9A7AVYc%252A%252Ag3qjq%2524q7zkBA9Uu5rysCl%252ATBRQ3WPOBprNbSxVx%252Ah3XdNTWbzWwpKME3dNq27MS56uaIsCByAe1rHwlSJtOf9lqXGOL7yp6%2524YRr1xj5_P.API_16_24_" rel="nofollow"><span class="price lead">3 972,00 PLN</span></a>
                            <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253D%25245JbspQz%2524tkbPx%2524s9A7AVYc%252A%252Ag3qjq%2524q7zkBA9Uu5rysCl%252ATBRQ3WPOBprNbSxVx%252Ah3XdNTWbzWwpKME3dNq27MS56uaIsCByAe1rHwlSJtOf9lqXGOL7yp6%2524YRr1xj5_P.API_16_24_" rel="nofollow" class="btn btn-success btn-success-outlined btn-icon-right">Przejdź do sklepu <i class="fa fa-angle-right"></i></a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!---- product ends here ---->
            <!---- product starts here ---->
        <div class="col-lg-3 col-md-4 col-sm-6 col-xs-12 product-wrapper-grid">
            <div class="product normal">
                <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DQGnGsArJC6I76CgWKnPvst6qH%25241B0kNprpbSXwDm45a1ymtDr3O1bqw0KOSWXZ2zkSOkgOC2JAYAvO%2524ghCWpiR54yncZP90C6EuC7Sh09TXN4BecUX0NA%252AIou8jYmcU1_P.API_17_24_" rel="nofollow">
                    <div class="image">
                        <img class="img-responsive" src="http://offers.gallery/p-d0-37-d037c76dcfd3b52835caf56fec386185500x500/jbl-srx835p-kolumna-aktywna-trjdrona.jpg" title="Jbl srx835p kolumna aktywna, trójdrożna" />
                    </div>
                </a>
                <div class="product-details">
                    <div class="row">
                        <div class="col-lg-9 col-sm-8 col-xs-12 title-features">
                            <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DQGnGsArJC6I76CgWKnPvst6qH%25241B0kNprpbSXwDm45a1ymtDr3O1bqw0KOSWXZ2zkSOkgOC2JAYAvO%2524ghCWpiR54yncZP90C6EuC7Sh09TXN4BecUX0NA%252AIou8jYmcU1_P.API_17_24_" rel="nofollow">
                                <h5 class="title">Jbl srx835p kolumna aktywna, trójdrożna</h5>
                            </a>
                            <div class="product-details-popup text-center">
                                                                <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DQGnGsArJC6I76CgWKnPvst6qH%25241B0kNprpbSXwDm45a1ymtDr3O1bqw0KOSWXZ2zkSOkgOC2JAYAvO%2524ghCWpiR54yncZP90C6EuC7Sh09TXN4BecUX0NA%252AIou8jYmcU1_P.API_17_24_" rel="nofollow" data-container="body" data-placement="left" data-toggle="tooltip" >
                                    <i class="fa fa-align-justify"></i>
                                    <div class="tooltip_title_wrapper hidden">
                                        <p>JBL SRX835P kolumna aktywna, trójdrożna</p>
                                    </div>
                                </a>
                                                                                                                                                                    <a href="/produkt-glosniki-i-monitory-odsluchowe/jbl-srx835p-kolumna-aktywna-trojdrozna.html"><i class="fa fa-link"></i></a>
                                                            </div>
                            <ul class="features">
                                                            </ul>
                        </div>
                        <div class="col-lg-3 col-sm-4 col-xs-12 price">
                            <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DQGnGsArJC6I76CgWKnPvst6qH%25241B0kNprpbSXwDm45a1ymtDr3O1bqw0KOSWXZ2zkSOkgOC2JAYAvO%2524ghCWpiR54yncZP90C6EuC7Sh09TXN4BecUX0NA%252AIou8jYmcU1_P.API_17_24_" rel="nofollow"><span class="price lead">9 490,00 PLN</span></a>
                            <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DQGnGsArJC6I76CgWKnPvst6qH%25241B0kNprpbSXwDm45a1ymtDr3O1bqw0KOSWXZ2zkSOkgOC2JAYAvO%2524ghCWpiR54yncZP90C6EuC7Sh09TXN4BecUX0NA%252AIou8jYmcU1_P.API_17_24_" rel="nofollow" class="btn btn-success btn-success-outlined btn-icon-right">Przejdź do sklepu <i class="fa fa-angle-right"></i></a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!---- product ends here ---->
            <!---- product starts here ---->
        <div class="col-lg-3 col-md-4 col-sm-6 col-xs-12 product-wrapper-grid">
            <div class="product normal">
                <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DlcXtjBCNC2ZLqccXwnVt4rWjlFYq4gYGGddsQtWk2Bs8IMnIYrD4oSJZ%2524KverteqRchBUPy6CZfk8f3h3F%25247Cge93s2juP0MYxcMWZsum6XUYBfE2wtVVkBprj%252ALi7nB_P.API_18_24_" rel="nofollow">
                    <div class="image">
                        <img class="img-responsive" src="http://offers.gallery/p-2c-af-2caf00a989161d7df13603c765a25ca6500x500/vic-firth-5a-paki-perkusyjne-0750795000203.jpg" title="VIC FIRTH 5A - Pałki perkusyjne (0750795000203)" />
                    </div>
                </a>
                <div class="product-details">
                    <div class="row">
                        <div class="col-lg-9 col-sm-8 col-xs-12 title-features">
                            <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DlcXtjBCNC2ZLqccXwnVt4rWjlFYq4gYGGddsQtWk2Bs8IMnIYrD4oSJZ%2524KverteqRchBUPy6CZfk8f3h3F%25247Cge93s2juP0MYxcMWZsum6XUYBfE2wtVVkBprj%252ALi7nB_P.API_18_24_" rel="nofollow">
                                <h5 class="title">VIC FIRTH 5A - Pałki perkusyjne (0750795000203)</h5>
                            </a>
                            <div class="product-details-popup text-center">
                                                                <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DlcXtjBCNC2ZLqccXwnVt4rWjlFYq4gYGGddsQtWk2Bs8IMnIYrD4oSJZ%2524KverteqRchBUPy6CZfk8f3h3F%25247Cge93s2juP0MYxcMWZsum6XUYBfE2wtVVkBprj%252ALi7nB_P.API_18_24_" rel="nofollow" data-container="body" data-placement="left" data-toggle="tooltip" >
                                    <i class="fa fa-align-justify"></i>
                                    <div class="tooltip_title_wrapper hidden">
                                        <p>American Classic to najszczególniej modna seria pałek Vic Firtha. Znajdziemy w niej gamę prawie 20 podstawowych modeli - od najcieńszych HD4 po grube Metal - przeróżnych także pod względem kształtu...</p>
                                    </div>
                                </a>
                                                                                                                                                                    <a href="/produkt-palki-perkusyjne/vic-firth-5a-palki-perkusyjne.html"><i class="fa fa-link"></i></a>
                                                            </div>
                            <ul class="features">
                                                            </ul>
                        </div>
                        <div class="col-lg-3 col-sm-4 col-xs-12 price">
                            <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DlcXtjBCNC2ZLqccXwnVt4rWjlFYq4gYGGddsQtWk2Bs8IMnIYrD4oSJZ%2524KverteqRchBUPy6CZfk8f3h3F%25247Cge93s2juP0MYxcMWZsum6XUYBfE2wtVVkBprj%252ALi7nB_P.API_18_24_" rel="nofollow"><span class="price lead">59,00 PLN</span></a>
                            <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DlcXtjBCNC2ZLqccXwnVt4rWjlFYq4gYGGddsQtWk2Bs8IMnIYrD4oSJZ%2524KverteqRchBUPy6CZfk8f3h3F%25247Cge93s2juP0MYxcMWZsum6XUYBfE2wtVVkBprj%252ALi7nB_P.API_18_24_" rel="nofollow" class="btn btn-success btn-success-outlined btn-icon-right">Przejdź do sklepu <i class="fa fa-angle-right"></i></a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!---- product ends here ---->
            <!---- product starts here ---->
        <div class="col-lg-3 col-md-4 col-sm-6 col-xs-12 product-wrapper-grid">
            <div class="product normal">
                <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253Dp2h597tH3agx%252AvTpqj6WNUFhpJiLljU4FByhPy8ZcCFmZQFW0Mza8fBfk%2524QDwXfu%252Alg6He8D4FsOB9tQcu8jci99DGygLvUO0HigLqnUDIm%252AgeBJ5nfKNY1X0AS6mvB8_P.API_19_24_" rel="nofollow">
                    <div class="image">
                        <img class="img-responsive" src="http://offers.gallery/p-56-fb-56fb4b47596eaacb3d90712f4eefe435500x500/blackstar-id-core-20-stereo-v3-combo-gitarowe.jpg" title="Blackstar id core 20 stereo v3 combo gitarowe" />
                    </div>
                </a>
                <div class="product-details">
                    <div class="row">
                        <div class="col-lg-9 col-sm-8 col-xs-12 title-features">
                            <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253Dp2h597tH3agx%252AvTpqj6WNUFhpJiLljU4FByhPy8ZcCFmZQFW0Mza8fBfk%2524QDwXfu%252Alg6He8D4FsOB9tQcu8jci99DGygLvUO0HigLqnUDIm%252AgeBJ5nfKNY1X0AS6mvB8_P.API_19_24_" rel="nofollow">
                                <h5 class="title">Blackstar id core 20 stereo v3 combo gitarowe</h5>
                            </a>
                            <div class="product-details-popup text-center">
                                                                <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253Dp2h597tH3agx%252AvTpqj6WNUFhpJiLljU4FByhPy8ZcCFmZQFW0Mza8fBfk%2524QDwXfu%252Alg6He8D4FsOB9tQcu8jci99DGygLvUO0HigLqnUDIm%252AgeBJ5nfKNY1X0AS6mvB8_P.API_19_24_" rel="nofollow" data-container="body" data-placement="left" data-toggle="tooltip" >
                                    <i class="fa fa-align-justify"></i>
                                    <div class="tooltip_title_wrapper hidden">
                                        <p>Blackstar ID Core 20 Stereo V3 combo gitarowe</p>
                                    </div>
                                </a>
                                                                                                                                                                    <a href="/produkt-wzmacniacze-i-kolumny-gitarowe-basowe/blackstar-id-core-20-stereo-v3-combo-gitarowe.html"><i class="fa fa-link"></i></a>
                                                            </div>
                            <ul class="features">
                                                            </ul>
                        </div>
                        <div class="col-lg-3 col-sm-4 col-xs-12 price">
                            <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253Dp2h597tH3agx%252AvTpqj6WNUFhpJiLljU4FByhPy8ZcCFmZQFW0Mza8fBfk%2524QDwXfu%252Alg6He8D4FsOB9tQcu8jci99DGygLvUO0HigLqnUDIm%252AgeBJ5nfKNY1X0AS6mvB8_P.API_19_24_" rel="nofollow"><span class="price lead">849,00 PLN</span></a>
                            <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253Dp2h597tH3agx%252AvTpqj6WNUFhpJiLljU4FByhPy8ZcCFmZQFW0Mza8fBfk%2524QDwXfu%252Alg6He8D4FsOB9tQcu8jci99DGygLvUO0HigLqnUDIm%252AgeBJ5nfKNY1X0AS6mvB8_P.API_19_24_" rel="nofollow" class="btn btn-success btn-success-outlined btn-icon-right">Przejdź do sklepu <i class="fa fa-angle-right"></i></a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!---- product ends here ---->
            <!---- product starts here ---->
        <div class="col-lg-3 col-md-4 col-sm-6 col-xs-12 product-wrapper-grid">
            <div class="product normal">
                <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DBaLFZh2g178QB0RtSuvVQxe3PUBgqv1aa9urMHRird4AmhRJihysBvFMyB0avDHPPKVpFBq4Zys0FICD6Rws0NJgfTKzpsswbQ%2524xx%252APi0JEFaa5QY0D8IyiReD8Sa%252A%2524o_P.API_20_24_" rel="nofollow">
                    <div class="image">
                        <img class="img-responsive" src="http://offers.gallery/p-ee-b4-eeb4610c9ce1ea35e8c671ccba3dc08b500x500/sontronics-solo-mikrofon-dynamiczny.jpg" title="Sontronics solo mikrofon dynamiczny" />
                    </div>
                </a>
                <div class="product-details">
                    <div class="row">
                        <div class="col-lg-9 col-sm-8 col-xs-12 title-features">
                            <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DBaLFZh2g178QB0RtSuvVQxe3PUBgqv1aa9urMHRird4AmhRJihysBvFMyB0avDHPPKVpFBq4Zys0FICD6Rws0NJgfTKzpsswbQ%2524xx%252APi0JEFaa5QY0D8IyiReD8Sa%252A%2524o_P.API_20_24_" rel="nofollow">
                                <h5 class="title">Sontronics solo mikrofon dynamiczny</h5>
                            </a>
                            <div class="product-details-popup text-center">
                                                                <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DBaLFZh2g178QB0RtSuvVQxe3PUBgqv1aa9urMHRird4AmhRJihysBvFMyB0avDHPPKVpFBq4Zys0FICD6Rws0NJgfTKzpsswbQ%2524xx%252APi0JEFaa5QY0D8IyiReD8Sa%252A%2524o_P.API_20_24_" rel="nofollow" data-container="body" data-placement="left" data-toggle="tooltip" >
                                    <i class="fa fa-align-justify"></i>
                                    <div class="tooltip_title_wrapper hidden">
                                        <p>Sontronics Solo – mikrofon dynamicznySolo to mikrofon dynamiczny, który został zaprojektowany i produkowany w obszernej Brytanii z wykorzystaniem wysokiej jakości materiałów. Niezwykle wąską...</p>
                                    </div>
                                </a>
                                                                                                                                                                    <a href="/produkt-mikrofony/sontronics-solo-mikrofon-dynamiczny.html"><i class="fa fa-link"></i></a>
                                                            </div>
                            <ul class="features">
                                                            </ul>
                        </div>
                        <div class="col-lg-3 col-sm-4 col-xs-12 price">
                            <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DBaLFZh2g178QB0RtSuvVQxe3PUBgqv1aa9urMHRird4AmhRJihysBvFMyB0avDHPPKVpFBq4Zys0FICD6Rws0NJgfTKzpsswbQ%2524xx%252APi0JEFaa5QY0D8IyiReD8Sa%252A%2524o_P.API_20_24_" rel="nofollow"><span class="price lead">519,00 PLN</span></a>
                            <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DBaLFZh2g178QB0RtSuvVQxe3PUBgqv1aa9urMHRird4AmhRJihysBvFMyB0avDHPPKVpFBq4Zys0FICD6Rws0NJgfTKzpsswbQ%2524xx%252APi0JEFaa5QY0D8IyiReD8Sa%252A%2524o_P.API_20_24_" rel="nofollow" class="btn btn-success btn-success-outlined btn-icon-right">Przejdź do sklepu <i class="fa fa-angle-right"></i></a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!---- product ends here ---->
            <!---- product starts here ---->
        <div class="col-lg-3 col-md-4 col-sm-6 col-xs-12 product-wrapper-grid">
            <div class="product normal">
                <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DNYM5XMlaKo9vZRVElVrFPBgwTXi4opILzXmrBFjy%2524WIhkZY9iwm06Wkgz9HhBs0sxmMuDmONeJXK8LzVoGshYTt7ZYo6PVa%252A8XpDAFWAJz69BjL0%252AF7TT9qRKumfo3Ee_P.API_21_24_" rel="nofollow">
                    <div class="image">
                        <img class="img-responsive" src="http://offers.gallery/p-52-f6-52f6b2d345ad7d7b62291c42c8a12ece500x500/mackie-em-95-ml-mikrofon-krawatowy-do-smartfonw-i-kamer-1000002371367.jpg" title="Mackie em 95 ml mikrofon krawatowy do smartfonów i kamer (1000002371367)" />
                    </div>
                </a>
                <div class="product-details">
                    <div class="row">
                        <div class="col-lg-9 col-sm-8 col-xs-12 title-features">
                            <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DNYM5XMlaKo9vZRVElVrFPBgwTXi4opILzXmrBFjy%2524WIhkZY9iwm06Wkgz9HhBs0sxmMuDmONeJXK8LzVoGshYTt7ZYo6PVa%252A8XpDAFWAJz69BjL0%252AF7TT9qRKumfo3Ee_P.API_21_24_" rel="nofollow">
                                <h5 class="title">Mackie em 95 ml mikrofon krawatowy do smartfonów i kamer (1000002371367)</h5>
                            </a>
                            <div class="product-details-popup text-center">
                                                                <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DNYM5XMlaKo9vZRVElVrFPBgwTXi4opILzXmrBFjy%2524WIhkZY9iwm06Wkgz9HhBs0sxmMuDmONeJXK8LzVoGshYTt7ZYo6PVa%252A8XpDAFWAJz69BjL0%252AF7TT9qRKumfo3Ee_P.API_21_24_" rel="nofollow" data-container="body" data-placement="left" data-toggle="tooltip" >
                                    <i class="fa fa-align-justify"></i>
                                    <div class="tooltip_title_wrapper hidden">
                                        <p>Mackie EM 95 ML mikrofon krawatowy do smartfonów i kamer</p>
                                    </div>
                                </a>
                                                                                                                                                                    <a href="/produkt-akcesoria-studyjne/mackie-em-95-ml-mikrofon-krawatowy-do-smartfonow-i-kamer.html"><i class="fa fa-link"></i></a>
                                                            </div>
                            <ul class="features">
                                                            </ul>
                        </div>
                        <div class="col-lg-3 col-sm-4 col-xs-12 price">
                            <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DNYM5XMlaKo9vZRVElVrFPBgwTXi4opILzXmrBFjy%2524WIhkZY9iwm06Wkgz9HhBs0sxmMuDmONeJXK8LzVoGshYTt7ZYo6PVa%252A8XpDAFWAJz69BjL0%252AF7TT9qRKumfo3Ee_P.API_21_24_" rel="nofollow"><span class="price lead">390,00 PLN</span></a>
                            <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DNYM5XMlaKo9vZRVElVrFPBgwTXi4opILzXmrBFjy%2524WIhkZY9iwm06Wkgz9HhBs0sxmMuDmONeJXK8LzVoGshYTt7ZYo6PVa%252A8XpDAFWAJz69BjL0%252AF7TT9qRKumfo3Ee_P.API_21_24_" rel="nofollow" class="btn btn-success btn-success-outlined btn-icon-right">Przejdź do sklepu <i class="fa fa-angle-right"></i></a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!---- product ends here ---->
            <!---- product starts here ---->
        <div class="col-lg-3 col-md-4 col-sm-6 col-xs-12 product-wrapper-grid">
            <div class="product normal">
                <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253Dp0Cd4yDKa9iJTJth6%252ADIF6wgD3fKdaaXt1fVK%252A6rIyk1lVXapCHjK%2524%2524ex4BERS4XiuDAVeIzr2Z8uMAy4HDWpM0QsKEzWFpK5FIa%2524vj%252AsEPr1ZpbY6%25245k0AyquhyhVYa_P.API_22_24_" rel="nofollow">
                    <div class="image">
                        <img class="img-responsive" src="http://offers.gallery/p-f0-0e-f00e6de43cccefa904809b3439970341500x500/blackstar-fly-3-mini-amp-combo-gitarowe.jpg" title="Blackstar fly 3 mini amp combo gitarowe" />
                    </div>
                </a>
                <div class="product-details">
                    <div class="row">
                        <div class="col-lg-9 col-sm-8 col-xs-12 title-features">
                            <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253Dp0Cd4yDKa9iJTJth6%252ADIF6wgD3fKdaaXt1fVK%252A6rIyk1lVXapCHjK%2524%2524ex4BERS4XiuDAVeIzr2Z8uMAy4HDWpM0QsKEzWFpK5FIa%2524vj%252AsEPr1ZpbY6%25245k0AyquhyhVYa_P.API_22_24_" rel="nofollow">
                                <h5 class="title">Blackstar fly 3 mini amp combo gitarowe</h5>
                            </a>
                            <div class="product-details-popup text-center">
                                                                <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253Dp0Cd4yDKa9iJTJth6%252ADIF6wgD3fKdaaXt1fVK%252A6rIyk1lVXapCHjK%2524%2524ex4BERS4XiuDAVeIzr2Z8uMAy4HDWpM0QsKEzWFpK5FIa%2524vj%252AsEPr1ZpbY6%25245k0AyquhyhVYa_P.API_22_24_" rel="nofollow" data-container="body" data-placement="left" data-toggle="tooltip" >
                                    <i class="fa fa-align-justify"></i>
                                    <div class="tooltip_title_wrapper hidden">
                                        <p>Blackstar FLY 3 Mini Amp combo gitarowe</p>
                                    </div>
                                </a>
                                                                                                                                                                    <a href="/produkt-wzmacniacze-i-kolumny-gitarowe-basowe/blackstar-fly-3-mini-amp-combo-gitarowe.html"><i class="fa fa-link"></i></a>
                                                            </div>
                            <ul class="features">
                                                            </ul>
                        </div>
                        <div class="col-lg-3 col-sm-4 col-xs-12 price">
                            <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253Dp0Cd4yDKa9iJTJth6%252ADIF6wgD3fKdaaXt1fVK%252A6rIyk1lVXapCHjK%2524%2524ex4BERS4XiuDAVeIzr2Z8uMAy4HDWpM0QsKEzWFpK5FIa%2524vj%252AsEPr1ZpbY6%25245k0AyquhyhVYa_P.API_22_24_" rel="nofollow"><span class="price lead">345,00 PLN</span></a>
                            <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253Dp0Cd4yDKa9iJTJth6%252ADIF6wgD3fKdaaXt1fVK%252A6rIyk1lVXapCHjK%2524%2524ex4BERS4XiuDAVeIzr2Z8uMAy4HDWpM0QsKEzWFpK5FIa%2524vj%252AsEPr1ZpbY6%25245k0AyquhyhVYa_P.API_22_24_" rel="nofollow" class="btn btn-success btn-success-outlined btn-icon-right">Przejdź do sklepu <i class="fa fa-angle-right"></i></a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!---- product ends here ---->
            <!---- product starts here ---->
        <div class="col-lg-3 col-md-4 col-sm-6 col-xs-12 product-wrapper-grid">
            <div class="product normal">
                <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DGtxAs2LJe4JhRnLgnGXDSbIFSjF9ecvyOYA4J9zG3DG1eFGbZ4H45UW3is6zrnnzMj6nfStP3QFh49aHfdYUOA3gqB8KxrlKfFGe36tgpzk22fO2UHeq16QpCCuyucqz_P.API_23_24_" rel="nofollow">
                    <div class="image">
                        <img class="img-responsive" src="http://offers.gallery/p-0f-b6-0fb6344b298ce43f733f54263ea2791c500x500/aer-compact-60-iv-wzmacniacz-do-instrumentw-akustycznych.jpg" title="AER Compact 60 IV wzmacniacz do instrumentów akustycznych" />
                    </div>
                </a>
                <div class="product-details">
                    <div class="row">
                        <div class="col-lg-9 col-sm-8 col-xs-12 title-features">
                            <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DGtxAs2LJe4JhRnLgnGXDSbIFSjF9ecvyOYA4J9zG3DG1eFGbZ4H45UW3is6zrnnzMj6nfStP3QFh49aHfdYUOA3gqB8KxrlKfFGe36tgpzk22fO2UHeq16QpCCuyucqz_P.API_23_24_" rel="nofollow">
                                <h5 class="title">AER Compact 60 IV wzmacniacz do instrumentów akustycznych</h5>
                            </a>
                            <div class="product-details-popup text-center">
                                                                <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DGtxAs2LJe4JhRnLgnGXDSbIFSjF9ecvyOYA4J9zG3DG1eFGbZ4H45UW3is6zrnnzMj6nfStP3QFh49aHfdYUOA3gqB8KxrlKfFGe36tgpzk22fO2UHeq16QpCCuyucqz_P.API_23_24_" rel="nofollow" data-container="body" data-placement="left" data-toggle="tooltip" >
                                    <i class="fa fa-align-justify"></i>
                                    <div class="tooltip_title_wrapper hidden">
                                        <p>AER Compact 60 IV wzmacniacz do instrumentów akustycznych</p>
                                    </div>
                                </a>
                                                                                                                                                                    <a href="/produkt-wzmacniacze-i-kolumny-gitarowe-basowe/aer-compact-60-iv-wzmacniacz-do-instrumentow-akustycznych.html"><i class="fa fa-link"></i></a>
                                                            </div>
                            <ul class="features">
                                                            </ul>
                        </div>
                        <div class="col-lg-3 col-sm-4 col-xs-12 price">
                            <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DGtxAs2LJe4JhRnLgnGXDSbIFSjF9ecvyOYA4J9zG3DG1eFGbZ4H45UW3is6zrnnzMj6nfStP3QFh49aHfdYUOA3gqB8KxrlKfFGe36tgpzk22fO2UHeq16QpCCuyucqz_P.API_23_24_" rel="nofollow"><span class="price lead">5 339,00 PLN</span></a>
                            <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DGtxAs2LJe4JhRnLgnGXDSbIFSjF9ecvyOYA4J9zG3DG1eFGbZ4H45UW3is6zrnnzMj6nfStP3QFh49aHfdYUOA3gqB8KxrlKfFGe36tgpzk22fO2UHeq16QpCCuyucqz_P.API_23_24_" rel="nofollow" class="btn btn-success btn-success-outlined btn-icon-right">Przejdź do sklepu <i class="fa fa-angle-right"></i></a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!---- product ends here ---->
            <!---- product starts here ---->
        <div class="col-lg-3 col-md-4 col-sm-6 col-xs-12 product-wrapper-grid">
            <div class="product normal">
                <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DRDU6XnERSjXULtL6p%2524sKFta5eVQHNEnOV6qfSFiyRlTeoqD3LLfYLNZBO7B6UPuVrCVRRsLdxxi%2524gGoby7Hf7rL53Frw%252AFRt2%2524BSq0PbgvRXc%2524laB2UBtIt24Bn%252AjwG7_P.API_24_24_" rel="nofollow">
                    <div class="image">
                        <img class="img-responsive" src="http://offers.gallery/p-a4-d4-a4d462ec0940a9784d71fc90b43f33a2500x500/ik-multimedia-irig-mic-studio-xlr-mikrofon-studyjny.jpg" title="Ik multimedia irig mic studio xlr - mikrofon studyjny" />
                    </div>
                </a>
                <div class="product-details">
                    <div class="row">
                        <div class="col-lg-9 col-sm-8 col-xs-12 title-features">
                            <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DRDU6XnERSjXULtL6p%2524sKFta5eVQHNEnOV6qfSFiyRlTeoqD3LLfYLNZBO7B6UPuVrCVRRsLdxxi%2524gGoby7Hf7rL53Frw%252AFRt2%2524BSq0PbgvRXc%2524laB2UBtIt24Bn%252AjwG7_P.API_24_24_" rel="nofollow">
                                <h5 class="title">Ik multimedia irig mic studio xlr - mikrofon studyjny</h5>
                            </a>
                            <div class="product-details-popup text-center">
                                                                <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DRDU6XnERSjXULtL6p%2524sKFta5eVQHNEnOV6qfSFiyRlTeoqD3LLfYLNZBO7B6UPuVrCVRRsLdxxi%2524gGoby7Hf7rL53Frw%252AFRt2%2524BSq0PbgvRXc%2524laB2UBtIt24Bn%252AjwG7_P.API_24_24_" rel="nofollow" data-container="body" data-placement="left" data-toggle="tooltip" >
                                    <i class="fa fa-align-justify"></i>
                                    <div class="tooltip_title_wrapper hidden">
                                        <p>IK Multimedia iRig Mic Studio XLR iRig Mic Studio XLR to ultra-kompaktowy mikrofon kardioidalny studyjny objętościowy przeznaczony do wykorzystania w typowej konfiguracji studyjnej albo do...</p>
                                    </div>
                                </a>
                                                                                                                                                                    <a href="/produkt-mikrofony/ik-multimedia-irig-mic-studio-xlr-mikrofon-studyjny.html"><i class="fa fa-link"></i></a>
                                                            </div>
                            <ul class="features">
                                                            </ul>
                        </div>
                        <div class="col-lg-3 col-sm-4 col-xs-12 price">
                            <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DRDU6XnERSjXULtL6p%2524sKFta5eVQHNEnOV6qfSFiyRlTeoqD3LLfYLNZBO7B6UPuVrCVRRsLdxxi%2524gGoby7Hf7rL53Frw%252AFRt2%2524BSq0PbgvRXc%2524laB2UBtIt24Bn%252AjwG7_P.API_24_24_" rel="nofollow"><span class="price lead">499,00 PLN</span></a>
                            <a target="_blank" href="/click%252FClick%252FOffer%252F%253Fclick%253DRDU6XnERSjXULtL6p%2524sKFta5eVQHNEnOV6qfSFiyRlTeoqD3LLfYLNZBO7B6UPuVrCVRRsLdxxi%2524gGoby7Hf7rL53Frw%252AFRt2%2524BSq0PbgvRXc%2524laB2UBtIt24Bn%252AjwG7_P.API_24_24_" rel="nofollow" class="btn btn-success btn-success-outlined btn-icon-right">Przejdź do sklepu <i class="fa fa-angle-right"></i></a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!---- product ends here ---->
    

    </div>
    <div class="row">
        <div class="col-xs-12 text-center" data-links='keep-view'>
            
<!--  ==========  -->
<!--  = Pagination =  -->
<!--  ==========  -->
<ul class="pagination">
        
            <li class="active"><a href="/kategoria-muzyka/--1.html">1</a></li>
            <li ><a href="/kategoria-muzyka/--2.html">2</a></li>
            <li ><a href="/kategoria-muzyka/--3.html">3</a></li>
            <li ><a href="/kategoria-muzyka/--4.html">4</a></li>
            <li ><a href="/kategoria-muzyka/--5.html">5</a></li>
            <li ><a href="/kategoria-muzyka/--6.html">6</a></li>
            <li ><a href="/kategoria-muzyka/--7.html">7</a></li>
            <li ><a href="/kategoria-muzyka/--8.html">8</a></li>
            <li ><a href="/kategoria-muzyka/--9.html">9</a></li>
            <li ><a href="/kategoria-muzyka/--10.html">10</a></li>
            <li ><a href="/kategoria-muzyka/--11.html">11</a></li>
            <li ><a href="/kategoria-muzyka/--12.html">12</a></li>
    
            <li>
            <span>...</span>
        </li>
        <li ><a href="/kategoria-muzyka/--1074.html">1074</a></li>
                <li>
            <a href="/kategoria-muzyka/--2.html" class="next">Następna</a>
        </li>
    </ul> <!-- /pagination -->
        </div>
    </div>

    </div>


    </div>

    </div>

    <footer>
        <div class="container">
            <div class="row">
                <div class="col-md-5">
                    <h5>O nas</h5>
                    <p>Porownywarka.co to serwis pozwalający na porównanie cen w najlepszych sklepach internetowych w
                        Polsce. Został stworzony, by ułatwić użytkownikom Internetu znalezienie najniższych cen i
                        wygodne e-zakupy. Porównaj oferty kilku tysięcy sklepów internetowych.</p>
                </div>
                <div class="col-md-7">
                    <h5>Dla sklepów</h5>
                    <p>Chcesz, aby znalazła się tutaj również oferta Twojego sklepu? Operatorem danych dla
                        serwisu Porownywarka.co jest Nokaut.pl, porównywarka cen i sieć reklamowa odwiedzana przez kilka
                        milionów użytkowników każdego miesiąca. Skontaktuj się skorzystaj z kontakt@nokaut.pl.</p>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    Copyright © 2023. Wszystkie prawa zastrzeżone.
                    <a href="http://localhost:8000/mapa-kategorii">Mapa kategorii</a>
                </div>
            </div>
        </div>
    </footer>

    <div id="modal-preloader" class="modal-backdrop fade in text-center" style="display:none;padding-top:100px;"><img
                src="/images/progress-circle-info.svg"></div>
        <script src="/js/bootstrap.min.js"></script>
    <script src="/js/owl.carousel.min.js"></script>
    <script src="/js/jquery.bxslider.min.js"></script>
    <script src="/js/jquery.growl.js" type="text/javascript"></script>
    <script src="/js/common.js"></script>


    <script src="/js/isotope.pkgd.min.js"></script>

            <script type="text/javascript">
            $(function () {
                if ('box' == "list") {
                    $("#category-view-list").trigger("click");
                } else {
                    $("#category-view-grid").trigger("click");
                }
            });
        </script>
    </body>
</html>
";s:10:" * version";s:3:"1.0";s:13:" * statusCode";i:200;s:13:" * statusText";s:2:"OK";s:10:" * charset";N;}